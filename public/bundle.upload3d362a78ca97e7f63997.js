/*! For license information please see bundle.upload3d362a78ca97e7f63997.js.LICENSE.txt */
(()=>{var e={591:(e,t,n)=>{"use strict";n.d(t,{Z:()=>d});var s=n(81),r=n.n(s),a=n(645),i=n.n(a),o=n(667),l=n.n(o),u=new URL(n(272),n.b),c=i()(r());c.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;700&family=Quicksand:wght@400;700&display=swap);"]);var h=l()(u);c.push([e.id,'*::before, *::after, *{\r\n    margin:0;\r\n    padding:0;\r\n    box-sizing:border-box;\r\n    scroll-behavior : smooth;\r\n    font-family: \'Poppins\', sans-serif;\r\n}\r\n\r\n.logo:hover, .logo:focus{\r\n    cursor:pointer;\r\n}\r\n\r\n\r\nheader > nav{\r\n    --primary-color : #3D5A80;\r\n    /* background-color:#1E2233; */\r\n    \r\n    color:white;\r\n    display:flex;\r\n    justify-content: space-around;\r\n    align-items:center;\r\n    padding:20px 0;\r\n    font-size:18px;\r\n\r\n    background-color:var(--primary-color);\r\n    \r\n}\r\n\r\nheader nav ul{\r\n    display:flex;\r\n    width:60%;\r\n    justify-content: space-evenly;\r\n}\r\n\r\nheader nav ul li{\r\n    list-style:none;\r\n}\r\nheader nav ul li a{\r\n    text-decoration:none;\r\n    color:white;\r\n}\r\n\r\nnav ul li a::after{\r\n    content: "";\r\n    height:2px;\r\n    margin-top:2px;\r\n    width:0;\r\n    display:block;\r\n    background-color:#ffffff;\r\n    transition:.3s;\r\n}\r\nnav ul li a:hover::after{\r\n    width:100%;\r\n}\r\n\r\n.container{\r\n    display:flex;\r\n    justify-content: space-between;\r\n    margin-top:50px;    \r\n}\r\n.right-image{\r\n    flex-basis:50%;\r\n}\r\n.overview{\r\n    flex-basis:1;\r\n    max-width:38%;\r\n    margin:3rem auto;\r\n\r\n}\r\n\r\n.overview h1{\r\n    text-align:left;\r\n    font-size:1.9rem;\r\n    margin-bottom:20px;\r\n}\r\n.overview p{\r\n    font-size:1rem;\r\n    line-height:1.5rem;\r\n\r\n}\r\n.overview, .right-image{\r\n    padding:20px;\r\n}\r\nimg{\r\n    max-width:100%;\r\n}\r\n.button{\r\n    margin-top:3rem;\r\n    display:inline-block;\r\n    border:1px solid #1E2233;\r\n    padding:8px 15%;\r\n    text-align:center;\r\n    border-radius: 5px;\r\n    background-color:#1E2233;\r\n    color:white;\r\n    transition:.2s;\r\n}\r\n\r\n.button:hover, .button:focus{\r\n    cursor: pointer;\r\n    background-color: #384760;\r\n}\r\n\r\n#our-team h1{\r\n    text-align:center;\r\n    margin-top:100px;\r\n    margin-bottom:40px;\r\n    color:black;\r\n    \r\n}\r\n#our-team h1::after{\r\n    content:"";\r\n    display:block;\r\n    height:2px;\r\n    width:5%;\r\n    background-color:#9bc1d9;\r\n    margin:2px auto;\r\n}\r\n#our-team .card .image{\r\n    height:150px;\r\n    width: 150px;\r\n}\r\n\r\n#our-team .card .image img{\r\n    height:100%;\r\n    width: 100%;\r\n    border-radius:50%;\r\n    padding:1.5px;\r\n    background-color:#1E2233;\r\n}\r\n\r\n.team{\r\n    min-height:30vh;\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items:center;\r\n}\r\n.content{\r\n    display:flex;\r\n    justify-content: space-evenly;\r\n    flex-wrap:wrap;\r\n    width:100%;\r\n    \r\n}\r\n.card{\r\n    border-radius:20px;\r\n    background : #fff;\r\n    position:relative;\r\n    margin-top:20px;\r\n    width:280px;\r\n    box-shadow : 3px 2px 0 rgba(50, 50, 50, 0.2);\r\n}\r\n\r\n.card::before{\r\n    content : "";\r\n    position:absolute;\r\n    background:#3D5A80;\r\n    width:100%;\r\n    min-height:50%;\r\n    border-radius : 20px 20px 0 0;\r\n}\r\n\r\n.card-content{\r\n    display:flex;\r\n    flex-direction: column;\r\n    align-items:center;\r\n    position:relative;\r\n    z-index:1;\r\n    padding:30px;\r\n    text-align:center;\r\n}\r\n.card-content p:nth-child(1){\r\n    font-size:20px;\r\n    font-weight:500;\r\n}\r\n\r\n.card-content p:nth-child(2){\r\n    font-size:15px;\r\n}\r\n\r\n.bio-button{\r\n    padding:3px 14px;\r\n    margin-top:20px;\r\n    border-radius:15px;\r\n    background:#3D5A80;\r\n    color:white;\r\n    transition:.3s;\r\n}\r\n.bio-button:hover, .bio-button:focus{\r\n    cursor: pointer;\r\n    background-color:#6a34b1;\r\n}\r\n\r\n\r\nfooter{\r\n    margin-top:100px;\r\n    min-height:15vh;\r\n    background-color:#3D5A80;\r\n    color:white;\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items:center;\r\n}\r\n\r\n\r\narticle > .wrapper{\r\n    max-width:1280px;\r\n    margin:0 auto;\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items:center;\r\n    flex-direction:column;\r\n}\r\n\r\n\r\n\r\n.faq h1{\r\n    text-align:center;\r\n    margin-bottom:70px;\r\n    font-size:2.1rem;\r\n}\r\n\r\n.accordion{\r\n    position:relative;\r\n    box-shadow : 12px 12px 10px 0 rgba(83,83,83,.3); \r\n    width:1080px;\r\n    height:100px;\r\n    margin-bottom:50px;\r\n    overflow:hidden;\r\n}\r\n.accordion:hover{\r\n    cursor: pointer;\r\n}\r\n\r\n.wrapper .accordion{\r\n    border : 1px solid rgba(0,0,0,0.3);\r\n    padding:30px 50px;\r\n    border-radius:18px;\r\n    transition : .3s;\r\n\r\n}\r\n.wrapper .accordion p{\r\n    max-width:88%;\r\n    color: #5B5B5B;\r\n}\r\n.wrapper .accordion h2{\r\n    font-size:1.5rem;\r\n    margin-bottom:30px;\r\n    font-weight:500;\r\n\r\n}\r\n.accordion > svg{\r\n    max-width:40px;\r\n    position:absolute;\r\n    top:50%;\r\n    right:50px;\r\n    transform:translateY(-50%);\r\n}\r\n\r\n.active {\r\n    height:250px;\r\n}\r\n\r\n.more-questions{\r\n    background-color:#3D5A80;\r\n    display:block;\r\n    width:200px;\r\n    margin:0 auto;\r\n    text-align:center;\r\n    color:white;\r\n    text-decoration:none;\r\n    padding:20px 20px;\r\n    border-radius:10px;\r\n    transition:.3s;\r\n}\r\n.more-questions:hover{\r\n    background-color:#384760\r\n}\r\n\r\n.sosmed{\r\n    display:flex;\r\n    flex-direction:column;\r\n    position:absolute;\r\n    top:10px;\r\n    right:10px;\r\n}\r\n.sosmed svg{\r\n    max-width:24px;\r\n}\r\n\r\n\r\n\r\n.faqs h1:nth-child(1){\r\n    font-weight:300;\r\n    text-align:center;\r\n    font-size:2rem;\r\n    margin-top:80px;\r\n}\r\n.faqs h1:nth-child(2){\r\n    font-weight:500;\r\n    font-size:2.5rem;\r\n    text-align:center;\r\n}\r\n.faqs h1:nth-child(2) + p{\r\n    font-size:1.2rem;\r\n    text-align:center;\r\n    color:#929292;\r\n    margin-top:8px;\r\n}\r\n.faqs header{\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n}\r\n\r\n.faqs .search{\r\n    margin-top:30px;\r\n    padding:5px 10px;\r\n    position:relative;\r\n}\r\n.faqs .search input{\r\n    padding:10px 50px;\r\n    border-radius:10px;\r\n    width:400px;\r\n    border: 1px solid #777777;\r\n}\r\n\r\n.faqs .search svg{\r\n    position:absolute;\r\n    height:25px;\r\n    left:20px;\r\n    top:14px;\r\n}\r\n\r\n.faqs .wrapper{\r\n    margin-top:70px;\r\n}\r\n\r\n.upload-container{\r\n    min-height:65vh;\r\n    background : linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.3)),url('+h+");\r\n    background-size:100% 100%;\r\n    color:white;\r\n    display:flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    flex-direction:column;\r\n}\r\n\r\n.upload-wrapper{\r\n    width:60%;\r\n    min-height:250px;\r\n    border-radius:20px;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n    background-color:white;\r\n    color:black;\r\n    flex-direction:column;\r\n    text-align:center;\r\n    position:relative;\r\n    \r\n}\r\n\r\n.upload-wrapper svg{\r\n    max-width:60px;\r\n    margin:0;\r\n}\r\n.upload-wrapper p{\r\n    font-size:1.5rem;\r\n    font-weight:500;\r\n    margin-bottom:20px;\r\n}\r\n.upload-wrapper form{\r\n    cursor:pointer;\r\n    position:relative;\r\n}\r\n\r\n.camera{\r\n    background-color:#3D5A80;\r\n    width:100%;\r\n    position:absolute;\r\n    bottom:0;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n    border-radius:0 0 20px 20px;\r\n    cursor:pointer;\r\n}\r\n.camera svg{\r\n    max-width:35px;\r\n}\r\n\r\n.button-start{\r\n    background-color:#3D5A80;\r\n    padding:10px 40px;\r\n    border-radius:12px;   \r\n    cursor:pointer;\r\n}\r\n\r\n.upload-container h1{\r\n    font-weight:700;\r\n    font-size:2rem;\r\n    text-align:center;\r\n    width:40%;\r\n}\r\n\r\n.upload-container{\r\n    margin-bottom:50px;\r\n}\r\n\r\n.content-details{\r\n    display:flex;\r\n    justify-content: space-around;\r\n    padding:30px;\r\n    margin: 60px;\r\n}\r\n\r\n.content-details .how-to{\r\n    background-color:white;\r\n    flex-basis:50%;\r\n\r\n}\r\n.content-details .how-to h1{\r\n    text-align:center;\r\n    margin-bottom: 30px;\r\n}\r\n\r\n.content-details .right-image{\r\n    flex-basis:50%;\r\n}\r\n\r\n.row{\r\n    margin: 10px;\r\n}\r\n.row .step{\r\n    margin:10px;\r\n    overflow:auto;\r\n}\r\n.row img {\r\n    float:left;\r\n    height: 25px;\r\n}\r\n\r\n.on-predict .image{\r\n    display:block;\r\n}\r\n",""]);const d=c},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",s=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),s&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),s&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,s,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(s)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(i[l]=!0)}for(var u=0;u<e.length;u++){var c=[].concat(e[u]);s&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),t.push(c))}},t}},667:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},81:e=>{"use strict";e.exports=function(e){return e[1]}},720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function s(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=s;var r={},a={};function i(e,t){var n,s,i;return t?(i=0<=(e>>>=0)&&e<256)&&(s=a[e])?s:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(s=r[e])?s:(n=l(e,e<0?-1:0,!1),i&&(r[e]=n),n)}function o(e,t){if(isNaN(e))return t?b:m;if(t){if(e<0)return b;if(e>=p)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,s){return new n(e,t,s)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return m;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return c(e.substring(1),t,n).neg();for(var r=o(u(n,8)),a=m,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var d=o(u(n,l));a=a.mul(d).add(o(h))}else a=(a=a.mul(r)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,g=i(1<<24),m=i(0);n.ZERO=m;var b=i(0,!0);n.UZERO=b;var x=i(1);n.ONE=x;var y=i(1,!0);n.UONE=y;var w=i(-1);n.NEG_ONE=w;var v=l(-1,2147483647,!1);n.MAX_VALUE=v;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(r),c=(a.sub(l.mul(r)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return s(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(s(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(x)},S.neg=S.negate,S.add=function(e){s(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,d+=(p+=r+u)>>>16,c+=(d+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(e){return s(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return m;if(s(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return m;if(this.eq(I))return e.isOdd()?I:m;if(e.eq(I))return this.isOdd()?I:m;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,b=0,x=0,y=0;return x+=(y+=i*p)>>>16,b+=(x+=a*p)>>>16,x&=65535,b+=(x+=i*d)>>>16,f+=(b+=r*p)>>>16,b&=65535,f+=(b+=a*d)>>>16,b&=65535,f+=(b+=i*c)>>>16,f+=n*p+r*d+a*c+i*u,l((x&=65535)<<16|(y&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(s(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:m;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return y;a=b}else{if(this.eq(I))return e.eq(x)||e.eq(w)?I:e.eq(I)?x:(n=this.shr(1).div(e).shl(1)).eq(m)?e.isNegative()?x:w:(r=this.sub(e.mul(n)),a=n.add(r.div(e)));if(e.eq(I))return this.unsigned?b:m;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=m}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=x),a=a.add(d),r=r.sub(p)}return a},S.div=S.divide,S.modulo=function(e){return s(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.and=function(e){return s(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return s(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return s(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(s(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,s){return s?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},377:(e,t,n)=>{var s=n(832),r=n(652),a=n(801),i=n(30),o=n(618),l=n(49),u=n(971);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},832:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.alea=l}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.tychei=l}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor128=l}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),r=0,a=-32;a<l;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},971:function(e,t,n){var s;!function(r,a,i){var o,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=255;function p(e,t,n){var s=[],d=b(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(r.crypto||r.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,x(a)]}}():e,3),s),p=new f(s),y=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,b(x(p.S),a),(t.pass||n||function(e,t,n,s){return s&&(s.S&&g(s,p),e.state=function(){return g(p,{})}),n?(i.random=e,t):e})(y,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=d&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=d&r+1],n=n*l+i[d&(i[r]=i[a=d&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(l)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(m(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function b(e,t){for(var n,s=e+"",r=0;r<s.length;)t[d&r]=d&(n^=19*t[d&r])+s.charCodeAt(r++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(b(i.random(),a),e.exports){e.exports=p;try{o=n(42)}catch(e){}}else void 0===(s=function(){return p}.call(t,n,t,e))||(e.exports=s)}("undefined"!=typeof self?self:this,[],Math)},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,s=0;s<t.length;s++)if(t[s].identifier===e){n=s;break}return n}function s(e,s){for(var a={},i=[],o=0;o<e.length;o++){var l=e[o],u=s.base?l[0]+s.base:l[0],c=a[u]||0,h="".concat(u," ").concat(c);a[u]=c+1;var d=n(h),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var f=r(p,s);s.byIndex=o,t.splice(o,0,{identifier:h,updater:f,references:1})}i.push(h)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=s(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var o=n(a[i]);t[o].references--}for(var l=s(e,r),u=0;u<a.length;u++){var c=n(a[u]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}a=l}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var s=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var s="";n.supports&&(s+="@supports (".concat(n.supports,") {")),n.media&&(s+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(s+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),s+=n.css,r&&(s+="}"),n.media&&(s+="}"),n.supports&&(s+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(s,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},272:(e,t,n)=>{"use strict";e.exports=n.p+"pineapple2.jpg"},410:()=>{},628:()=>{},601:()=>{},792:()=>{},977:()=>{},42:()=>{}},t={};function n(s){var r=t[s];if(void 0!==r)return r.exports;var a=t[s]={id:s,loaded:!1,exports:{}};return e[s].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var s=t.getElementsByTagName("script");s.length&&(e=s[s.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>Wa,computeFlatOffset:()=>ei,computeOutShape:()=>Va,getNormalizedAxes:()=>qa,isSliceContinous:()=>Qa,maskToAxes:()=>Ua,parseSliceParams:()=>ti,sliceInfo:()=>ni,startForAxis:()=>Za,startIndicesWithElidedDims:()=>Ka,stopForAxis:()=>Ja,stopIndicesWithElidedDims:()=>Xa,stridesForAxis:()=>Ya,stridesWithElidedDims:()=>Ga});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>jc,computeOutShape:()=>Hc,segOpComputeOptimalWindowSize:()=>Gc});var s={};n.r(s),n.d(s,{ERF_A1:()=>hc,ERF_A2:()=>dc,ERF_A3:()=>pc,ERF_A4:()=>fc,ERF_A5:()=>gc,ERF_P:()=>cc,PARALLELIZE_THRESHOLD:()=>Yu,RowPartitionType:()=>Hu,SELU_SCALE:()=>uc,SELU_SCALEALPHA:()=>lc,applyActivation:()=>Bl,assertAndGetBroadcastShape:()=>za,assertAxesAreInnerMostDims:()=>zo,assertParamsConsistent:()=>Vu,assignToTypedArray:()=>vc,axesAreInnerMostDims:()=>_o,calculateShapes:()=>oc,checkEinsumDimSizes:()=>Cc,checkPadOnDimRoundingMode:()=>_i,combineLocations:()=>Oo,combineRaggedTensorToTensorShapes:()=>ju,complexWithEvenIndex:()=>xc,complexWithOddIndex:()=>yc,computeConv2DInfo:()=>Si,computeConv3DInfo:()=>Ni,computeDefaultPad:()=>$i,computeDilation2DInfo:()=>vi,computeOptimalWindowSize:()=>Zu,computeOutAndReduceShapes:()=>Lo,computeOutShape:()=>Gu,computePool2DInfo:()=>ki,computePool3DInfo:()=>Ii,convertConv2DDataFormat:()=>Di,decodeEinsumEquation:()=>Nc,eitherStridesOrDilationsAreOne:()=>Fi,expandShapeToKeepDim:()=>Mo,exponent:()=>Ic,exponents:()=>kc,fromStringArrayToUint8:()=>Kc,fromUint8ToStringArray:()=>qc,getAxesPermutation:()=>Bo,getBroadcastDims:()=>La,getComplexWithIndex:()=>wc,getEinsumComputePath:()=>Tc,getEinsumPermutation:()=>$c,getFusedBiasGradient:()=>zl,getFusedDyActivation:()=>Ml,getImageCenter:()=>Ju,getInnerMostAxes:()=>Wo,getPermuted:()=>ec,getRaggedRank:()=>Ku,getReductionAxes:()=>Ma,getReshaped:()=>Qu,getReshapedPermuted:()=>tc,getRowPartitionTypesHelper:()=>qu,getSliceBeginCoords:()=>nc,getSliceSize:()=>sc,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Fc,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Dc,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>_c,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Mc,getSparseReshapeInputOutputMismatchErrorMessage:()=>Bc,getSparseReshapeInputOutputMultipleErrorMessage:()=>zc,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Oc,getSparseReshapeNegativeOutputDimErrorMessage:()=>Lc,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Vc,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Pc,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Wc,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Uc,getUndoAxesPermutation:()=>Po,isIdentityPermutation:()=>Ec,log:()=>$s,mergeRealAndImagArrays:()=>mc,prepareAndValidate:()=>rc,prepareSplitSize:()=>Ac,segment_util:()=>t,shouldFuse:()=>Pl,slice_util:()=>e,splitRealAndImagArrays:()=>bc,tupleValuesAreOne:()=>Ai,upcastType:()=>vr,validateDefaultValueShape:()=>Xu,validateInput:()=>ic,validateUpdateShape:()=>ac,warn:()=>Ns});var r={};n.r(r),n.d(r,{addImpl:()=>xw,bincountImpl:()=>cv,bincountReduceImpl:()=>hv,castImpl:()=>pw,ceilImpl:()=>fv,concatImpl:()=>wv,equalImpl:()=>sk,expImpl:()=>fk,expm1Impl:()=>yk,floorImpl:()=>Lk,gatherNdImpl:()=>Gk,gatherV2Impl:()=>jk,greaterEqualImpl:()=>Zk,greaterImpl:()=>Kk,lessEqualImpl:()=>cI,lessImpl:()=>oI,linSpaceImpl:()=>pI,logImpl:()=>gI,maxImpl:()=>RI,maximumImpl:()=>DI,minimumImpl:()=>VI,multiplyImpl:()=>Xv,negImpl:()=>QI,notEqualImpl:()=>oS,prodImpl:()=>wS,raggedGatherImpl:()=>IS,raggedRangeImpl:()=>NS,raggedTensorToTensorImpl:()=>AS,rangeImpl:()=>DS,rsqrtImpl:()=>HS,scatterImpl:()=>KS,sigmoidImpl:()=>rw,simpleAbsImpl:()=>Cw,sliceImpl:()=>iv,sparseFillEmptyRowsImpl:()=>fN,sparseReshapeImpl:()=>mN,sparseSegmentReductionImpl:()=>xN,sqrtImpl:()=>IN,squaredDifferenceImpl:()=>CN,stridedSliceImpl:()=>FN,stringNGramsImpl:()=>ON,stringSplitImpl:()=>zN,stringToHashBucketFastImpl:()=>PN,subImpl:()=>Nk,tileImpl:()=>HN,topKImpl:()=>KN,transposeImpl:()=>_w,uniqueImpl:()=>e$});var a=n(379),i=n.n(a),o=n(795),l=n.n(o),u=n(569),c=n.n(u),h=n(565),d=n.n(h),p=n(216),f=n.n(p),g=n(589),m=n.n(g),b=n(591),x={};x.styleTagTransform=m(),x.setAttributes=d(),x.insert=c().bind(null,"head"),x.domAPI=l(),x.insertStyleElement=f(),i()(b.Z,x),b.Z&&b.Z.locals&&b.Z.locals;const y=n.p+"pineapple.jpg",w=n.p+"number1.png",v=n.p+"number2.png",k=n.p+"number3.png",I=n.p+"number4.png";class S{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class N{refCount(e){return $("refCount")}incRef(e){return $("incRef")}timerAvailable(){return!0}time(e){return $("time")}read(e){return $("read")}readSync(e){return $("readSync")}readToGPU(e,t){return $("readToGPU")}numDataIds(){return $("numDataIds")}disposeData(e,t){return $("disposeData")}write(e,t,n){return $("write")}move(e,t,n,s,r){return $("move")}createTensorFromTexture(e,t,n){return $("createTensorFromTexture")}memory(){return $("memory")}floatPrecision(){return $("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return $("dispose")}}function $(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function C(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,R(e,t,n)}function T(e,t,n){return Math.max(e,Math.min(t,n))}function E(e){return e%2==0?e:e+1}function R(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function A(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function F(e,t,n=""){A(L(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function D(e){A(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function _(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||q(e)&&!n)for(let s=0;s<e.length;++s)_(e[s],t,n);else t.push(e);return t}function O(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function L(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function M(e){return e%1==0}function z(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function B(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function P(e,t=(e=>0),n,s){return new Promise(((r,a)=>{let i=0;const o=()=>{if(e())return void r();i++;const l=t(i);null!=n&&i>=n?a():null!=s?s(o,l):setTimeout(o,l)};o()}))}function W(e,t){let n=1,s=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${t}`);s=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function U(e,t){const n=t.length;return A((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),A(e.every((e=>M(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function V(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:U(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),s.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),s.push(t))}return{newShape:n,keptDims:s}}function G(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function H(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function j(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function q(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function K(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function X(e){return"string"==typeof e||e instanceof String}function Y(e){return"number"==typeof e}function Z(e){return Array.isArray(e)?Z(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Y(e)?"float32":X(e)?"string":"boolean"==typeof e?"bool":"float32"}function J(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Q(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function ee(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function te(e,t,n,s=!1){const r=new Array;if(1===t.length){const a=t[0]*(s?2:1);for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<a;t++)r[t]=te(e+t*o,i,n,s)}return r}function ne(e,t,n=!1){if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return te(0,e,t,n)}function se(e,t){const n=re(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function re(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function ae(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return ne(e,new Float32Array(n));if("int32"===t)return ne(e,new Int32Array(n));if("bool"===t)return ne(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function ie(e){e.forEach((t=>{A(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function oe(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let t=0;t<e.length-1;++t)s+=n[t]*e[t];return s}function le(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let t=0;t<s.length-1;++t)s[t]=Math.floor(e/n[t]),e-=s[t]*n[t];return s[s.length-1]=e,s}function ue(e){return e&&e.then&&"function"==typeof e.then}class ce{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=he,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(de().getBool("IS_TEST")||de().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];de().getBool("IS_TEST")||de().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(ue(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function he(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function de(){return fe}let pe,fe=null;function ge(){if(null==pe){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}pe=e}return pe}function me(e,t){const n=function(){const e=ge();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const be="Abs",xe="Acos",ye="Acosh",we="Add",ve="AddN",ke="All",Ie="Any",Se="ArgMax",Ne="ArgMin",$e="Asin",Ce="Asinh",Te="Atan",Ee="Atanh",Re="Atan2",Ae="AvgPool",Fe="AvgPoolGrad",De="AvgPool3D",_e="AvgPool3DGrad",Oe="BatchMatMul",Le="BatchToSpaceND",Me="Bincount",ze="BroadcastArgs",Be="Cast",Pe="Ceil",We="ClipByValue",Ue="Complex",Ve="ComplexAbs",Ge="Concat",He="Conv2D",je="Conv2DBackpropFilter",qe="Conv2DBackpropInput",Ke="Conv3D",Xe="Conv3DBackpropFilterV2",Ye="Conv3DBackpropInputV2",Ze="Cos",Je="Cosh",Qe="Cumprod",et="Cumsum",tt="CropAndResize",nt="DenseBincount",st="DepthToSpace",rt="DepthwiseConv2dNative",at="DepthwiseConv2dNativeBackpropFilter",it="DepthwiseConv2dNativeBackpropInput",ot="Diag",lt="Dilation2D",ut="Dilation2DBackpropInput",ct="Dilation2DBackpropFilter",ht="RealDiv",dt="Einsum",pt="Elu",ft="EluGrad",gt="Erf",mt="Equal",bt="Exp",xt="ExpandDims",yt="Expm1",wt="FFT",vt="Fill",kt="FlipLeftRight",It="Floor",St="FloorDiv",Nt="FusedBatchNorm",$t="GatherV2",Ct="GatherNd",Tt="Greater",Et="GreaterEqual",Rt="Identity",At="IFFT",Ft="Imag",Dt="IsFinite",_t="IsInf",Ot="IsNan",Lt="LeakyRelu",Mt="Less",zt="LessEqual",Bt="LinSpace",Pt="Log",Wt="Log1p",Ut="LogicalAnd",Vt="LogicalNot",Gt="LogicalOr",Ht="LRN",jt="LRNGrad",qt="Max",Kt="Maximum",Xt="MaxPool",Yt="MaxPoolGrad",Zt="MaxPool3D",Jt="MaxPool3DGrad",Qt="MaxPoolWithArgmax",en="Mean",tn="Min",nn="Minimum",sn="MirrorPad",rn="Mod",an="Multinomial",on="Multiply",ln="Neg",un="NotEqual",cn="NonMaxSuppressionV3",hn="NonMaxSuppressionV4",dn="NonMaxSuppressionV5",pn="OnesLike",fn="OneHot",gn="Pack",mn="PadV2",bn="Pow",xn="Prelu",yn="Prod",wn="RaggedGather",vn="RaggedRange",kn="RaggedTensorToTensor",In="Range",Sn="Real",Nn="Reciprocal",$n="Relu",Cn="Reshape",Tn="ResizeNearestNeighbor",En="ResizeNearestNeighborGrad",Rn="ResizeBilinear",An="ResizeBilinearGrad",Fn="Relu6",Dn="Reverse",_n="Round",On="Rsqrt",Ln="ScatterNd",Mn="SearchSorted",zn="Select",Bn="Selu",Pn="Slice",Wn="Sin",Un="Sinh",Vn="Sign",Gn="Sigmoid",Hn="Softplus",jn="Sqrt",qn="Sum",Kn="SpaceToBatchND",Xn="SplitV",Yn="Softmax",Zn="SparseFillEmptyRows",Jn="SparseReshape",Qn="SparseSegmentMean",es="SparseSegmentSum",ts="SparseToDense",ns="SquaredDifference",ss="Square",rs="StridedSlice",as="StringNGrams",is="StringSplit",os="StringToHashBucketFast",ls="Sub",us="Tan",cs="Tanh",hs="Tile",ds="TopK",ps="Transform",fs="Transpose",gs="Unique",ms="Unpack",bs="UnsortedSegmentSum",xs="ZerosLike",ys="Step",ws="FromPixels",vs="RotateWithOffset",ks="_FusedMatMul",Is="FusedConv2D",Ss="FusedDepthwiseConv2D";function Ns(...e){de().getBool("IS_TEST")||de().getBool("PROD")||console.warn(...e)}function $s(...e){de().getBool("IS_TEST")||de().getBool("PROD")||console.log(...e)}const Cs=me("kernelRegistry",(()=>new Map)),Ts=me("gradRegistry",(()=>new Map));function Es(e,t){const n=_s(e,t);return Cs.get(n)}function Rs(e){return Ts.get(e)}function As(e){const t=Cs.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function Fs(e){const{kernelName:t,backendName:n}=e,s=_s(t,n);Cs.has(s)&&Ns(`The kernel '${t}' for backend '${n}' is already registered`),Cs.set(s,e)}function Ds(e){const{kernelName:t}=e;Ts.has(t)&&de().getBool("DEBUG")&&Ns(`Overriding the gradient for '${t}'`),Ts.set(t,e)}function _s(e,t){return`${t}_${e}`}var Os=n(720);const Ls=n.n(Os)()||Os;function Ms(e){return Ls.fromString(e,!0,16)}const zs=Ms("c3a5c85c97cb3127"),Bs=Ms("b492b66fbe98f273"),Ps=Ms("9ae16a3b2f90404f");function Ws(e){return e.xor(e.shru(47))}function Us(e,t,n){const s=e.slice(t,t+n);return Ls.fromBytes(Array.from(s),!0,!0)}function Vs(e,t){return Us(e,t,8)}function Gs(e,t){return Us(e,t,4)}function Hs(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function js(e,t,n=Ms("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function qs(e,t,n,s){return function(e,t,n,s,r,a){r=r.add(e),a=Hs(a.add(r).add(s),21);const i=r;return r=(r=r.add(t)).add(n),a=a.add(Hs(r,44)),[r.add(s),a.add(i)]}(Vs(e,t),Vs(e,t+8),Vs(e,t+16),Vs(e,t+24),n,s)}function Ks(e,t=e.length){const n=Ls.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Ps.add(2*t),s=Vs(e,0).add(Ps),r=Vs(e,t-8);return js(Hs(r,37).mul(n).add(s),Hs(s,25).add(r).mul(n),n)}if(t>=4){const n=Ps.add(2*t);return js(Gs(e,0).shl(3).add(t),Gs(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),s=t+(e[t-1]<<2);return Ws(Ps.mul(n).xor(zs.mul(s))).mul(Ps)}return Ps}(e,t):function(e,t=e.length){const n=Ps.add(2*t),s=Vs(e,0).mul(Bs),r=Vs(e,8),a=Vs(e,t-8).mul(n),i=Vs(e,t-16).mul(Ps);return js(Hs(s.add(r),43).add(Hs(a,30)).add(i),s.add(Hs(r.add(Ps),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Ps.add(2*t),s=Vs(e,0).mul(Ps),r=Vs(e,8),a=Vs(e,t-8).mul(n),i=Vs(e,t-16).mul(Ps),o=Hs(s.add(r),43).add(Hs(a,30)).add(i),l=js(o,s.add(Hs(r.add(Ps),18)).add(a),n),u=Vs(e,16).mul(n),c=Vs(e,24),h=o.add(Vs(e,t-32)).mul(n),d=l.add(Vs(e,t-24)).mul(n);return js(Hs(u.add(c),43).add(Hs(h,30)).add(d),u.add(Hs(c.add(s),18)).add(h),n)}(e,t);let s=n,r=n.mul(Bs).add(113),a=Ws(r.mul(Ps).add(113)).mul(Ps),i=[Ls.UZERO,Ls.UZERO],o=[Ls.UZERO,Ls.UZERO];s=s.mul(Ps).add(Vs(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{s=Hs(s.add(r).add(i[0]).add(Vs(e,l+8)),37).mul(Bs),r=Hs(r.add(i[1]).add(Vs(e,l+48)),42).mul(Bs),s=s.xor(o[1]),r=r.add(i[0]).add(Vs(e,l+40)),a=Hs(a.add(o[0]),33).mul(Bs),i=qs(e,l,i[1].mul(Bs),s.add(o[0])),o=qs(e,l+32,a.add(o[1]),r.add(Vs(e,l+16))),[a,s]=[s,a],l+=64}while(l!==u);const h=Bs.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),s=Hs(s.add(r).add(i[0]).add(Vs(e,l+8)),37).mul(h),r=Hs(r.add(i[1]).add(Vs(e,l+48)),42).mul(h),s=s.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(Vs(e,l+40))),a=Hs(a.add(o[0]),33).mul(h),i=qs(e,l,i[1].mul(h),s.add(o[0])),o=qs(e,l+32,a.add(o[1]),r.add(Vs(e,l+16))),[a,s]=[s,a],js(js(i[0],o[0],h).add(Ws(r).mul(zs)).add(a),js(i[1],o[1],h).add(s),h)}function Xs(e,t){return"string"===t?Js(e):Ys([e],t)}function Ys(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=_(e)),de().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Zs(){return de().platform.now()}function Js(e,t="utf-8"){return t=t||"utf-8",de().platform.encode(e,t)}function Qs(e,t="utf-8"){return t=t||"utf-8",de().platform.decode(e,t)}class er{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new nr)}profileKernel(e,t,n){let s;const r=()=>{s=n()};let a;const i=Zs();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(const e of s)e.dataSync();a=Promise.resolve({kernelMs:Zs()-i})}if(de().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){const n=s[t];n.data().then((t=>{tr(t,n.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),s,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function tr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const s=e[t];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class nr{logKernelProfile(e,t,n,s,r,a){const i="number"==typeof s?B(`${s}ms`,9):s.error,o=B(e,25),l=t.rank,u=t.size,c=B(t.shape.toString(),14);let h="";for(const e in r){const n=r[e];if(null!=n){const s=n.shape||t.shape,r=s.length;h+=`${e}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function sr(e,t,n,s){const r=ee(t),a=function(e,t,n,s){const r=O(t),a=s[s.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?or(e):e;if(o>1)for(let e=0;e<r/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],rr(l[t+e],0,n).length)}return i}(e,t,n,r),i=t.length,o=ir(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function rr(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:X(e)?`'${e}'`:"bool"===n?ar(e):parseFloat(e.toFixed(7)).toString(),B(s,t)}function ar(e){return 0===e?"false":"true"}function ir(e,t,n,s,r,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[rr(or(e)[0],0,n)]:"bool"===n?[ar(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let s=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(s=or(s),a=or(a)),["["+s.map(((e,t)=>rr(e,r[t],n))).join(", ")+", ..., "+a.map(((e,t)=>rr(e,r[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?or(e):Array.from(e)).map(((e,t)=>rr(e,r[t],n))).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const s=t*h,a=s+h;d.push(...ir(e.slice(s,a),u,n,c,r,!1))}d.push("...");for(let t=o-3;t<o;t++){const s=t*h,a=s+h;d.push(...ir(e.slice(s,a),u,n,c,r,t===o-1))}}else for(let t=0;t<o;t++){const s=t*h,a=s+h;d.push(...ir(e.slice(s,a),u,n,c,r,t===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function or(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class lr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=O(e),null!=n){const e=n.length;A(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||H(t,this.size),this.strides=ee(e)}set(e,...t){0===t.length&&(t=[0]),A(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ur().makeTensor(this.values,this.shape,this.dtype)}}let ur=null,cr=null,hr=null;class dr{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=O(e),this.strides=ee(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return cr.buffer(this.shape,this.dtype,e)}bufferSync(){return cr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ne(this.shape,e,"complex64"===this.dtype)}arraySync(){return ne(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=ur().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Qs(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ur().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=ur().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Qs(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await ur().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(ur().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return cr.print(this,e)}clone(){return this.throwIfDisposed(),cr.clone(this)}toString(e=!1){return sr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),cr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ur().makeVariable(this,e,t,n)}}function pr(){return me("Tensor",(()=>dr))}Object.defineProperty(dr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),pr();class fr extends dr{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!L(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ur().disposeTensor(this),this.dataId=e.dataId,ur().incRef(this,null)}dispose(){ur().disposeVariable(this),this.isDisposedInternal=!0}}var gr,mr,br,xr,yr;Object.defineProperty(fr,Symbol.hasInstance,{value:e=>e instanceof dr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(gr||(gr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(mr||(mr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(br||(br={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(xr||(xr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(yr||(yr={}));const wr={float32:xr,int32:mr,bool:br,complex64:yr};function vr(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return wr[e][t]}function kr(e){return vr(e,"int32")}function Ir(e,t){if(e.dtype===t.dtype)return[e,t];const n=vr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Sr(e,t){return t.some((t=>t.id===e.id))}function Nr(e){const t=[];return $r(e,t,new Set),t}function $r(e,t,n){if(null==e)return;if(e instanceof dr)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=e;for(const e in r){const s=r[e];n.has(s)||(n.add(s),$r(s,t,n))}}function Cr(e){return null!=e.kernelName}class Tr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Er{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Tr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Ns(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new er(this.backendInstance),!0}setupRegisteredKernels(){As(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){As(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof N||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Ns(`Initialization of backend ${e} failed`),Ns(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(t){return Ns(`Initialization of backend ${e} failed`),Ns(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Er.nextTensorId++}nextVariableId(){return Er.nextVariableId++}clone(e){const t=Ar.runKernel(Rt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Ar.runKernel(Be,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Es(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Cr(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Cr(e)){const{kernelName:t,inputs:r,attrs:a}=e;null==this.backendName&&this.backend;const l=Es(t,this.backendName);A(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(s){const e=this.getTensorsForGradient(t,r,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,r=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Cr(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),s&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const s=Rs(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(A(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return a.concat(i)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&X(e[0])&&(r=e.map((e=>Js(e))));const a=s.write(r,t,n),i=new dr(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,s){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:s,dtype:r}=e,a=new dr(s,r,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new fr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*K(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof fr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*K(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=Rs(e);null!=o&&(s=o.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=re(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Nr(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(A(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));A(r instanceof dr,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const s={},r={};for(let e=0;e<t.length;e++)s[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(s[n.id]){a.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],s=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in s)a[s[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];s[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!s&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=se(O(e),"float32");return Ar.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const a=t[r],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[t];if(!L(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=s(t,r),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Fr);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return A(J(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;A(t.every((e=>e instanceof dr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return t.forEach(((e,t)=>{s[t]=e})),this.runKernelFunc({forwardFunc:(s,r)=>(n=e(...t,r),A(n.value instanceof dr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),A(J(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,s)=>{const r=n.gradFunc(e,s),a=Array.isArray(r)?r:[r];A(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),A(a.every((e=>e instanceof dr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Zs(),n=await this.backend.time(e);return n.wallMs=Zs()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Tr;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Rr(){const e=ge();if(null==e._tfengine){const t=new ce(e);e._tfengine=new Er(t)}var t;return t=e._tfengine.ENV,fe=t,ur=()=>e._tfengine,e._tfengine}Er.nextTensorId=0,Er.nextVariableId=0;const Ar=Rr();function Fr(e,t){const n={a:e,b:t};return Ar.runKernel(we,n)}function Dr(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function _r(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Or=de();function Lr(e,t){let n=e;if(q(e))return"string"===t?[]:[e.length];if("object"==typeof e&&"texture"in e){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||q(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&de().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Mr(e,s,[]),s}function Mr(e,t,n){if(n=n||[],!Array.isArray(e)&&!q(e))return void A(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));A(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),A(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let t=0;t<e.length;++t)Mr(e[t],s,n.concat(t))}function zr(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function Br(e,t,n,s="numeric"){if(e instanceof dr)return zr(s,e.dtype,t,n),e;let r=Z(e);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),zr(s,r,t,n),null==e||!q(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const a=Lr(e,r);q(e)||Array.isArray(e)||(e=[e]);const i="string"!==r?Ys(e,r):_(e,[],!0);return Ar.makeTensor(i,a,r)}function Pr(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>Br(e,`${t}[${r}]`,n,s)))}function Wr(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=(...e)=>{Ar.startScope(n);try{const t=s(...e);return ue(t)&&console.error("Cannot return a Promise inside of tidy."),Ar.endScope(t),t}catch(e){throw Ar.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}Or.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Or.registerFlag("IS_BROWSER",(()=>_r())),Or.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Or.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Or.registerFlag("PROD",(()=>!1)),Or.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Or.getBool("DEBUG"))),Or.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Or.registerFlag("IS_TEST",(()=>!1)),Or.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Or.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Or.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Or.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Ur=Wr({complex_:function(e,t){const n=Br(e,"real","complex"),s=Br(t,"imag","complex");F(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return Ar.runKernel(Ue,r)}});function Vr(e,t,n,s){if(null==s&&(s=Z(e)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if("object"==typeof e&&"texture"in e){if("float32"!==s&&"int32"!==s)throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return e.channels=e.channels||"RGBA",Ar.backend.createTensorFromTexture(e,t||n,s)}if(!q(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ie(t);const e=O(t),s=O(n);A(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let e=0;e<n.length;++e){const s=n[e],r=e!==n.length-1||s!==O(t.slice(e));A(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return q(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?Ys(e,s):_(e,[],!0),Ar.makeTensor(e,t,s)}function Gr(e,t,n){return Vr(e,t,Lr(e,n),n)}const Hr={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function jr(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,s=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=4,s.set(n,r),r+=n.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:qr(await Promise.all(s)),specs:n}}function qr(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const Kr="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Xr(e){return Kr?Buffer.byteLength(e):new Blob([e]).size}function Yr(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let s=0;return e.forEach((e=>{n.set(new Uint8Array(e),s),s+=e.byteLength})),n.buffer}function Zr(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Jr(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Xr(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Xr(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Qr(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let r=0;r<s.length;r++){const i=s[r],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[r]=o}return new Float32Array(r)}}class ea{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ea.instance&&(ea.instance=new ea),ea.instance}static registerSaveRouter(e){ea.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ea.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ea.getHandlers(e,"save")}static getLoadHandlers(e,t){return ea.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?ea.getInstance().loadRouters:ea.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const ta="tensorflowjs",na="models_store",sa="model_info_store";function ra(){if(!de().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function aa(e){const t=e.result;t.createObjectStore(na,{keyPath:"modelPath"}),t.createObjectStore(sa,{keyPath:"modelPath"})}class ia{constructor(e){if(this.indexedDB=ra(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(ta,1);s.onupgradeneeded=()=>aa(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(na,"readonly"),s=t.objectStore(na).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{const s=Jr(t),a=r.transaction(sa,"readwrite");let i=a.objectStore(sa);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(na,"readwrite");const o=l.objectStore(na).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});o.onsuccess=()=>e({modelArtifactsInfo:s}),o.onerror=e=>{i=a.objectStore(sa);const t=i.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(o.error)),t.onerror=e=>(r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}ia.URL_SCHEME="indexeddb://";const oa=e=>{return de().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ia.URL_SCHEME)?(t=e.slice(ia.URL_SCHEME.length),new ia(t)):null;var t};ea.registerSaveRouter(oa),ea.registerLoadRouter(oa);class la{constructor(){this.indexedDB=ra()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(ta,1);n.onupgradeneeded=()=>aa(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(sa,"readonly"),a=r.objectStore(sa).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ia.URL_SCHEME)?t.slice(ia.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open(ta,1);s.onupgradeneeded=()=>aa(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(sa,"readwrite"),i=a.objectStore(sa),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=i.delete(e),a=()=>{l=r.transaction(na,"readwrite");const s=l.objectStore(na).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=a,s.onerror=e=>(a(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const ua="/",ca="tensorflowjs_models",ha="info",da="model_topology",pa="weight_specs",fa="weight_data",ga="model_metadata";function ma(e){return{info:[ca,e,ha].join(ua),topology:[ca,e,da].join(ua),weightSpecs:[ca,e,pa].join(ua),weightData:[ca,e,fa].join(ua),modelMetadata:[ca,e,ga].join(ua)}}function ba(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function xa(e){const t=e.split(ua);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ua)}class ya{constructor(e){if(!de().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ma(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Jr(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Kr)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,s=t.length;e<s;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(e){throw ba(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Kr){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}ya.URL_SCHEME="localstorage://";const wa=e=>{return de().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ya.URL_SCHEME)?(t=e.slice(ya.URL_SCHEME.length),new ya(t)):null;var t};ea.registerSaveRouter(wa),ea.registerLoadRouter(wa);class va{constructor(){A(de().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),A("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ca+ua,n=ua+ha;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(t)&&r.endsWith(n)&&(e[xa(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;const n=ma(e=(t=e).startsWith(ya.URL_SCHEME)?t.slice(ya.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return ba(n),s}}class ka{constructor(){this.managers={}}static getInstance(){return null==ka.instance&&(ka.instance=new ka),ka.instance}static registerManager(e,t){A(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),A(e.length>0,(()=>"scheme must not be an empty string."));const n=ka.getInstance();A(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=ka.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ka.getInstance().managers)}}class Ia{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&de().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}}if(de().get("IS_BROWSER")){de().setPlatform("browser",new Ia);try{ka.registerManager(ya.URL_SCHEME,new va)}catch(e){}try{ka.registerManager(ia.URL_SCHEME,new la)}catch(e){}}let Sa;function Na(e,t="float32",n){return t=t||"float32",ie(e),new lr(e,t,n)}de().get("IS_NODE")&&!de().get("IS_BROWSER")&&de().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=de().global.fetch?de().global.fetch(e,t):(null==Sa&&(Sa=n(410)),Sa(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const $a=Wr({cast_:function(e,t){const n=Br(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:t};return Ar.runKernel(Be,s,r)}}),Ca=Wr({clone_:function(e){const t={x:Br(e,"x","clone","string_or_numeric")};return Ar.runKernel(Rt,t)}});function Ta(e){return new Promise((e=>setTimeout(e))).then(e)}Rr(),cr={buffer:Na,cast:$a,clone:Ca,print:function(e,t=!1){console.log(e.toString(t))}};class Ea{constructor(e){if(!de().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ea.URL_SCHEME)&&(e=e.slice(Ea.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Zr(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await Ta((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ta((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Jr(e)}}}}function Ra(e,t,n,s){!function(e){A(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){A(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),A(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),A(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++r/e.length*(s-n);return t(i),a})),a))))}async function Aa(e,t){null==t&&(t={});const n=null==t.fetchFunc?de().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await Ra(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Ra(r,t.onProgress,.5,1)}Ea.URL_SCHEME="downloads://",ea.registerSaveRouter((e=>de().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ea.URL_SCHEME)?function(e="model"){return new Ea(e)}(e.slice(Ea.URL_SCHEME.length)):null));class Fa{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(A("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=de().platform.fetch,A(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&A(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Zr(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Jr(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(e,t){let n,s;return null!=e.weightsManifest&&([n,s]=await t(e.weightsManifest)),function(e,t,n){const s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(s.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=n}return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(s.initializerSignature=e.initializerSignature),s}(e,n,s)}(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,a=function(e){const t=[];for(const n of e)t.push(...n.weights);return t}(e),i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+s);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,Yr(await Aa(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Da(e){return null!=e.match(Fa.URL_SCHEME_REGEX)}Fa.URL_SCHEME_REGEX=/^https?:\/\//;const _a=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Da(e))):Da(e),n)return Oa(e,t)}return null};function Oa(e,t){return new Fa(e,t)}function La(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function Ma(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],a=t.length-s-1,i=t[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function za(e,t){const n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let s=e[e.length-r-1];null==s&&(s=1);let a=t[t.length-r-1];if(null==a&&(a=1),1===s)n.unshift(a);else if(1===a)n.unshift(s);else{if(s!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(s)}}return n}let Ba;ea.registerSaveRouter(_a),ea.registerLoadRouter(_a);const Pa=Wr({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=Es(ws,Ar.backendName)){const n={pixels:e},s={numChannels:t};return Ar.runKernel(ws,n,s)}const[l,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(s||n)c=e.data;else if(a||r||o){if(null==Ba)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Ba=new OffscreenCanvas(1,1).getContext("2d")}else Ba=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Ba.canvas.width=l,Ba.canvas.height=u,Ba.drawImage(e,0,0,l,u),c=Ba.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return function(e,t,n){if(D(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Lr(e,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Vr(e,t,s,n)}(h,[u,l,t],"int32")}});function Wa(e,t,n){const s=e.shape.length;A(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),A(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)A(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function Ua(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Va(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function Ga(e,t,n,s){const r=[...e];for(let e=r.length;e<s.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Ha(e,t,n){return n<=e?n:n-(t-1)}function ja(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function qa(e,t,n,s,r,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Ka(i,l,u,s,e),h=Xa(o,l,u,r,e),d=Ga(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=Za(i,s,a,e,t,l),h[t]=Ja(o,r,a,e,t,l),d[t]=Ya(a,t,l);return{begin:c,end:h,strides:d}}function Ka(e,t,n,s,r){const a=[...r],i=ja(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=Ha(t,n,r);let o=s[i];e&1<<i&&(o=0),a[r]=o}return a}function Xa(e,t,n,s,r){const a=[...r],i=ja(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=Number.MAX_SAFE_INTEGER;else{const i=Ha(t,n,r);let o=s[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[r]=o}for(let e=0;e<a.length;e++){const t=r[e];a[e]<0&&(a[e]+=t),a[e]=T(0,a[e],r[e])}return a}function Ya(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function Za(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=T(0,i,l-1),i}function Ja(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=o>0?T(0,i,l):T(-1,i,l-1),i}function Qa(e,t,n){let s=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){s=e;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function ei(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function ti(e,t,n){let s;const r=e.shape.length;let a;return s="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach((e=>{A(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(A(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,a]}function ni(e,t,n,s,r,a,i,o,l){let u;if(null==s?(u=new Array(t.length),u.fill(1)):u=s,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[s]),null!=e.end&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}(h,d);let p=!0,f=!0,g=!0;const m=[],b=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),s=e[t];if(-1===s){m.push(n?1:-1);continue}const r=[d.beginMask&1<<t,d.endMask&1<<t],a=[d.strides[t]>0?0:-1,d.strides[t]>0?s:s-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?s+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=s)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=si(d.begin[t],0,d.strides[t],s,r,a),d.end[t]=si(d.end[t],1,d.strides[t],s,r,a);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===s;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):i&&s>=0&&(o=d.strides[t]<0?-s:s,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),m.push(e)}else m.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?b.push(m[t]):-2===t&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>-2!==d.finalShapeGatherIndices[t])),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function si(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{const t=e<0?s+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}class ri{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ai{constructor(){this.classNameMap={}}static getMap(){return null==ai.instance&&(ai.instance=new ai),ai.instance}static register(e){ai.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ii(e){A(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),A("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),A(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),ai.register(e)}function oi(){return Ar}function li(){return Ar.memory()}function ui(e,t){return Ar.tidy(e,t)}function ci(e){Nr(e).forEach((e=>e.dispose()))}function hi(e){return Ar.keep(e)}function di(e,t,n=1){return Ar.registerBackend(e,t,n)}function pi(e){return Ar.customGrad(e)}function fi(e,t){if((q(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&q(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Vr(e,[],[],t)}hr=function(e){de().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class gi extends ri{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return ci(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){A(J(e),(()=>"The f passed in variableGrads(f) must be a function")),A(null==t||Array.isArray(t)&&t.every((e=>e instanceof fr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Ar.registeredVariables)t.push(Ar.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,r=t.length;A((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:a,grads:i}=Ar.gradients(e,t,null,!0);A(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),A(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=s&&s.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&ci(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:fi(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(gi,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const mi=Wr({abs_:function(e){const t=Br(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Ar.runKernel(Ve,e)}{const e={x:t};return Ar.runKernel(be,e)}}}),bi=Wr({add_:function(e,t){let n=Br(e,"a","add"),s=Br(t,"b","add");[n,s]=Ir(n,s);const r={a:n,b:s};return Ar.runKernel(we,r)}}),xi=Wr({all_:function(e,t=null,n=!1){const s={x:Br(e,"x","all","bool")},r={axis:t,keepDims:n};return Ar.runKernel(ke,s,r)}}),yi=Wr({any_:function(e,t=null,n=!1){const s={x:Br(e,"x","any","bool")},r={axis:t,keepDims:n};return Ar.runKernel(Ie,s,r)}}),wi=Wr({argMax_:function(e,t=0){const n={x:Br(e,"x","argMax")},s={axis:t};return Ar.runKernel(Se,n,s)}});function vi(e,t,n,s,r="NHWC",a){return Si(e,[...t,e[3]],n,a,s,null,null,Di(r))}function ki(e,t,n,s,r,a,i="channelsLast"){const[o,l]=Ci(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return Si(e,u,n,s,r,a,!1,i)}function Ii(e,t,n,s,r,a,i="NDHWC"){const[o,l,u]=Ti(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return Ni(e,c,n,s,r,!1,h,a)}function Si(e,t,n,s,r,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=Ci(n),[b,x]=Ci(s),y=Ei(d,b),w=Ei(p,x),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,s,r,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=$i(e,t,n));const a=e[1];return[Ri((e[0]-t+2*s)/n+1,r),Ri((a-t+2*s)/n+1,r)]}([t,n],a,s,e,o);c=r[0],h=r[1]}else if("same"===e){c=Math.ceil(t/s),h=Math.ceil(n/r);const e=Math.max(0,(c-1)*s+a-t),o=Math.max(0,(h-1)*r+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),h=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=Ri((t-a+d+p)/s+1,o),h=Ri((n-i+f+g)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,g,m,y,w,a,o),S=i?f*h:f;let N;return"channelsFirst"===o?N=[l,S,k,I]:"channelsLast"===o&&(N=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:e,outShape:N,filterShape:t}}function Ni(e,t,n,s,r,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,g,,m]=t,[b,x,y]=Ti(n),[w,v,k]=Ti(s),I=Ei(p,w),S=Ei(f,v),N=Ei(g,k),{padInfo:$,outDepth:C,outHeight:T,outWidth:E}=function(e,t,n,s,r,a,i,o,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,s,r,a){null==r&&(r=$i(e,t,s));const i=e[1],o=e[2];return[Ri((e[0]-t+2*r)/s+1,a),Ri((i-t+2*r)/s+1,a),Ri((o-t+2*r)/s+1,a),1]}([t,n,s,1],o,0,r,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/r),p=Math.ceil(n/a),f=Math.ceil(s/i);const e=(d-1)*r+o-t,c=(p-1)*a+l-n,g=(f-1)*i+u-s,m=Math.floor(e/2),b=e-m,x=Math.floor(c/2),y=c-x,w=Math.floor(g/2);h={top:x,bottom:y,left:w,right:g-w,front:m,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/r),p=Math.ceil((n-l+1)/a),f=Math.ceil((s-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,u,c,h,b,x,y,I,S,N,o),R=a?m*d:m;let A;return"channelsFirst"===i?A=[l,R,C,T,E]:"channelsLast"===i&&(A=[l,C,T,E,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:C,outHeight:T,outWidth:E,outChannels:R,padInfo:$,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function $i(e,t,n,s=1){const r=Ei(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function Ci(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Ti(e){return"number"==typeof e?[e,e,e]:e}function Ei(e,t){return t<=1?e:e+(e-1)*(t-1)}function Ri(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ai(e){const[t,n,s]=Ci(e);return 1===t&&1===n&&1===s}function Fi(e,t){return Ai(e)||Ai(t)}function Di(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function _i(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)A(M(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{A(M(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const Oi=Wr({reshape_:function(e,t){const n={x:Br(e,"x","reshape","string_or_numeric")},s={shape:t};return Ar.runKernel(Cn,n,s)}}),Li=Wr({avgPool_:function(e,t,n,s,r){const a=Br(e,"x","avgPool","float32");A(Fi(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=Oi(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),_i("avgPool",s,r);const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let c=Ar.runKernel(Ae,l,u);return c=$a(c,a.dtype),o?Oi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Mi=Wr({avgPool3d_:function(e,t,n,s,r,a="NDHWC"){const i=Br(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=Oi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),A("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),_i("avgPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a};let h=Ar.runKernel(De,u,c);return h=$a(h,o.dtype),l?Oi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),zi=Wr({batchNorm_:function(e,t,n,s,r,a){null==a&&(a=.001);const i=Br(e,"x","batchNorm"),o=Br(t,"mean","batchNorm"),l=Br(n,"variance","batchNorm");let u,c;null!=r&&(u=Br(r,"scale","batchNorm")),null!=s&&(c=Br(s,"offset","batchNorm")),A(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),A(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),A(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?Oi(e,[1,1,1,e.size]):2===e.rank?Oi(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Oi(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),d={x:h,scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:a},f=Ar.runKernel(Nt,d,p);return Oi(f,i.shape)}}),Bi=Wr({batchNorm2d_:function(e,t,n,s,r,a){const i=Br(e,"x","batchNorm"),o=Br(t,"mean","batchNorm"),l=Br(n,"variance","batchNorm");let u,c;return null!=r&&(u=Br(r,"scale","batchNorm")),null!=s&&(c=Br(s,"offset","batchNorm")),A(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),A(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),A(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&A(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&A(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),zi(i,o,l,c,u,a)}}),Pi=Wr({batchNorm3d_:function(e,t,n,s,r,a){const i=Br(e,"x","batchNorm"),o=Br(t,"mean","batchNorm"),l=Br(n,"variance","batchNorm");let u,c;return null!=r&&(u=Br(r,"scale","batchNorm")),null!=s&&(c=Br(s,"offset","batchNorm")),A(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),A(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),A(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&A(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&A(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),zi(i,o,l,c,u,a)}}),Wi=Wr({batchNorm4d_:function(e,t,n,s,r,a){const i=Br(e,"x","batchNorm"),o=Br(t,"mean","batchNorm"),l=Br(n,"variance","batchNorm");let u,c;return null!=r&&(u=Br(r,"scale","batchNorm")),null!=s&&(c=Br(s,"offset","batchNorm")),A(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),A(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),A(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&A(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&A(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),zi(i,o,l,c,u,a)}}),Ui=Wr({broadcastTo_:function(e,t){let n=Br(e,"broadcastTo","x");const s=n.shape;if(ie(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Oi(n,e)}const r=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ca(n);const i={x:n},o={reps:a};return Ar.runKernel(hs,i,o)}});function Vi(e,t,n){ie(e);const s={shape:e,value:t,dtype:n};return Ar.runKernel(vt,{},s)}const Gi=Wr({clipByValue_:function(e,t,n){const s=Br(e,"x","clipByValue");if(A(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Vi(s.shape,t,s.dtype);const r={x:s},a={clipValueMin:t,clipValueMax:n};return Ar.runKernel(We,r,a)}}),Hi=Wr({concat_:function(e,t=0){A(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Pr(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ca(n[0]);const s=n,r={axis:t};return Ar.runKernel(Ge,s,r)}}),ji=Wr({concat1d_:function(e){return Hi(e,0)}}),qi=Wr({concat2d_:function(e,t){return Hi(e,t)}}),Ki=Wr({concat3d_:function(e,t){return Hi(e,t)}}),Xi=Wr({concat4d_:function(e,t){return Hi(e,t)}}),Yi=Wr({conv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const o=Br(e,"x","conv2d","float32"),l=Br(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Oi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),A(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),_i("conv2d",s,i);const h="NHWC"===r?u.shape[3]:u.shape[1];A(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),A(Fi(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=Ar.runKernel(He,d,p);return c?Oi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Zi=Wr({conv1d_:function(e,t,n,s,r="NWC",a=1,i){const o=Br(e,"x","conv1d"),l=Br(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Oi(o,[1,o.shape[0],o.shape[1]])),A(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),A(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),_i("conv1d",s,i),A(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),A(Fi(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),A("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=Oi(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Oi(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Yi(d,h,[1,n],s,"NHWC",[1,a],i);return Oi(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Ji=Wr({conv2DBackpropInput_:function(e,t,n,s,r,a="NHWC",i){A(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Oi(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),A(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),A(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),A(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];A(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),A(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),_i("conv2dDerInput",r,i);const d={dy:l,filter:n},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:o},f=Ar.runKernel(qe,d,p);return u?Oi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Qi=Wr({conv2dTranspose_:function(e,t,n,s,r,a){const i=Br(e,"x","conv2dTranspose"),o=Br(t,"filter","conv2dTranspose");return Ji(n,i,o,s,r,"NHWC",a)}}),eo=Wr({conv3d_:function(e,t,n,s,r="NDHWC",a=[1,1,1]){const i=Br(e,"x","conv3d"),o=Br(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Oi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),A(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),A(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),A(Fi(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),A("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:a},d=Ar.runKernel(Ke,c,h);return u?Oi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),to=Wr({conv3DBackpropInput_:function(e,t,n,s,r){A(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=Oi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];A(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),A(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),A(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),A(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),A(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:r,strides:s,inputShape:a},d=Ar.runKernel(Ye,c,h);return o?Oi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),no=Wr({conv3dTranspose_:function(e,t,n,s,r){const a=Br(e,"x","conv3dTranspose"),i=Br(t,"filter","conv3dTranspose");return to(n,a,i,s,r)}}),so=Wr({denseBincount_:function(e,t,n,s=!1){const r=Br(e,"x","denseBincount"),a=Br(t,"weights","denseBincount");A("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),A(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),A(n>=0,(()=>`size must be non-negative, but got ${n}.`)),A(a.size===r.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},o={size:n,binaryOutput:s};return Ar.runKernel(nt,i,o)}}),ro=Wr({depthwiseConv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const o=Br(e,"x","depthwiseConv2d","float32"),l=Br(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Oi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),A(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===r?u.shape[3]:u.shape[1];A(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),_i("depthwiseConv2d",s,i);const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=Ar.runKernel(rt,d,p);return c?Oi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ao=Wr({floorDiv_:function(e,t){let n=Br(e,"a","floorDiv"),s=Br(t,"b","floorDiv");[n,s]=Ir(n,s);const r={a:n,b:s};return Ar.runKernel(St,r)}}),io=Wr({div_:function(e,t){let n=Br(e,"a","div"),s=Br(t,"b","div");if([n,s]=Ir(n,s),"int32"===n.dtype&&"int32"===s.dtype)return ao(n,s);const r={a:n,b:s};return Ar.runKernel(ht,r,{})}}),oo=Wr({elu_:function(e){const t={x:Br(e,"x","elu","float32")};return Ar.runKernel(pt,t)}}),lo=Wr({equal_:function(e,t){let n=Br(e,"a","equal","string_or_numeric"),s=Br(t,"b","equal","string_or_numeric");[n,s]=Ir(n,s),za(n.shape,s.shape);const r={a:n,b:s};return Ar.runKernel(mt,r)}}),uo=Wr({exp_:function(e){const t={x:Br(e,"x","exp")};return Ar.runKernel(bt,t)}}),co=Wr({expandDims_:function(e,t=0){const n=Br(e,"x","expandDims","string_or_numeric");A(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:t};return Ar.runKernel(xt,s,r)}}),ho=Wr({tile_:function(e,t){const n=Br(e,"x","tile","string_or_numeric");A(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const s={x:n},r={reps:t};return Ar.runKernel(hs,s,r)}}),po=Wr({eye_:function(e,t,n,s="float32"){null==t&&(t=e);const r=Na([e,t],s),a=e<=t?e:t;for(let e=0;e<a;++e)r.set(1,e,e);const i=Oi(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return ho(co(i,0),[n[0],1,1]);if(2===n.length)return ho(co(co(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return ho(co(co(co(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),fo=Wr({floor_:function(e){const t={x:Br(e,"x","floor","float32")};return Ar.runKernel(It,t)}}),go=Wr({gather_:function(e,t,n=0,s=0){const r={x:Br(e,"x","gather"),indices:Br(t,"indices","gather","int32")},a={axis:n,batchDims:s};return Ar.runKernel($t,r,a)}}),mo=Wr({greater_:function(e,t){let n=Br(e,"a","greater","string_or_numeric"),s=Br(t,"b","greater","string_or_numeric");[n,s]=Ir(n,s),za(n.shape,s.shape);const r={a:n,b:s};return Ar.runKernel(Tt,r)}}),bo=Wr({greaterEqual_:function(e,t){let n=Br(e,"a","greaterEqual","string_or_numeric"),s=Br(t,"b","greaterEqual","string_or_numeric");[n,s]=Ir(n,s),za(n.shape,s.shape);const r={a:n,b:s};return Ar.runKernel(Et,r)}}),xo=Wr({leakyRelu_:function(e,t=.2){const n={x:Br(e,"x","leakyRelu")},s={alpha:t};return Ar.runKernel(Lt,n,s)}}),yo=Wr({log_:function(e){const t={x:Br(e,"x","log","float32")};return Ar.runKernel(Pt,t)}}),wo=Wr({log1p_:function(e){const t={x:Br(e,"x","log1p")};return Ar.runKernel(Wt,t)}}),vo=Wr({max_:function(e,t=null,n=!1){const s={x:Br(e,"x","max")},r={reductionIndices:t,keepDims:n};return Ar.runKernel(qt,s,r)}}),ko=Wr({mul_:function(e,t){let n=Br(e,"a","mul"),s=Br(t,"b","mul");[n,s]=Ir(n,s);const r={a:n,b:s};return Ar.runKernel(on,r)}}),Io=Wr({sub_:function(e,t){let n=Br(e,"a","sub"),s=Br(t,"b","sub");[n,s]=Ir(n,s);const r={a:n,b:s};return Ar.runKernel(ls,r)}}),So=Wr({sum_:function(e,t=null,n=!1){let s=Br(e,"x","sum");"bool"===s.dtype&&(s=$a(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return Ar.runKernel(qn,r,a)}}),No=Wr({logSoftmax_:function(e,t=-1){const n=Br(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const s=pi(((e,n)=>{const s=vo(e,t,!0),r=Io(e,s),a=Io($a(r,"float32"),yo(So(uo(r),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[s]=n,r=uo(s);return Io(e,ko(So(e,t,!0),r))}}}));return s(n)}}),$o=Wr({logicalAnd_:function(e,t){const n=Br(e,"a","logicalAnd","bool"),s=Br(t,"b","logicalAnd","bool");za(n.shape,s.shape);const r={a:n,b:s};return Ar.runKernel(Ut,r)}}),Co=Wr({matMul_:function(e,t,n=!1,s=!1){let r=Br(e,"a","matMul"),a=Br(t,"b","matMul");[r,a]=Ir(r,a);const i={a:r,b:a},o={transposeA:n,transposeB:s};return Ar.runKernel(Oe,i,o)}}),To=Wr({maxPool_:function(e,t,n,s,r){const a=Br(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Oi(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),A(Fi(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),_i("maxPool",s,r);const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},c=Ar.runKernel(Xt,l,u);return o?Oi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Eo=Wr({maxPool3d_:function(e,t=[1,1,1],n,s,r,a="NDHWC"){const i=Br(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=Oi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),A("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),_i("maxPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},h=Ar.runKernel(Zt,u,c);return l?Oi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Ro=Wr({maximum_:function(e,t){let n=Br(e,"a","maximum"),s=Br(t,"b","maximum");[n,s]=Ir(n,s),"bool"===n.dtype&&(n=$a(n,"int32"),s=$a(s,"int32")),za(n.shape,s.shape);const r={a:n,b:s};return Ar.runKernel(Kt,r)}}),Ao=Wr({mean_:function(e,t=null,n=!1){const s={x:Br(e,"x","mean")},r={axis:t,keepDims:n};return Ar.runKernel(en,s,r)}}),Fo=Wr({min_:function(e,t=null,n=!1){const s={x:Br(e,"x","min")},r={axis:t,keepDims:n};return Ar.runKernel(tn,s,r)}}),Do=Wr({minimum_:function(e,t){let n=Br(e,"a","minimum"),s=Br(t,"b","minimum");[n,s]=Ir(n,s),"bool"===n.dtype&&(n=$a(n,"int32"),s=$a(s,"int32")),za(n.shape,s.shape);const r={a:n,b:s};return Ar.runKernel(nn,r)}});function _o(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Oo(e,t,n){const s=e.length+t.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[a++]):r.push(t[i++]);return r}function Lo(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function Mo(e,t){return Oo(e,t.map((e=>1)),t)}function zo(e,t,n){A(_o(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Bo(e,t){if(_o(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function Po(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Wo(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}const Uo=Wr({square_:function(e){const t=Br(e,"x","square");return Ar.runKernel("Square",{x:t},{})}}),Vo=Wr({moments_:function(e,t=null,n=!1){const s=U(t,(e=Br(e,"x","moments")).shape),r=Ao(e,s,n);let a=r.shape;n||(a=Mo(r.shape,s));const i=Uo(Io($a(e,"float32"),Oi(r,a)));return{mean:r,variance:Ao(i,s,n)}}}),Go=Wr({neg_:function(e){const t={x:Br(e,"x","neg")};return Ar.runKernel(ln,t)}}),Ho=Wr({notEqual_:function(e,t){let n=Br(e,"a","notEqual","string_or_numeric"),s=Br(t,"b","notEqual","string_or_numeric");[n,s]=Ir(n,s),za(n.shape,s.shape);const r={a:n,b:s};return Ar.runKernel(un,r)}}),jo=Wr({oneHot_:function(e,t,n=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Br(e,"indices","oneHot","int32")},i={dtype:r,depth:t,onValue:n,offValue:s};return Ar.runKernel(fn,a,i)}});function qo(e,t="float32"){if(ie(e),"complex64"===t){const t=qo(e,"float32"),n=qo(e,"float32");return Ur(t,n)}const n=re(O(e),t);return Ar.makeTensor(n,e,t)}function Ko(e,t="float32"){if(ie(e),"complex64"===t){const t=Ko(e,"float32"),n=qo(e,"float32");return Ur(t,n)}const n=se(O(e),t);return Ar.makeTensor(n,e,t)}const Xo=Wr({onesLike_:function(e){const t={x:Br(e,"x","onesLike")};return Ar.runKernel(pn,t)}}),Yo=Wr({pad_:function(e,t,n=0){const s=Br(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},a={x:s};return Ar.runKernel(mn,a,r)}}),Zo=Wr({prelu_:function(e,t){const n={x:Br(e,"x","prelu"),alpha:Br(t,"alpha","prelu")};return Ar.runKernel(xn,n)}});var Jo=n(377);class Qo{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=Jo.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class el{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Jo.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const tl=Wr({randomNormal_:function(e,t=0,n=1,s,r){if(ie(e),null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new Qo(t,n,s,!1,r),i=Na(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),nl=Wr({randomUniform_:function(e,t=0,n=1,s="float32",r){ie(e);const a=Na(e,s),i=new el(t,n,null,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});function sl(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return Ar.runKernel(In,{},r)}const rl=Wr({relu_:function(e){const t={x:Br(e,"x","relu")};return Ar.runKernel($n,t)}}),al=Wr({reverse_:function(e,t){const n={x:Br(e,"x","reverse")},s={dims:t};return Ar.runKernel(Dn,n,s)}}),il=Wr({selu_:function(e){const t={x:Br(e,"x","selu")};return Ar.runKernel(Bn,t)}}),ol=Wr({separableConv2d_:function(e,t,n,s,r,a=[1,1],i="NHWC"){const o=Br(e,"x","separableConv2d"),l=Br(t,"depthwiseFilter","separableConv2d"),u=Br(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Oi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),A(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),A(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),A(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),A(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];A(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=ro(c,l,s,r,i,a),g=Yi(f,u,1,"valid",i);return h?Oi(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),ll=Wr({sigmoid_:function(e){const t={x:Br(e,"x","sigmoid","float32")};return Ar.runKernel(Gn,t)}}),ul=Wr({slice_:function(e,t,n){const s=Br(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},a={begin:t,size:n};return Ar.runKernel(Pn,r,a)}}),cl=Wr({slice1d_:function(e,t,n){const s=Br(e,"x","slice1d");return A(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),ul(s,[t],[n])}}),hl=Wr({slice2d_:function(e,t,n){const s=Br(e,"x","slice2d");return A(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),ul(s,t,n)}}),dl=Wr({slice3d_:function(e,t,n){const s=Br(e,"x","slice3d");return A(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),ul(s,t,n)}}),pl=Wr({slice4d_:function(e,t,n){const s=Br(e,"x","slice4d");return A(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),ul(s,t,n)}}),fl=Wr({softmax_:function(e,t=-1){const n=Br(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},r={dim:t};return Ar.runKernel(Yn,s,r)}}),gl=Wr({softplus_:function(e){const t={x:Br(e,"x","softplus")};return Ar.runKernel(Hn,t)}}),ml=Wr({split_:function(e,t,n=0){const s={x:Br(e,"x","split")},r={numOrSizeSplits:t,axis:n};return Ar.runKernel(Xn,s,r)}}),bl=Wr({sqrt_:function(e){const t={x:Br(e,"x","sqrt","float32")};return Ar.runKernel(jn,t)}}),xl=Wr({squeeze_:function(e,t){const n=Br(e,"x","squeeze","string_or_numeric");return Oi(n,V(n.shape,t).newShape)}}),yl=Wr({stack_:function(e,t=0){const n=Pr(e,"tensors","stack","string_or_numeric");A(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&A(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:t};return Ar.runKernel(gn,s,r)}}),wl=Wr({tanh_:function(e){const t={x:Br(e,"x","tanh","float32")};return Ar.runKernel(cs,t)}});function vl(e,t){D(e);const n=Lr(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Vr(e,null,n,t)}const kl=Wr({truncatedNormal_:function(e,t=0,n=1,s,r){if(ie(e),null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new Qo(t,n,s,!0,r),i=Na(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Il=Wr({unstack_:function(e,t=0){const n=Br(e,"x","unstack","string_or_numeric");A(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:t};return Ar.runKernel(ms,s,r)}}),Sl=Wr({where_:function(e,t,n){const s=Br(t,"a","where"),r=Br(n,"b","where"),a=Br(e,"condition","where","bool"),i=za(za(a.shape,s.shape),r.shape),o={condition:Ui(a,i),t:Ui(s,i),e:Ui(r,i)};return Ar.runKernel(zn,o)}}),Nl=Wr({zerosLike_:function(e){const t={x:Br(e,"x","zerosLike")};return Ar.runKernel(xs,t)}}),$l=Wr({imag_:function(e){const t={input:Br(e,"input","imag")};return Ar.runKernel(Ft,t)}}),Cl=Wr({real_:function(e){const t={input:Br(e,"input","real")};return Ar.runKernel(Sn,t)}}),Tl=Wr({transpose_:function(e,t,n){const s=Br(e,"x","transpose");if(null==t&&(t=s.shape.map(((e,t)=>t)).reverse()),A(s.rank===t.length,(()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`)),t.forEach((e=>{A(e>=0&&e<s.rank,(()=>"All entries in 'perm' must be between 0 and "+(s.rank-1)+` but got ${t}`))})),s.rank<=1)return s.clone();const r={x:s},a={perm:t};return"complex64"===s.dtype?ui((()=>{let e=Cl(s),t=$l(s);return e=Ar.runKernel(fs,{x:e},a),t=Ar.runKernel(fs,{x:t},a),n&&(t=Go(t)),Ur(e,t)})):Ar.runKernel(fs,r,a)}}),El=Wr({dropout_:function(e,t,n,s){const r=Br(e,"x","dropout");if(A("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),A(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof dr?r.clone():r;const a=function(e,t){if(null==t)return e.shape.slice();if(L(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(r,n),i=1-t,o=io(fo(bi(nl(a,0,1,"float32",s),i)),i);return ko(r,o)}}),Rl=Wr({fft_:function(e){A("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Ar.runKernel(wt,t)}}),Al=Wr({rfft_:function(e,t){A("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(null!=t&&t<n){const s=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,r=ul(e,s,a),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,r=Hi([e,qo(s)],e.shape.length-1),n=t}else r=e;const a=Nl(r),i=Oi(Ur(r,a),[s,n]),o=Rl(i),l=Math.floor(n/2)+1,u=Cl(o),c=$l(o),h=ml(u,[l,n-l],u.shape.length-1),d=ml(c,[l,n-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,Oi(Ur(h[0],d[0]),p)}}),Fl=Wr({ifft_:function(e){A("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Ar.runKernel(At,t)}}),Dl=Wr({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const r=Oi(e,[n,t]);s=Fl(r)}else{const r=[n,2*(t-1)],a=Oi(Cl(e),[n,t]),i=Oi($l(e),[n,t]),o=al(ul(a,[0,1],[n,t-2]),1),l=ko(al(ul(i,[0,1],[n,t-2]),1),fi(-1)),u=Hi([a,o],1),c=Hi([i,l],1),h=Oi(Ur(u,c),[r[0],r[1]]);s=Fl(h)}if(s=Cl(s),3===e.rank&&0!==e.shape[0]){const t=s,n=e.shape[0];s=Oi(s,[n,s.shape[0]/n,s.shape[1]]),t.dispose()}return s}}),_l=Wr({conv2DBackpropFilter_:function(e,t,n,s,r,a="NHWC",i){let o=e;3===e.rank&&(o=Oi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Oi(t,[1,t.shape[0],t.shape[1],t.shape[2]])),A(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),A(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),A(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];A(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),A(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),_i("conv2dDerFilter",r,i);const h={x:o,dy:l},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return Ar.runKernel(je,h,d)}}),Ol=Wr({relu6_:function(e){const t={x:Br(e,"x","relu6")};return Ar.runKernel(Fn,t)}}),Ll=Wr({step_:function(e,t=0){const n={x:Br(e,"x","step")},s={alpha:t};return Ar.runKernel(ys,n,s)}});function Ml(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return ko(e,Ll(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function zl(e,t){let n=t;const s=Ma(e.shape,t.shape);return s.length>0&&(n=So(n,s)),Oi(n,e.shape)}function Bl(e,t,n,s){if("linear"===t)return e;if("relu"===t)return rl(e);if("elu"===t)return oo(e);if("relu6"===t)return Ol(e);if("prelu"===t)return Zo(e,n);if("leakyrelu"===t)return xo(e,s);if("sigmoid"===t)return ll(e);throw new Error(`Unknown fused activation ${t}.`)}const Pl=(e,t)=>!(e>0)||"linear"===t,Wl=Wr({fusedConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Pl(Ar.state.gradientDepth,l)){A("NHWC"===r,(()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=Yi(e,t,n,s,r,a,i);return null!=o&&(h=bi(h,o)),Bl(h,l,u,c)}const h=Br(e,"x","conv2d","float32"),d=Br(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Oi(h,[1,h.shape[0],h.shape[1],h.shape[2]])),A(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),A(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),_i("fused conv2d",s,i);const g="NHWC"===r?p.shape[3]:p.shape[1];A(d.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`)),A(Fi(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const m=Si(p.shape,d.shape,n,a,s,i);let b,x;if(null!=o&&(b=Br(o,"bias","fused conv2d"),[b]=Ir(b,h),"NHWC"===r?za(m.outShape,b.shape):(A(b.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`)),A(0===b.shape.length||b.shape[0]===m.outChannels||1===b.shape[0],(()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${m.outChannels})`)))),null!=u){const e=u.shape;if(A(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)A(1===e[0]||e[0]===m.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${m.outChannels}).`));else if(3===e.length)try{za(e,m.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(n)}x=Br(u,"prelu weights","fused conv2d")}const y=(e,t)=>{A("NHWC"===r,(()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`));const[i,o,u,c]=t,h=Ml(e,u,l);A(Ai(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const d=[Ji(o.shape,h,i,n,s),_l(o,h,i.shape,n,s)];if(null!=c){const e=zl(c,h);d.push(e)}return d},w={x:p,filter:d,bias:b,preluActivationWeights:x},v={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=pi(((e,t,n)=>{let s=Ar.runKernel(Is,w,v);return n([t,e,s]),f&&(s=Oi(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}));return e(p,d)}{const e=pi(((e,t,n,s)=>{let r=Ar.runKernel(Is,w,v);return s([t,e,r,n]),f&&(r=Oi(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return e(p,d,b)}}}),Ul=Wr({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,r,a=[1,1],i){let o=e;3===e.rank&&(o=Oi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Oi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return Ar.runKernel(at,u,c)}}),Vl=Wr({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,r,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Oi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:e},h=Ar.runKernel(it,u,c);return l?Oi(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});Wr({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Pl(Ar.state.gradientDepth,l)){let h=ro(e,t,n,s,r,a,i);return null!=o&&(h=bi(h,o)),Bl(h,l,u,c)}const h=Br(e,"x","depthwiseConv2d","float32"),d=Br(t,"filter","depthwiseConv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Oi(h,[1,h.shape[0],h.shape[1],h.shape[2]])),A(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),A(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),A(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==a&&(a=[1,1]),A(Fi(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),_i("fused depthwiseConv2d",s,i);const g=Si(p.shape,d.shape,n,a,s,i,!0);let m,b;null!=o&&(m=Br(o,"bias","fused conv2d"),[m]=Ir(m,h),za(g.outShape,m.shape)),null!=u&&(b=Br(u,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{A(Ai(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[r,o,u,c]=t,h=Ml(e,u,l),d=Vl(o.shape,h,r,n,s,a,i),p=Ul(o,h,r.shape,n,s,a,i);return null!=c?[d,p,zl(m,h)]:[d,p]},y={x:p,filter:d,bias:m,preluActivationWeights:b},w={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=pi(((e,t,n)=>{let s=Ar.runKernel(Ss,y,w);return n([t,e,s]),f&&(s=Oi(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(p,d)}{const e=pi(((e,t,n,s)=>{let r=Ar.runKernel(Ss,y,w);return s([t,e,r,n]),f&&(r=Oi(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(p,d,m)}}});const Gl=Wr({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Pl(Ar.state.gradientDepth,a)){let l=Co(e,t,n,s);return null!=r&&(l=bi(l,r)),Bl(l,a,i,o)}let l=Br(e,"a","fused matMul"),u=Br(t,"b","fused matMul");[l,u]=Ir(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),m=O(f),b=O(g);A(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const x=za(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),y=Oi(l,n?[m,c,d]:[m,d,c]),w=Oi(u,s?[b,p,h]:[b,h,p]);let v,k;null!=r&&(v=Br(r,"bias","fused matMul"),[v]=Ir(v,l),za(x,v.shape)),null!=i&&(k=Br(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,l,u]=t,c=Ml(Oi(e,l.shape),l,a);let h,d;return n||s?!n&&s?(h=Co(c,o,!1,!1),d=Co(c,i,!0,!1)):n&&!s?(h=Co(o,c,!1,!0),d=Co(i,c,!1,!1)):(h=Co(o,c,!0,!0),d=Co(c,i,!0,!0)):(h=Co(c,o,!1,!0),d=Co(i,c,!0,!1)),null!=r?[h,d,zl(u,c)]:[h,d]},S={a:y,b:w,bias:v,preluActivationWeights:k},N={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:o};if(null==r){const e=pi(((e,t,n)=>{const s=Ar.runKernel(ks,S,N);return n([e,t,s]),{value:Oi(s,x),gradFunc:I}}));return e(y,w)}{const e=pi(((e,t,n,s)=>{const r=Ar.runKernel(ks,S,N);return s([e,t,r,n]),{value:Oi(r,x),gradFunc:I}}));return e(y,w,v)}}});function Hl(e,t,n){const s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return vl(r,"float32")}Wr({hammingWindow_:function(e){return Hl(e,.54,.46)}});const jl=Wr({hannWindow_:function(e){return Hl(e,.5,.5)}});function ql(e,t,n){if(D(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=Lr(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Vr(e,t,s,n)}const Kl=Wr({frame_:function(e,t,n,s=!1,r=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(ul(e,a,t)),a+=n;if(s)for(;a<e.size;){const s=a+t-e.size,o=Hi([ul(e,a,t-s),Vi([s],r)]);i.push(o),a+=n}return 0===i.length?ql([],[0,t]):Oi(Hi(i),[i.length,t])}});Wr({stft_:function(e,t,n,s,r=jl){var a;null==s&&(a=t,s=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=Kl(e,t,n),o=ko(i,r(t));return Al(o,s)}});const Xl=Wr({cropAndResize_:function(e,t,n,s,r="bilinear",a=0){const i=Br(e,"image","cropAndResize"),o=Br(t,"boxes","cropAndResize","float32"),l=Br(n,"boxInd","cropAndResize","int32"),u=o.shape[0];A(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),A(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),A(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),A(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),A(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),A("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:i,boxes:o,boxInd:l},h={method:r,extrapolationValue:a,cropSize:s};return Ar.runKernel(tt,c,h)}}),Yl=Wr({flipLeftRight_:function(e){const t=Br(e,"image","flipLeftRight","float32");A(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Ar.runKernel(kt,n,{})}}),Zl=Wr({grayscaleToRGB_:function(e){const t=Br(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];A(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),A(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,ho(t,r)}}),Jl=Wr({rotateWithOffset_:function(e,t,n=0,s=.5){const r=Br(e,"image","rotateWithOffset","float32");A(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:t,fillValue:n,center:s};return Ar.runKernel(vs,a,i)}});function Ql(e,t,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),A(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),A(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),A(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),A(1===t.rank,(()=>"scores must be a 1D tensor")),A(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),A(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const eu=Wr({nonMaxSuppression_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Br(e,"boxes","nonMaxSuppression","float32"),i=Br(t,"scores","nonMaxSuppression","float32"),o=Ql(a,i,n,s,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return Ar.runKernel(cn,{boxes:a,scores:i},l)}});function tu(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(e,t,n||nu)}(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function nu(e,t){return e>t?1:e<t?-1:0}function su(e,t,n,s,r){return iu(e,t,n,s,r,0)}function ru(e,t,n,s,r,a){return iu(e,t,n,s,r,0,!1,a,!0)}function au(e,t,n,s,r,a){return iu(e,t,n,s,r,a,!0)}function iu(e,t,n,s,r,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>r&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(uu);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=ou(e,a,h[n]);if(i>=s){o=!0;break}if(t.score=t.score*lu(s,c,i),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>r&&tu(u,t,uu))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return i&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function ou(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(a,u),m=Math.max(i,c),b=Math.min(o,h),x=Math.min(l,d),y=Math.max(b-g,0)*Math.max(x-m,0);return y/(p+f-y)}function lu(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function uu(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const cu=Wr({nonMaxSuppressionWithScore_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Br(e,"boxes","nonMaxSuppression"),o=Br(t,"scores","nonMaxSuppression"),l=Ql(i,o,n,s,r,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=Ar.runKernel(dn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),hu=Wr({nonMaxSuppressionPadded_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Br(e,"boxes","nonMaxSuppression"),o=Br(t,"scores","nonMaxSuppression"),l=Ql(i,o,n,s,r,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Ar.runKernel(hn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),du=Wr({resizeBilinear_:function(e,t,n=!1,s=!1){const r=Br(e,"images","resizeBilinear");A(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),A(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),A(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=Oi(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=Ar.runKernel(Rn,o,l);return i?Oi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),pu=Wr({resizeNearestNeighbor_:function(e,t,n=!1,s=!1){const r=Br(e,"images","resizeNearestNeighbor");A(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),A(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),A("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),A(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=Oi(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=Ar.runKernel(Tn,o,l);return i?Oi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),fu=Wr({bincount_:function(e,t,n){const s=Br(e,"x","bincount"),r=Br(t,"weights","bincount");A("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),A(n>=0,(()=>`size must be non-negative, but got ${n}.`)),A(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const a={x:s,weights:r},i={size:n};return Ar.runKernel(Me,a,i)}}),gu=Wr({lessEqual_:function(e,t){let n=Br(e,"a","lessEqual","string_or_numeric"),s=Br(t,"b","lessEqual","string_or_numeric");[n,s]=Ir(n,s),za(n.shape,s.shape);const r={a:n,b:s};return Ar.runKernel(zt,r)}}),mu=Wr({round_:function(e){const t={x:Br(e,"x","round")};return Ar.runKernel(_n,t)}}),bu=Wr({threshold_:function(e,t="binary",n=!1,s=.5){const r=Br(e,"image","threshold"),a=r.shape[0]*r.shape[1];let i,o,l,u,c=ko(vl([s]),255);if(A(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),A(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),A("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),A("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[i,o,l]=ml(r,[1,1,1],-1);const e=ko(i,.2989),t=ko(o,.587),n=ko(l,.114);u=bi(bi(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,s,r,a,i,o,l=vl([-1]),u=vl([0]),c=vl([0]);for(let h=0;h<e.size-1;h++){n=ul(e,0,h+1),s=ul(e,h+1),i=io(So(n),t),o=io(So(s),t);const d=So(ko(n,sl(0,n.size)));r=io(d,So(n));const p=Vi(s.shape,n.size),f=bi(sl(0,s.size),p),g=ko(s,f);a=io(So(g),So(s));const m=Io(r,a),b=Io(r,a),x=ko(i,o);c=ko(ko(x,m),b);const y=mo(c,u);u=Sl(y,c,u),l=Sl(y,vl([h]),l)}return l}(fu($a(mu(u),"int32"),Gr([]),256),a));const h=n?gu(u,c):mo(u,c);return $a(ko(h,255),"int32")}}),xu=Wr({transform_:function(e,t,n="nearest",s="constant",r=0,a){const i=Br(e,"image","transform","float32"),o=Br(t,"transforms","transform","float32");A(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),A(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),A(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return Ar.runKernel(ps,l,u)}}),yu=Wr({bandPart_:function(e,t,n){A(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),A(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=Br(e,"a","bandPart");A(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=Oi(sl(0,a,1,"int32"),[-1,1]),l=sl(0,i,1,"int32"),u=Io(o,l),c=$o(gu(u,fi(+t,"int32")),bo(u,fi(-n,"int32"))),h=qo([a,i],s.dtype);return Oi(yl(Il(Oi(s,[-1,a,i])).map((e=>Sl(c,e,h)))),r)}}),wu=Wr({pow_:function(e,t){let n=Br(e,"base","pow"),s=Br(t,"exp","pow");[n,s]=Ir(n,s);const r={a:n,b:s};return Ar.runKernel(bn,r)}});function vu(e,t,n=null){if(0===e.rank)return mi(e);if(1!==e.rank&&null===n)return vu(Oi(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return So(mi(e),n);if(t===1/0)return vo(mi(e),n);if(t===-1/0)return Fo(mi(e),n);if("euclidean"===t||2===t)return bl(So(wu(mi(e),fi(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return vo(So(mi(e),n[0]),n[1]-1);if(t===1/0)return vo(So(mi(e),n[1]),n[0]);if(t===-1/0)return Fo(So(mi(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return bl(So(Uo(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const ku=Wr({norm_:function(e,t="euclidean",n=null,s=!1){const r=vu(e=Br(e,"x","norm"),t,n);let a=r.shape;if(s){const t=U(n,e.shape);a=Mo(r.shape,t)}return Oi(r,a)}}),Iu=Wr({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,A(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)A(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=ml(e,e.shape[0],0).map((e=>xl(e,[0])));A(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let t=0;t<e.length;++t)n.push(Ar.tidy((()=>{let e=s[t];if(t>0)for(let s=0;s<t;++s){const t=ko(So(ko(n[s],e)),n[s]);e=Io(e,t)}return io(e,ku(e,"euclidean"))})));return t?yl(n,0):n}});function Su(e,t=!1){return Ar.tidy((()=>{A(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=po(n),a=Ca(e);const i=ql([[1]],[1,1]);let o=Ca(i);const l=n>=s?s:n;for(let e=0;e<l;++e){const t=a,l=o,u=r;[o,a,r]=Ar.tidy((()=>{const t=ul(a,[e,e],[n-e,1]),l=ku(t),u=ul(a,[e,e],[1,1]),c=Sl(mo(u,0),ql([[-1]]),ql([[1]])),h=Io(u,ko(c,l)),d=io(t,h);o=1===d.shape[0]?Ca(i):Hi([i,ul(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Go(io(Co(c,h),l)),f=ul(a,[e,0],[n-e,s]),g=ko(p,o),m=Tl(o);if(0===e)a=Io(f,Co(g,Co(m,f)));else{const t=Io(f,Co(g,Co(m,f)));a=Hi([ul(a,[0,0],[e,s]),t],0)}const b=Tl(g),x=ul(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=Io(x,Co(Co(x,o),b));else{const t=Io(x,Co(Co(x,o),b));r=Hi([ul(r,[0,0],[n,e]),t],1)}return[o,a,r]})),ci([t,l,u])}return!t&&n>s&&(r=ul(r,[0,0],[n,s]),a=ul(a,[0,0],[s,s])),[r,a]}))}const Nu=Wr({qr_:function(e,t=!1){if(A(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Su(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=Il(Oi(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];return s.forEach((e=>{const[n,s]=Su(e,t);r.push(n),a.push(s)})),[Oi(yl(r,0),e.shape),Oi(yl(a,0),e.shape)]}}});var $u;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}($u||($u={}));const Cu=Wr({computeWeightedLoss_:function(e,t,n=$u.SUM_BY_NONZERO_WEIGHTS){const s=Br(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=Br(t,"weights","computeWeightedLoss"));const a=null==r?s:ko(s,r);if(n===$u.NONE)return a;if(n===$u.SUM)return So(a);if(n===$u.MEAN){if(null==r)return Ao(a);{const e=s.size/r.size,t=io(So(a),So(r));return e>1?io(t,fi(e)):t}}if(n===$u.SUM_BY_NONZERO_WEIGHTS){if(null==r)return io(So(a),fi(s.size));{const e=ko(r,Ko(s.shape)),t=$a(So(Ho(e,fi(0))),"float32");return io(So(a),t)}}throw Error(`Unknown reduction: ${n}`)}});Wr({absoluteDifference_:function(e,t,n,s=$u.SUM_BY_NONZERO_WEIGHTS){const r=Br(e,"labels","absoluteDifference"),a=Br(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Br(n,"weights","absoluteDifference")),F(r.shape,a.shape,"Error in absoluteDifference: ");const o=mi(Io(r,a));return Cu(o,i,s)}}),Wr({cosineDistance_:function(e,t,n,s,r=$u.SUM_BY_NONZERO_WEIGHTS){const a=Br(e,"labels","cosineDistance"),i=Br(t,"predictions","cosineDistance");let o=null;null!=s&&(o=Br(s,"weights","cosineDistance")),F(a.shape,i.shape,"Error in cosineDistance: ");const l=fi(1),u=Io(l,So(ko(a,i),n,!0));return Cu(u,o,r)}}),Wr({hingeLoss_:function(e,t,n,s=$u.SUM_BY_NONZERO_WEIGHTS){let r=Br(e,"labels","hingeLoss");const a=Br(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Br(n,"weights","hingeLoss")),F(r.shape,a.shape,"Error in hingeLoss: ");const o=fi(1);r=Io(ko(fi(2),r),o);const l=rl(Io(o,ko(r,a)));return Cu(l,i,s)}}),Wr({huberLoss_:function(e,t,n,s=1,r=$u.SUM_BY_NONZERO_WEIGHTS){const a=Br(e,"labels","huberLoss"),i=Br(t,"predictions","huberLoss");let o=null;null!=n&&(o=Br(n,"weights","huberLoss")),F(a.shape,i.shape,"Error in huberLoss: ");const l=fi(s),u=mi(Io(i,a)),c=Do(u,l),h=Io(u,c),d=bi(ko(fi(.5),Uo(c)),ko(l,h));return Cu(d,o,r)}}),Wr({logLoss_:function(e,t,n,s=1e-7,r=$u.SUM_BY_NONZERO_WEIGHTS){const a=Br(e,"labels","logLoss"),i=Br(t,"predictions","logLoss");let o=null;null!=n&&(o=Br(n,"weights","logLoss")),F(a.shape,i.shape,"Error in logLoss: ");const l=fi(1),u=fi(s),c=Go(ko(a,yo(bi(i,u)))),h=ko(Io(l,a),yo(bi(Io(l,i),u))),d=Io(c,h);return Cu(d,o,r)}});const Tu=Wr({squaredDifference_:function(e,t){let n=Br(e,"a","squaredDifference"),s=Br(t,"b","squaredDifference");[n,s]=Ir(n,s),za(n.shape,s.shape);const r={a:n,b:s};return Ar.runKernel(ns,r,{})}});Wr({meanSquaredError_:function(e,t,n,s=$u.SUM_BY_NONZERO_WEIGHTS){const r=Br(e,"labels","meanSquaredError"),a=Br(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Br(n,"weights","meanSquaredError")),F(r.shape,a.shape,"Error in meanSquaredError: ");const o=Tu(r,a);return Cu(o,i,s)}}),Wr({sigmoidCrossEntropy_:function(e,t,n,s=0,r=$u.SUM_BY_NONZERO_WEIGHTS){let a=Br(e,"multiClassLabels","sigmoidCrossEntropy");const i=Br(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Br(n,"weights","sigmoidCrossEntropy")),F(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const e=fi(s),t=fi(1),n=fi(.5);a=bi(ko(a,Io(t,e)),ko(n,e))}const l=function(e,t){const n=Br(e,"labels","sigmoidCrossEntropyWithLogits"),s=Br(t,"logits","sigmoidCrossEntropyWithLogits");F(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=rl(s),a=ko(s,n),i=wo(uo(Go(mi(s))));return bi(Io(r,a),i)}(a,i);return Cu(l,o,r)}});const Eu=Wr({logSumExp_:function(e,t=null,n=!1){const s=Br(e,"x","logSumExp"),r=U(t,s.shape),a=vo(s,r,!0),i=Io(s,a),o=uo(i),l=So(o,r),u=yo(l),c=bi(Oi(a,u.shape),u);if(n){const e=Mo(c.shape,r);return Oi(c,e)}return c}});Wr({softmaxCrossEntropy_:function(e,t,n,s=0,r=$u.SUM_BY_NONZERO_WEIGHTS){let a=Br(e,"onehotLabels","softmaxCrossEntropy");const i=Br(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Br(n,"weights","softmaxCrossEntropy")),F(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const e=fi(s),t=fi(1),n=fi(a.shape[1]);a=bi(ko(a,Io(t,e)),io(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const s=pi(((e,t,s)=>{const r=Eu(t,[n],!0),a=Io($a(t,"float32"),r);s([e,a]);const i=Go(ko(a,e));return{value:So(i,[n]),gradFunc:(e,t)=>{const[s,r]=t,a=Mo(e.shape,[n]);return[ko(Oi(e,a),Io($a(s,"float32"),uo(r))),ko(Oi(e,a),Io(uo(r),$a(s,"float32")))]}}}));return s(e,t)}(a,i);return Cu(l,o,r)}}),Wr({sparseFillEmptyRows_:function(e,t,n,s){const r=Br(e,"indices","sparseFillEmptyRows","int32"),a=Br(t,"values","sparseFillEmptyRows"),i=Br(n,"denseShape","sparseFillEmptyRows","int32"),o=Br(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:r,values:a,denseShape:i,defaultValue:o},u=Ar.runKernel(Zn,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),Wr({sparseReshape_:function(e,t,n){const s=Br(e,"inputIndices","sparseReshape","int32"),r=Br(t,"inputShape","sparseReshape","int32"),a=Br(n,"newShape","sparseReshape","int32");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:s,inputShape:r,newShape:a},o=Ar.runKernel(Jn,i);return{outputIndices:o[0],outputShape:o[1]}}}),Wr({sparseSegmentMean_:function(e,t,n){const s=Br(e,"data","sparseSegmentMean"),r=Br(t,"indices","sparseSegmentMean","int32"),a=Br(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return Ar.runKernel(Qn,i)}}),Wr({sparseSegmentSum_:function(e,t,n){const s=Br(e,"data","sparseSegmentSum"),r=Br(t,"indices","sparseSegmentSum","int32"),a=Br(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return Ar.runKernel(es,i)}}),Wr({stringNGrams_:function(e,t,n,s,r,a,i,o){const l=Br(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=Br(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},d=Ar.runKernel(as,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),Wr({stringSplit_:function(e,t,n=!0){const s=Br(e,"input","stringSplit","string"),r=Br(t,"delimiter","stringSplit","string");if(1!==s.rank)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const a={skipEmpty:n},i={input:s,delimiter:r},o=Ar.runKernel(is,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),Wr({stringToHashBucketFast_:function(e,t){const n=Br(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return Ar.runKernel(os,r,s)}});const Ru={flipLeftRight:Yl,grayscaleToRGB:Zl,resizeNearestNeighbor:pu,resizeBilinear:du,rotateWithOffset:Jl,cropAndResize:Xl,nonMaxSuppression:eu,nonMaxSuppressionAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Br(e,"boxes","nonMaxSuppressionAsync"),i=Br(t,"scores","nonMaxSuppressionAsync"),o=Ql(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=su(u,c,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),vl(h,"int32")},nonMaxSuppressionWithScore:cu,nonMaxSuppressionWithScoreAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Br(e,"boxes","nonMaxSuppressionAsync"),o=Br(t,"scores","nonMaxSuppressionAsync"),l=Ql(i,o,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=au(c,h,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:vl(d,"int32"),selectedScores:vl(p)}},nonMaxSuppressionPadded:hu,nonMaxSuppressionPaddedAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Br(e,"boxes","nonMaxSuppressionAsync"),o=Br(t,"scores","nonMaxSuppressionAsync"),l=Ql(i,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:g}=ru(d,p,u,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:vl(f,"int32"),validOutputs:fi(g,"int32")}},threshold:bu,transform:xu},Au={bandPart:yu,gramSchmidt:Iu,qr:Nu};class Fu extends gi{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ar.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Ar.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:ui((()=>Nl(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:ui((()=>Nl(s).variable(!1)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;ui((()=>{const e=bi(ko(a,this.rho),ko(Uo(r),1-this.rho)),t=ko(io(bl(bi(i,this.epsilon)),bl(bi(a,this.epsilon))),r),n=bi(ko(i,this.rho),ko(Uo(t),1-this.rho));a.assign(e),i.assign(n);const o=bi(ko(t,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ci(this.accumulatedGrads.map((e=>e.variable))),ci(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Fu.className="Adadelta",ii(Fu);class Du extends gi{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Ar.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:ui((()=>Vi(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable;ui((()=>{const e=bi(a,Uo(r));a.assign(e);const t=bi(ko(io(r,bl(bi(e,Ar.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ci(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Du.className="Adagrad",ii(Du);class _u extends gi{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ui((()=>{this.accBeta1=fi(t).variable(),this.accBeta2=fi(n).variable()})),null==s&&(this.epsilon=Ar.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ui((()=>{const n=Io(1,this.accBeta1),s=Io(1,this.accBeta2);t.forEach(((t,r)=>{const a=Ar.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:ui((()=>Nl(a).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:ui((()=>Nl(a).variable(!1)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=bi(ko(o,this.beta1),ko(i,1-this.beta1)),c=bi(ko(l,this.beta2),ko(Uo(i),1-this.beta2)),h=io(u,n),d=io(c,s);o.assign(u),l.assign(c);const p=bi(ko(io(h,bi(bl(d),this.epsilon)),-this.learningRate),a);a.assign(p)})),this.accBeta1.assign(ko(this.accBeta1,this.beta1)),this.accBeta2.assign(ko(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ci(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&ci(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),ui((()=>{this.accBeta1.assign(wu(this.beta1,this.iterations_+1)),this.accBeta2.assign(wu(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}_u.className="Adam",ii(_u);class Ou extends gi{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ui((()=>{this.iteration=fi(0).variable(),this.accBeta1=fi(t).variable()})),null==s&&(this.epsilon=Ar.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ui((()=>{const n=Io(1,this.accBeta1),s=io(-this.learningRate,bi(ko(this.iteration,this.decay),1));t.forEach(((t,r)=>{const a=Ar.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Nl(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:Nl(a).variable(!1)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=bi(ko(o,this.beta1),ko(i,1-this.beta1)),c=ko(l,this.beta2),h=mi(i),d=Ro(c,h);o.assign(u),l.assign(d);const p=bi(ko(io(s,n),io(u,bi(d,this.epsilon))),a);a.assign(p)})),this.iteration.assign(bi(this.iteration,1)),this.accBeta1.assign(ko(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ci(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&ci(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Ou.className="Adamax",ii(Ou);class Lu extends gi{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=Ar.registeredVariables[t];ui((()=>{const e=bi(ko(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=hi(fi(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Lu.className="SGD",ii(Lu);class Mu extends Lu{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=fi(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Ar.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:ui((()=>Nl(s).variable(e)))}}const r=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&ui((()=>{let e;const t=bi(ko(this.m,r),a);e=this.useNesterov?bi(ko(this.c,bi(a,ko(t,this.m))),s):bi(ko(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ci(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Mu.className="Momentum",ii(Mu);class zu extends gi{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=Ar.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Ar.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:ui((()=>Nl(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:ui((()=>Nl(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:ui((()=>Nl(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;ui((()=>{const e=bi(ko(i,this.decay),ko(Uo(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=bi(ko(t,this.decay),ko(a,1-this.decay)),l=io(ko(a,this.learningRate),bl(Io(e,bi(Uo(r),this.epsilon)))),u=bi(ko(o,this.momentum),l);i.assign(e),t.assign(r),o.assign(u);const c=Io(s,u);s.assign(c)}else{const e=bi(ko(i,this.decay),ko(Uo(a),1-this.decay)),t=bi(ko(o,this.momentum),io(ko(a,this.learningRate),bl(bi(e,this.epsilon))));i.assign(e),o.assign(t);const n=Io(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ci(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ci(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&ci(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}zu.className="RMSProp",ii(zu);class Bu{static sgd(e){return new Lu(e)}static momentum(e,t,n=!1){return new Mu(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new zu(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new _u(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Fu(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new Ou(e,t,n,s,r)}static adagrad(e,t=.1){return new Du(e,t)}}const Pu={sgd:Bu.sgd,momentum:Bu.momentum,adadelta:Bu.adadelta,adagrad:Bu.adagrad,rmsprop:Bu.rmsprop,adamax:Bu.adamax,adam:Bu.adam},Wu="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Uu(){return new Promise((e=>Wu((()=>e()))))}function Vu(e,t){const n=e[0].length;e.forEach(((e,t)=>{A(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),A(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let a=0;a<n;a++)A(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function Gu(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var Hu;function ju(e,t,n){let s=new Array;if(null==n&&null==t)return s;if(null==t)for(;s.length<e+n.length;)s.push(-1);else s=t.slice();if(null==n)return s;if(e+n.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){const a=n[r],i=s[s.length-n.length+r],o=s[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${a} but shape[${r+e}] = ${o}`)}else s[i]=a}return s}function qu(e){const t={FIRST_DIM_SIZE:Hu.FIRST_DIM_SIZE,VALUE_ROWIDS:Hu.VALUE_ROWIDS,ROW_LENGTHS:Hu.ROW_LENGTHS,ROW_SPLITS:Hu.ROW_SPLITS,ROW_LIMITS:Hu.ROW_LIMITS,ROW_STARTS:Hu.ROW_STARTS},n=[];for(const s of e){if(!(s in t))break;n.push(t[s])}return n}function Ku(e){return 0===e.length?0:e[0]===Hu.FIRST_DIM_SIZE?e.length-1:e.length}function Xu(e,t){if(null==e||null==t)return;const n=e.length,s=t.length;if(n>=s)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){const n=e[r],s=t[r+1];if(n>=0&&s>=0&&1!==n&&n!==s)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${s}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Hu||(Hu={}));const Yu=30;function Zu(e){return e<=Yu?e:Q(e,Math.floor(Math.sqrt(e)))}function Ju(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Qu(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function ec(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function tc(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?s?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function nc(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function sc(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}function rc(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===O(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,a=r[r.length-1];let i=1;for(let e=0;e<r.length-1;++e)i*=r[e];const o=e.shape,l=r.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...ee(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function ac(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+" update.rank != "+(r+e.length-s));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+s])throw new Error(a+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function ic(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}ac(n,t,e)}function oc(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length;let i=1;for(let e=r;e<a;++e)i*=n[e];const o=r<1?1:r;return{sliceRank:r,numUpdates:O(t.shape)/o,sliceSize:i,strides:[...ee(n.slice(0,r)),1],outputSize:O(n)}}const lc=1.7580993408473768,uc=1.0507009873554805,cc=.3275911,hc=.254829592,dc=-.284496736,pc=1.421413741,fc=-1.453152027,gc=1.061405429;function mc(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function bc(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function xc(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function yc(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function wc(e,t){return{real:e[2*t],imag:e[2*t+1]}}function vc(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function kc(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function Ic(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}const Sc=/->/g;function Nc(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Sc,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[s,r]=e.split("->");A(-1===s.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=s.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<r.length;++e){const t=r[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<s.length;++e){const t=s[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=r.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function $c(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const s=[];for(let t=0;t<e;++t)-1===n[t]&&s.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function Cc(e,t,n){const s=new Array(e);for(let e=0;e<n.length;++e){const r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===s[t[e][n]]?s[t[e][n]]=r[n]:A(s[t[e][n]]===r[n],(()=>`Expected dimension ${s[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function Tc(e,t){const n=e,s=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)s.push([]);const a=[];for(let e=0;e<n.length;++e){const r=Rc(t,n[e]);for(const t of r)-1===a.indexOf(t)&&(s[e].push(t),a.push(t))}return{path:n,steps:s}}function Ec(e){return e.every(((e,t)=>e===t))}function Rc(e,t){const n=[];for(let s=0;s<e.length;++s)0!==e[s].length&&-1===e[s].indexOf(t)&&-1!==t||n.push(s);return n}function Ac(e,t,n=0){let s=[];if("number"==typeof t)A(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);A(r<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const s=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-s}A(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function Fc(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Dc(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function _c(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Oc(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Lc(e,t){return`size ${e} must be non-negative, not ${t}`}function Mc(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function zc(e,t){return`Input to reshape is a SparseTensor with ${O(e)}\n  dense values, but the requested shape requires a multiple of ${O(t)}. inputShape=${e} outputShape= ${t}`}function Bc(e,t){return`Input to reshape is a tensor with ${O(e)} dense values, but the requested shape has ${O(t)}. inputShape=${e} outputShape=${t}`}function Pc(){return"segment ids must be >= 0"}function Wc(){return"segment ids are not increasing"}function Uc(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Vc(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Gc(e,t){let n,s=!1;for(e<=Yu?(n=e,s=!0):n=Q(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=Q(e,n+1);return n}function Hc(e,t,n){const s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function jc(e,t,n,s){const r=t.shape.length,a=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<s;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=s;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=s;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function qc(e){try{return e.map((e=>Qs(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Kc(e){return e.map((e=>Js(e)))}function Xc(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const s=Na(e,"int32"),r=Na([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=s.indexToLoc(n[t]),i=t*e.length;r.values.set(a,i)}return r.toTensor()}const Yc={kernelName:be,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ko(e,Ll($a(n,"float32"),-1))}}},Zc={kernelName:xe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Uo($a(n,"float32")),s=bl(Io(fi(1),t));return Go(io(e,s))}}}},Jc={kernelName:ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=bl(Io(Uo($a(n,"float32")),1));return io(e,t)}}}},Qc={kernelName:we,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=za(n.shape,s.shape);return{a:()=>{let t=e;const s=Ma(n.shape,r);return s.length>0&&(t=So(t,s)),Oi(t,n.shape)},b:()=>{let t=e;const n=Ma(s.shape,r);return n.length>0&&(t=So(t,n)),Oi(t,s.shape)}}}},eh={kernelName:ve,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},th={kernelName:Se,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nl(n)}}},nh={kernelName:Ne,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nl(n)}}},sh={kernelName:$e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>io(e,bl(Io(fi(1),Uo($a(n,"float32")))))}}},rh={kernelName:Ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=bl(bi(fi(1),Uo($a(n,"float32"))));return io(e,t)}}}},ah={kernelName:Re,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=za(n.shape,s.shape);return{a:()=>{const t=bi(Uo(n),Uo(s));let a=ko(e,io(s,t));const i=Ma(n.shape,r);return i.length>0&&(a=So(a,i)),Oi(a,n.shape)},b:()=>{const t=bi(Uo(n),Uo(s));let a=Go(ko(e,io(n,t)));const i=Ma(s.shape,r);return i.length>0&&(a=So(a,i)),Oi(a,s.shape)}}}},ih={kernelName:Te,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>io(e,bi(Uo($a(n,"float32")),1))}}},oh={kernelName:Ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>io(e,Io(fi(1),Uo($a(n,"float32"))))}}},lh=Wr({avgPool3dGrad_:function(e,t,n,s,r,a){const i=Br(e,"dy","avgPool3dGrad"),o=Br(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=Oi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Oi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),A(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),_i("avgPool3dGrad",r,a);const h={dy:l,input:u},d={filterSize:n,strides:s,pad:r,dimRoundingMode:a},p=Ar.runKernel(_e,h,d);return c?Oi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),uh={kernelName:De,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>lh(e,s,r,a,i,o)}}},ch=Wr({avgPoolGrad_:function(e,t,n,s,r){const a=Br(e,"dy","avgPoolGrad"),i=Br(t,"input","avgPoolGrad");A(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=Oi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Oi(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),A(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},d=Ar.runKernel(Fe,c,h);return u?Oi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),hh={kernelName:Ae,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>ch(e,s,r,a,i)}}},dh={kernelName:Oe,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Co(e,r,!1,!1),b:()=>Co(e,s,!0,!1)}:a&&!i?{a:()=>Co(r,e,!1,!0),b:()=>Co(s,e,!1,!1)}:{a:()=>Co(r,e,!0,!0),b:()=>Co(e,s,!0,!0)}:{a:()=>Co(e,r,!1,!0),b:()=>Co(s,e,!0,!1)}}},ph=Wr({spaceToBatchND_:function(e,t,n){const s=Br(e,"x","spaceToBatchND");A(s.rank>=1+t.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`)),A(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),A(s.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:s},a={blockShape:t,paddings:n};return Ar.runKernel(Kn,r,a)}}),fh={kernelName:Le,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>ph(e,s,r)}}},gh={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>So(e,o,!0)}}},mh={kernelName:Be,gradFunc:e=>({x:()=>e.clone()})},bh={kernelName:Pe,gradFunc:e=>({x:()=>Nl(e)})},xh={kernelName:We,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>Sl($o(bo(s,r),gu(s,a)),e,Nl(e))}}},yh={kernelName:Ve,inputsToSave:["x"],gradFunc:Yc.gradFunc},wh={kernelName:Ge,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,a=U(r,t[0].shape)[0],i=s.map((e=>e[a]));return ml(e,i,a).map((e=>()=>e))}},vh={kernelName:He,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return A(Ai(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Ji(s.shape,e,r,i,o,l),filter:()=>_l(s,e,r.shape,i,o,l)}}},kh={kernelName:qe,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Yi(e,r,a,i,o,1,l),filter:()=>_l(e,s,r.shape,a,i,o,l)}}},Ih=Wr({conv3DBackpropFilter_:function(e,t,n,s,r){let a=e;4===e.rank&&(a=Oi(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Oi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),A(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),A(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),A(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),A(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),A(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:s,pad:r,filterShape:n};return Ar.runKernel(Xe,o,l)}}),Sh={kernelName:Ke,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a}=n;A(Ai(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=t;return{x:()=>to(i.shape,e,o,r,a),filter:()=>Ih(i,e,o.shape,r,a)}}},Nh=Wr({sin_:function(e){const t={x:Br(e,"x","sin","float32")};return Ar.runKernel(Wn,t)}}),$h={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ko(Go(Nh($a(n,"float32"))),e)}}},Ch=Wr({sinh_:function(e){const t={x:Br(e,"x","sinh")};return Ar.runKernel(Un,t)}}),Th={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ko(Ch($a(n,"float32")),e)}}},Eh=Wr({cumsum_:function(e,t=0,n=!1,s=!1){const r={x:Br(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:s};return Ar.runKernel(et,r,a)}}),Rh={kernelName:et,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const t=Bo([r],s.rank);let n=Eh(e,r,a,!i);return null!=t&&(n=Tl(n,t)),n}}}},Ah={kernelName:rt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;A(Ai(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return A(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),A(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),A(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),A(Fi(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),_i("depthwiseConv2d",a,i),{x:()=>Vl(l.shape,e,u,r,a,o,i),filter:()=>Ul(l,e,u.shape,r,a,o,i)}}},Fh={kernelName:lt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>Ar.runKernel(ut,a,n),filter:()=>Ar.runKernel(ct,i,n)}}},Dh={kernelName:pt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>Ar.runKernel(ft,s)}}},_h={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=ko(uo(Go(Uo(n))),2/Math.sqrt(Math.PI));return{x:()=>ko(e,s)}}},Oh={kernelName:bt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ko(e,n)}}},Lh={kernelName:xt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Oi(e,n.shape)}}},Mh={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ko(e,uo(n))}}},zh={kernelName:It,gradFunc:e=>({x:()=>Nl(e)})},Bh={kernelName:St,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=za(n.shape,s.shape);return{a:()=>{const t=io(e,$a(s,"float32")),a=Ma(n.shape,r);return a.length>0?Oi(So(t,a),n.shape):t},b:()=>{let t=ko(e,$a(n,"float32"));const a=Ma(s.shape,r);a.length>0&&(t=Oi(So(t,a),s.shape));const i=Uo(s);return Go(io(t,$a(i,"float32")))}}}},Ph=Wr({rsqrt_:function(e){const t={x:Br(e,"x","rsqrt","float32")};return Ar.runKernel(On,t)}}),Wh={kernelName:Nt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=t,l=null==o?fi(1):o,u=Ma(a.shape,r.shape),c=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=Io(r,a),d=ko(e,l),p=Ph(bi(i,fi(s))),f=ko(ko(ko(p,p),p),fi(-.5));return{x:()=>1===a.rank?Oi(ko(ko(e,ho(Oi(p,[1,1,1,a.shape[0]]),c)),l),r.shape):Oi(ko(ko(e,p),l),r.shape),mean:()=>{let e=ko(ko(p,fi(-1)),d);return 1===a.rank&&(e=So(e,u)),Oi(e,a.shape)},variance:()=>{let e=ko(ko(f,h),d);return 1===a.rank&&(e=So(e,u)),Oi(e,a.shape)},scale:()=>{const t=ko(h,p);let n=ko(e,t);return 1===a.rank&&(n=So(n,u)),Oi(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=So(t,u)),Oi(t,a.shape)}}}},Uh=Wr({unsortedSegmentSum_:function(e,t,n){const s=Br(e,"x","unsortedSegmentSum"),r=Br(t,"segmentIds","unsortedSegmentSum","int32");A(M(n),(()=>"numSegments must be of dtype int"));const a={x:s,segmentIds:r},i={numSegments:n};return Ar.runKernel(bs,a,i)}}),Vh={kernelName:$t,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:a}=n,i=U(a,s.shape)[0];return{x:()=>{const t=s.shape,n=r.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=Gh(0,l),d=Gh(l+1,l+1+c),p=Hh([o,[n],u]),f=Oi(e,p),g=Oi(r,[n]),m=Hh([[l],h,d]),b=Tl(f,m);let x=Uh(b,g,s.shape[i]);const y=Po(m);return x=Tl(x,y),x},indices:()=>r}}};function Gh(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function Hh(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const jh={kernelName:Et,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Nl(n),b:()=>Nl(s)}}},qh={kernelName:Rt,gradFunc:e=>({x:()=>$a(e,"float32")})},Kh={kernelName:Dt,gradFunc:e=>({x:()=>Nl(e)})},Xh={kernelName:_t,gradFunc:e=>({x:()=>Nl(e)})},Yh={kernelName:Ot,gradFunc:e=>({x:()=>Nl(e)})},Zh={kernelName:Lt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,a=mo(s,0);return{x:()=>Sl(a,e,ko(e,r))}}},Jh={kernelName:Wt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>io(e,bi(n,1))}}},Qh={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>io(e,$a(n,"float32"))}}},ed={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=uo(s);return Io(e,ko(So(e,r,!0),t))}}}},td=Wr({localResponseNormalizationBackprop_:function(e,t,n,s=5,r=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:i};return Ar.runKernel(jt,o,l)}}),nd={kernelName:Ht,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>td(s,r,e,a,i,o,l)}}};function sd(e,t,n,s){return t.rank<n.rank&&(t=Oi(t,Mo(t.shape,s))),e.rank<n.rank&&(e=Oi(e,Mo(e.shape,s))),{x:()=>ko(e,$a(lo(n,t),e.dtype))}}const rd={kernelName:qt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,a=t[0],i=sd(e,t[1],a,U(r,a.shape));return{x:()=>i.x()}}},ad=Wr({less_:function(e,t){let n=Br(e,"a","less","string_or_numeric"),s=Br(t,"b","less","string_or_numeric");[n,s]=Ir(n,s),za(n.shape,s.shape);const r={a:n,b:s};return Ar.runKernel(Mt,r)}}),id={kernelName:Kt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>ko(e,$a(bo(n,s),"float32")),b:()=>ko(e,$a(ad(n,s),"float32"))}}},od=Wr({maxPool3dGrad_:function(e,t,n,s,r,a,i){const o=Br(e,"dy","maxPool3dGrad"),l=Br(t,"input","maxPool3dGrad"),u=Br(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=Oi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Oi(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Oi(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),A(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),A(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),A(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),_i("maxPool3dGrad",a,i);const f={dy:c,input:h,output:d},g={filterSize:s,strides:r,pad:a,dimRoundingMode:i},m=Ar.runKernel(Jt,f,g);return p?Oi(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),ld={kernelName:Zt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>od(e,s,r,a,i,o,l)}}},ud=Wr({maxPoolGrad_:function(e,t,n,s,r,a,i){const o=Br(e,"dy","maxPoolGrad"),l=Br(t,"input","maxPoolGrad"),u=Br(n,"output","maxPoolGrad");A(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),A(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),A(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),_i("maxPoolGrad",a,i);const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return Ar.runKernel(Yt,c,h)}}),cd={kernelName:Xt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>ud(e,s,r,a,i,o)}}},hd={kernelName:en,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,a=U(r,s.shape),i=O(Lo(s.shape,a)[1]);return{x:()=>{const t=s.shape.slice();a.forEach((e=>{t[e]=1}));const n=Oi(e,t);return io(ko(n,Ko(s.shape,"float32")),i)}}}},dd={kernelName:tn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[a,i]=t,o=sd(e,i,a,U(r,a.shape));return{x:()=>o.x()}}},pd={kernelName:nn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>ko(e,$a(gu(n,s),"float32")),b:()=>ko(e,$a(mo(n,s),"float32"))}}},fd={kernelName:sn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>ul(e,a,s.shape)}}},gd={kernelName:rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=za(n.shape,s.shape);return{a:()=>{const t=Ma(n.shape,r);return t.length>0?Oi(So(e,t),n.shape):e},b:()=>{const t=ko(e,Go(fo(io(n,s)))),a=Ma(s.shape,r);return a.length>0?Oi(So(t,a),s.shape):t}}}},md={kernelName:on,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=za(n.shape,s.shape);return{a:()=>{const t=ko(e,$a(s,"float32")),a=Ma(n.shape,r);return a.length>0?Oi(So(t,a),n.shape):t},b:()=>{const t=ko(e,$a(n,"float32")),a=Ma(s.shape,r);return a.length>0?Oi(So(t,a),s.shape):t}}}},bd={kernelName:ln,gradFunc:e=>({x:()=>Go(e)})},xd={kernelName:fn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>qo(n.shape,"float32")}}},yd={kernelName:pn,gradFunc:e=>({x:()=>Nl(e)})},wd={kernelName:gn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return Il(e,s).map((e=>()=>e))}},vd={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>ul(e,a,s.shape)}}},kd={kernelName:bn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,a=n,i=s,o=za(a.shape,i.shape);return{a:()=>{const t=$a(i,"float32");let n=ko(e,ko(t,wu(a,Io(t,fi(1)))));const s=Ma(a.shape,o);return s.length>0&&(n=So(n,s)),Oi(n,a.shape)},b:()=>{const t=mo(a,0),n=Sl(t,yo(a),Nl(a));let s=ko(e,ko(r,n));const l=Ma(i.shape,o);return l.length>0&&(s=So(s,l)),Oi(s,i.shape)}}}},Id={kernelName:xn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=mo(n,0);return{x:()=>Sl(r,e,ko(e,s)),alpha:()=>{let t=Sl(r,Nl(e),ko(e,n));const a=Ma(s.shape,e.shape);return a.length>0&&(t=So(t,a)),Oi(t,s.shape)}}}},Sd=Wr({cumprod_:function(e,t=0,n=!1,s=!1){const r={x:Br(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:s};return Ar.runKernel(Qe,r,a)}});const Nd={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;let a=[];return a=null==r?s.shape.map(((e,t)=>t)):"number"==typeof r?[r]:r,{x:()=>function(e,t,n){const s=e.shape.length,r=s-n.length,a=Bo(n,s);let i=e;null!=a&&(i=Tl(e,a));const o=i.shape.slice(),l=o.splice(s-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const s=e.shape.slice();s[n]=1;const r=Oi(t,s),a=Sd(e,n,!0,!1),i=Sd(e,n,!0,!0),o=ko(a,i);return ko(r,o)}(i.reshape(o),t,r);if(u=u.reshape(i.shape),null!=a){const e=Po(a);u=Tl(u,e)}return u}(s,e,a)}}},$d={kernelName:ht,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=za(n.shape,s.shape);return{a:()=>{const t=io(e,$a(s,"float32")),a=Ma(n.shape,r);return a.length>0?Oi(So(t,a),n.shape):t},b:()=>{let t=ko(e,$a(n,"float32"));const a=Ma(s.shape,r);a.length>0&&(t=Oi(So(t,a),s.shape));const i=Uo(s);return Go(io(t,$a(i,"float32")))}}}},Cd={kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>io(e,Go(Uo(n)))}}},Td={kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=ko(gu(n,6),Ll(n));return{x:()=>ko(e,$a(s,"float32"))}}},Ed={kernelName:$n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ko(e,$a(Ll(n),"float32"))}}},Rd={kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oi(e,n.shape)}}},Ad={kernelName:Rn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>Ar.runKernel(An,r,n)}}},Fd={kernelName:Tn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>Ar.runKernel(En,r,n)}}},Dd={kernelName:Dn,gradFunc:(e,t,n)=>{const{dims:s}=n,r=U(s,e.shape);return{x:()=>al(e,r)}}},_d={kernelName:_n,gradFunc:e=>({x:()=>Nl(e)})},Od={kernelName:On,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Go(io(e,ko(wu(n,1.5),2)))}}},Ld=Wr({logicalNot_:function(e){const t={x:Br(e,"x","logicalNot","bool")};return Ar.runKernel(Vt,t)}}),Md={kernelName:zn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>$a(Nl(n),"float32"),t:()=>ko(e,$a(n,e.dtype)),e:()=>ko(e,$a(Ld(n),e.dtype))}}},zd={kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=mo(n,fi(0)),s=fi(lc),r=fi(uc),a=ko(e,r),i=ko(ko(e,s),uo($a(n,"float32")));return Sl(t,a,i)}}}},Bd={kernelName:Gn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ko(e,ko(n,Io(fi(1),n)))}}},Pd={kernelName:Vn,gradFunc:e=>({x:()=>Nl(e)})},Wd=Wr({cos_:function(e){const t={x:Br(e,"x","cos","float32")};return Ar.runKernel(Ze,t)}}),Ud={kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ko(Wd($a(n,"float32")),e)}}},Vd=Wr({cosh_:function(e){const t={x:Br(e,"x","cosh","float32")};return Ar.runKernel(Je,t)}}),Gd={kernelName:Un,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ko(Vd($a(n,"float32")),e)}}},Hd={kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:a}=n,i=s.shape,[o,l]=ti(s,r,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>Yo(e,u)}}},jd={kernelName:Yn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,a=ko(e,s);return{logits:()=>Io(a,ko(So(a,[r],!0),s))}}},qd={kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ko(e,ll(n))}}},Kd=Wr({batchToSpaceND_:function(e,t,n){const s=Br(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));A(s.rank>=1+t.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`)),A(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),A(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const a={x:s},i={blockShape:t,crops:n};return Ar.runKernel(Le,a,i)}}),Xd={kernelName:Kn,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>Kd(e,s,r)}}},Yd={kernelName:Xn,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>Hi(e,s)}}},Zd=[Yc,Zc,Jc,Qc,eh,th,nh,sh,rh,ah,ih,oh,uh,hh,dh,fh,gh,mh,bh,xh,yh,wh,kh,vh,Sh,$h,Th,Rh,Ah,Fh,$d,Dh,_h,Oh,Lh,Mh,Bh,zh,Wh,Vh,jh,qh,Kh,Xh,Yh,Zh,Jh,Qh,ed,nd,rd,rd,id,ld,cd,hd,dd,pd,fd,gd,md,bd,xd,yd,wd,vd,vd,kd,Id,Nd,Cd,Td,Ed,Rd,Ad,Fd,Dd,_d,Od,Md,zd,Bd,Pd,Ud,Gd,Hd,jd,qd,Xd,Xd,Yd,Yd,{kernelName:jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>io(e,ko(bl($a(n,"float32")),2))}}},{kernelName:ns,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=fi(2);return{a:()=>ko(e,ko(r,Io(n,s))),b:()=>ko(e,ko(r,Io(s,n)))}}},{kernelName:ss,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ko(e,ko($a(n,"float32"),2))}}},{kernelName:ys,gradFunc:e=>({x:()=>Nl(e)})},{kernelName:ls,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=za(n.shape,s.shape);return{a:()=>{let t=e;const s=Ma(n.shape,r);return s.length>0&&(t=So(t,s)),Oi(t,n.shape)},b:()=>{let t=e;const n=Ma(s.shape,r);return n.length>0&&(t=So(t,n)),Oi(Go(t),s.shape)}}}},{kernelName:qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:a}=n;U(a,s.shape).forEach((e=>{r[e]=1}));const i=Oi(e,r),o=ko(i,Ko(s.shape,"float32"));return{x:()=>o}}},{kernelName:us,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>io(e,Uo(Wd(n)))}}},{kernelName:cs,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ko(Io(fi(1),Uo(n)),e)}}},{kernelName:hs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=Nl(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=bi(t,ul(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)t=bi(t,ul(e,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)t=bi(t,ul(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=bi(t,ul(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},{kernelName:fs,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,a=Po(r);return{x:()=>Tl(e,a)}}},{kernelName:ms,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>yl(e,r)}}},{kernelName:bs,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ro(t,Nl(t)),s=go(e,n);let r=bo(t,fi(0,"int32"));const a=s.rank-r.rank;for(let e=0;e<a;++e)r=co(r,e+1);r=$o(r,Ko(s.shape,"bool"));const i=Nl(s);return Sl(r,s,i)}(e,n)}}},{kernelName:xs,gradFunc:e=>({x:()=>Nl(e)})}];for(const e of Zd)Ds(e);pr().prototype.abs=function(){return this.throwIfDisposed(),mi(this)};const Jd=Wr({acos_:function(e){const t={x:Br(e,"x","acos")};return Ar.runKernel(xe,t)}});pr().prototype.acos=function(){return this.throwIfDisposed(),Jd(this)};const Qd=Wr({acosh_:function(e){const t={x:Br(e,"x","acosh")};return Ar.runKernel(ye,t)}});pr().prototype.acosh=function(){return this.throwIfDisposed(),Qd(this)},pr().prototype.add=function(e){return this.throwIfDisposed(),bi(this,e)},pr().prototype.all=function(e,t){return this.throwIfDisposed(),xi(this,e,t)},pr().prototype.any=function(e,t){return this.throwIfDisposed(),yi(this,e,t)},pr().prototype.argMax=function(e){return this.throwIfDisposed(),wi(this,e)};const ep=Wr({argMin_:function(e,t=0){const n={x:Br(e,"x","argMin")},s={axis:t};return Ar.runKernel(Ne,n,s)}});pr().prototype.argMin=function(e){return this.throwIfDisposed(),ep(this,e)},pr().prototype.asScalar=function(){return this.throwIfDisposed(),A(1===this.size,(()=>"The array must have only 1 element.")),Oi(this,[])},pr().prototype.asType=function(e){return this.throwIfDisposed(),$a(this,e)},pr().prototype.as1D=function(){return this.throwIfDisposed(),Oi(this,[this.size])},pr().prototype.as2D=function(e,t){return this.throwIfDisposed(),Oi(this,[e,t])},pr().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Oi(this,[e,t,n])},pr().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),Oi(this,[e,t,n,s])},pr().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),Oi(this,[e,t,n,s,r])};const tp=Wr({asin_:function(e){const t={x:Br(e,"x","asin")};return Ar.runKernel($e,t)}});pr().prototype.asin=function(){return this.throwIfDisposed(),tp(this)};const np=Wr({asinh_:function(e){const t={x:Br(e,"x","asinh")};return Ar.runKernel(Ce,t)}});pr().prototype.asinh=function(){return this.throwIfDisposed(),np(this)};const sp=Wr({atan_:function(e){const t={x:Br(e,"x","atan")};return Ar.runKernel(Te,t)}});pr().prototype.atan=function(){return this.throwIfDisposed(),sp(this)};const rp=Wr({atan2_:function(e,t){let n=Br(e,"a","atan2"),s=Br(t,"b","atan2");[n,s]=Ir(n,s);const r={a:n,b:s};return Ar.runKernel(Re,r)}});pr().prototype.atan2=function(e){return this.throwIfDisposed(),rp(this,e)};const ap=Wr({atanh_:function(e){const t={x:Br(e,"x","atanh")};return Ar.runKernel(Ee,t)}});pr().prototype.atanh=function(){return this.throwIfDisposed(),ap(this)},pr().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),Li(this,e,t,n,s)},pr().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Kd(this,e,t)},pr().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),zi(this,e,t,n,s,r)},pr().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Ui(this,e)},pr().prototype.cast=function(e){return this.throwIfDisposed(),$a(this,e)};const ip=Wr({ceil_:function(e){const t={x:Br(e,"x","ceil","float32")};return Ar.runKernel(Pe,t)}});pr().prototype.ceil=function(){return this.throwIfDisposed(),ip(this)},pr().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Gi(this,e,t)},pr().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof dr&&(e=[e]),Hi([this,...e],t)},pr().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Zi(this,e,t,n,s,r,a)},pr().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),Qi(this,e,t,n,s,r)},pr().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Yi(this,e,t,n,s,r,a)},pr().prototype.cos=function(){return this.throwIfDisposed(),Wd(this)},pr().prototype.cosh=function(){return this.throwIfDisposed(),Vd(this)},pr().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Sd(this,e,t,n)},pr().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Eh(this,e,t,n)};const op=Wr({depthToSpace_:function(e,t,n="NHWC"){const s=Br(e,"x","depthToSpace","float32"),r="NHWC"===n?s.shape[1]:s.shape[2],a="NHWC"===n?s.shape[2]:s.shape[3],i="NHWC"===n?s.shape[3]:s.shape[1];A(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),A(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`)),A(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${s.shape}`)),A(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:t,dataFormat:n};return Ar.runKernel(st,o,l)}});pr().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),op(this,e,t)},pr().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),ro(this,e,t,n,s,r,a)};const lp=Wr({dilation2d_:function(e,t,n,s,r=[1,1],a="NHWC"){const i=Br(e,"x","dilation2d"),o=Br(t,"filter","dilation2d");A(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),A(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),A("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=Oi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},d=Ar.runKernel(lt,c,h);return u?Oi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});pr().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),lp(this,e,t,n,s,r)};const up=Wr({divNoNan_:function(e,t){let n=Br(e,"a","div"),s=Br(t,"b","div");[n,s]=Ir(n,s);const r=io(n,s),a=Nl(r),i=lo(s,a);return Sl(i,a,r)}});pr().prototype.divNoNan=function(e){return this.throwIfDisposed(),up(this,e)},pr().prototype.div=function(e){return this.throwIfDisposed(),io(this,e)};const cp=Wr({dot_:function(e,t){const n=Br(e,"t1","dot"),s=Br(t,"t2","dot");A(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],a=1===s.rank?s.size:s.shape[0];if(A(r===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`)),1===n.rank&&1===s.rank){const e=Oi(n,[1,-1]),t=Oi(s,[-1,1]),r=Co(e,t);return Oi(r,[])}if(1===n.rank&&2===s.rank){const e=Oi(n,[1,-1]),t=Oi(s,[s.shape[0],s.shape[1]]),r=Co(e,t);return Oi(r,[r.size])}if(2===n.rank&&1===s.rank){const e=Oi(s,[-1,1]),t=Co(n,e);return Oi(t,[t.size])}{const e=Oi(s,[s.shape[0],s.shape[1]]);return Co(n,e)}}});pr().prototype.dot=function(e){return this.throwIfDisposed(),cp(this,e)},pr().prototype.elu=function(){return this.throwIfDisposed(),oo(this)},pr().prototype.equal=function(e){return this.throwIfDisposed(),lo(this,e)};const hp=Wr({erf_:function(e){let t=Br(e,"x","erf");A("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=$a(t,"float32"));const n={x:t};return Ar.runKernel(gt,n)}});pr().prototype.erf=function(){return this.throwIfDisposed(),hp(this)};const dp=Wr({euclideanNorm_:function(e,t=null,n=!1){return ku(e,"euclidean",t,n)}});pr().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),dp(this,e,t)},pr().prototype.exp=function(){return this.throwIfDisposed(),uo(this)},pr().prototype.expandDims=function(e){return this.throwIfDisposed(),co(this,e)};const pp=Wr({expm1_:function(e){const t={x:Br(e,"x","expm1")};return Ar.runKernel(yt,t)}});pr().prototype.expm1=function(){return this.throwIfDisposed(),pp(this)},pr().prototype.fft=function(){return this.throwIfDisposed(),Rl(this)},pr().prototype.flatten=function(){return this.throwIfDisposed(),Oi(this,[this.size])},pr().prototype.floor=function(){return this.throwIfDisposed(),fo(this)},pr().prototype.floorDiv=function(e){return this.throwIfDisposed(),ao(this,e)},pr().prototype.gather=function(e,t){return this.throwIfDisposed(),go(this,e,t)},pr().prototype.greaterEqual=function(e){return this.throwIfDisposed(),bo(this,e)},pr().prototype.greater=function(e){return this.throwIfDisposed(),mo(this,e)},pr().prototype.ifft=function(){return this.throwIfDisposed(),Fl(this)},pr().prototype.irfft=function(){return this.throwIfDisposed(),Dl(this)};const fp=Wr({isFinite_:function(e){const t={x:Br(e,"x","isFinite")};return Ar.runKernel(Dt,t)}});pr().prototype.isFinite=function(){return this.throwIfDisposed(),fp(this)};const gp=Wr({isInf_:function(e){const t={x:Br(e,"x","isInf")};return Ar.runKernel(_t,t)}});pr().prototype.isInf=function(){return this.throwIfDisposed(),gp(this)};const mp=Wr({isNaN_:function(e){const t={x:Br(e,"x","isNaN")};return Ar.runKernel(Ot,t)}});pr().prototype.isNaN=function(){return this.throwIfDisposed(),mp(this)},pr().prototype.leakyRelu=function(e){return this.throwIfDisposed(),xo(this,e)},pr().prototype.lessEqual=function(e){return this.throwIfDisposed(),gu(this,e)},pr().prototype.less=function(e){return this.throwIfDisposed(),ad(this,e)};const bp=Wr({localResponseNormalization_:function(e,t=5,n=1,s=1,r=.5){const a=Br(e,"x","localResponseNormalization");A(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),A(M(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=Oi(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:s,beta:r},c=Ar.runKernel(Ht,l,u);return o?Oi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});pr().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),bp(this,e,t,n,s)};const xp=Wr({logSigmoid_:function(e){const t=Br(e,"x","logSigmoid"),n=pi((e=>({value:Go(gl(Go(e))),gradFunc:t=>ko(t,ll(Go(e)))})));return n(t)}});pr().prototype.logSigmoid=function(){return this.throwIfDisposed(),xp(this)},pr().prototype.logSoftmax=function(e){return this.throwIfDisposed(),No(this,e)},pr().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Eu(this,e,t)},pr().prototype.log=function(){return this.throwIfDisposed(),yo(this)},pr().prototype.log1p=function(){return this.throwIfDisposed(),wo(this)},pr().prototype.logicalAnd=function(e){return this.throwIfDisposed(),$o(this,e)},pr().prototype.logicalNot=function(){return this.throwIfDisposed(),Ld(this)};const yp=Wr({logicalOr_:function(e,t){const n=Br(e,"a","logicalOr","bool"),s=Br(t,"b","logicalOr","bool");za(n.shape,s.shape);const r={a:n,b:s};return Ar.runKernel(Gt,r)}});pr().prototype.logicalOr=function(e){return this.throwIfDisposed(),yp(this,e)};const wp=Wr({logicalXor_:function(e,t){const n=Br(e,"a","logicalXor","bool"),s=Br(t,"b","logicalXor","bool");return za(n.shape,s.shape),$o(yp(e,t),Ld($o(e,t)))}});pr().prototype.logicalXor=function(e){return this.throwIfDisposed(),wp(this,e)},pr().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Co(this,e,t,n)},pr().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),To(this,e,t,n,s)},pr().prototype.max=function(e,t){return this.throwIfDisposed(),vo(this,e,t)},pr().prototype.maximum=function(e){return this.throwIfDisposed(),Ro(this,e)},pr().prototype.mean=function(e,t){return this.throwIfDisposed(),Ao(this,e,t)},pr().prototype.min=function(e,t){return this.throwIfDisposed(),Fo(this,e,t)},pr().prototype.minimum=function(e){return this.throwIfDisposed(),Do(this,e)};const vp=Wr({mirrorPad_:function(e,t,n){A("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=Br(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A(t.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let e=0;e<s.rank;e++)A(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),A(t[e][0]>=0&&t[e][0]<=s.shape[e]-r&&t[e][1]>=0&&t[e][1]<=s.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${s.shape[e]-r} or less than 0 for input of shape ${s.shape}`));const a={paddings:t,mode:n},i={x:s};return Ar.runKernel(sn,i,a)}});pr().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),vp(this,e,t)};const kp=Wr({mod_:function(e,t){let n=Br(e,"a","mod"),s=Br(t,"b","mod");[n,s]=Ir(n,s);const r={a:n,b:s};return Ar.runKernel(rn,r)}});pr().prototype.mod=function(e){return this.throwIfDisposed(),kp(this,e)},pr().prototype.mul=function(e){return this.throwIfDisposed(),ko(this,e)},pr().prototype.neg=function(){return this.throwIfDisposed(),Go(this)},pr().prototype.norm=function(e,t,n){return this.throwIfDisposed(),ku(this,e,t,n)},pr().prototype.notEqual=function(e){return this.throwIfDisposed(),Ho(this,e)},pr().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),jo(this,e,t,n)},pr().prototype.onesLike=function(){return this.throwIfDisposed(),Xo(this)},pr().prototype.pad=function(e,t){return this.throwIfDisposed(),Yo(this,e,t)};const Ip=Wr({pool_:function(e,t,n,s,r,a,i){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const o=Br(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=Oi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(Fi(a,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`));const c=ki(l.shape,t,a,r,s),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===s?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],r[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,g]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),a=e.concat(s,r),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=r.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[s[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,d),m=p?s:"valid",b=p?l:ph(l,h,f),x=("avg"===n?()=>Li(b,t,a,m,i):()=>To(b,t,a,m,i))(),y=p?x:Kd(x,h,g);return u?Oi(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});pr().prototype.pool=function(e,t,n,s,r,a){return this.throwIfDisposed(),Ip(this,e,t,n,s,r,a)},pr().prototype.pow=function(e){return this.throwIfDisposed(),wu(this,e)},pr().prototype.prelu=function(e){return this.throwIfDisposed(),Zo(this,e)};const Sp=Wr({prod_:function(e,t=null,n=!1){let s=Br(e,"x","prod");"bool"===s.dtype&&(s=$a(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return Ar.runKernel(yn,r,a)}});pr().prototype.prod=function(e,t){return this.throwIfDisposed(),Sp(this,e,t)};const Np=Wr({reciprocal_:function(e){const t={x:Br(e,"x","reciprocal")};return Ar.runKernel(Nn,t)}});pr().prototype.reciprocal=function(){return this.throwIfDisposed(),Np(this)},pr().prototype.relu=function(){return this.throwIfDisposed(),rl(this)},pr().prototype.relu6=function(){return this.throwIfDisposed(),Ol(this)},pr().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Oi(this,e.shape)},pr().prototype.reshape=function(e){return this.throwIfDisposed(),Oi(this,e)},pr().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),du(this,e,t,n)},pr().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),pu(this,e,t,n)},pr().prototype.reverse=function(e){return this.throwIfDisposed(),al(this,e)},pr().prototype.rfft=function(){return this.throwIfDisposed(),Al(this)},pr().prototype.round=function(){return this.throwIfDisposed(),mu(this)},pr().prototype.rsqrt=function(){return this.throwIfDisposed(),Ph(this)},pr().prototype.selu=function(){return this.throwIfDisposed(),il(this)},pr().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),ol(this,e,t,n,s,r,a)},pr().prototype.sigmoid=function(){return this.throwIfDisposed(),ll(this)};const $p=Wr({sign_:function(e){const t={x:Br(e,"x","sign")};return Ar.runKernel(Vn,t)}});pr().prototype.sign=function(){return this.throwIfDisposed(),$p(this)},pr().prototype.sin=function(){return this.throwIfDisposed(),Nh(this)},pr().prototype.sinh=function(){return this.throwIfDisposed(),Ch(this)},pr().prototype.slice=function(e,t){return this.throwIfDisposed(),ul(this,e,t)},pr().prototype.softmax=function(e){return this.throwIfDisposed(),fl(this,e)},pr().prototype.softplus=function(){return this.throwIfDisposed(),gl(this)},pr().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),ph(this,e,t)},pr().prototype.split=function(e,t){return this.throwIfDisposed(),ml(this,e,t)},pr().prototype.sqrt=function(){return this.throwIfDisposed(),bl(this)},pr().prototype.square=function(){return this.throwIfDisposed(),Uo(this)},pr().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Tu(this,e)},pr().prototype.squeeze=function(e){return this.throwIfDisposed(),xl(this,e)},pr().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof dr?[this,e]:[this,...e];return yl(n,t)},pr().prototype.step=function(e){return this.throwIfDisposed(),Ll(this,e)};const Cp=Wr({stridedSlice_:function(e,t,n,s,r=0,a=0,i=0,o=0,l=0){const u={x:Br(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Ar.runKernel(rs,u,c)}});pr().prototype.stridedSlice=function(e,t,n,s,r,a,i,o){return this.throwIfDisposed(),Cp(this,e,t,n,s,r,a,i,o)},pr().prototype.sub=function(e){return this.throwIfDisposed(),Io(this,e)},pr().prototype.sum=function(e,t){return this.throwIfDisposed(),So(this,e,t)};const Tp=Wr({tan_:function(e){const t={x:Br(e,"x","tan","float32")};return Ar.runKernel(us,t)}});pr().prototype.tan=function(){return this.throwIfDisposed(),Tp(this)},pr().prototype.tanh=function(){return this.throwIfDisposed(),wl(this)},pr().prototype.tile=function(e){return this.throwIfDisposed(),ho(this,e)},pr().prototype.toBool=function(){return this.throwIfDisposed(),$a(this,"bool")},pr().prototype.toFloat=function(){return this.throwIfDisposed(),$a(this,"float32")},pr().prototype.toInt=function(){return this.throwIfDisposed(),$a(this,"int32")};const Ep=Wr({topk_:function(e,t=1,n=!0){const s=Br(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const a={x:s},i={k:t,sorted:n},[o,l]=Ar.runKernel(ds,a,i);return{values:o,indices:l}}});pr().prototype.topk=function(e,t){return this.throwIfDisposed(),Ep(this,e,t)},pr().prototype.transpose=function(e){return this.throwIfDisposed(),Tl(this,e)};const Rp=Wr({unique_:function(e,t=0){const n=Br(e,"x","unique","string_or_numeric");A(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:t},[a,i]=Ar.runKernel(gs,s,r);return{values:a,indices:i}}});pr().prototype.unique=function(e){return this.throwIfDisposed(),Rp(this,e)},pr().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Uh(this,e,t)},pr().prototype.unstack=function(e){return this.throwIfDisposed(),Il(this,e)},pr().prototype.where=function(e,t){return this.throwIfDisposed(),Sl(e,this,t)},pr().prototype.zerosLike=function(){return this.throwIfDisposed(),Nl(this)};class Ap extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ap.prototype)}}class Fp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Fp.prototype)}}class Dp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Dp.prototype)}}class _p extends Error{constructor(e){super(e),Object.setPrototypeOf(this,_p.prototype)}}class Op extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Op.prototype)}}class Lp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Lp.prototype)}}class Mp{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function zp(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Bp(e,t){if(!e)throw new Op(t)}function Pp(e,t){let n=0;for(const s of e)s===t&&n++;return n}function Wp(e){return 1===e.length?e[0]:e}function Up(e){return Array.isArray(e)?e:[e]}function Vp(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Gp(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Hp={};function jp(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function qp(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>qp(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?qp(t):e[n]=t.value)}}}function Kp(e,t={},n={},s="object",r=!1){if("string"==typeof e){const r=e;let a;if(r in n)a=n[r];else if(r in Hp)a=Hp[r];else if(a=t[r],null==a)throw new Dp(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Dp(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Hp?[o,l]=Hp.className:i in t&&([o,l]=t[i]),null==o)throw new Dp(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(Hp))e[t]=Hp[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},Hp);for(const e of Object.keys(n))Hp[e]=n[e];qp(a.config);const s=l(o,a.config,n,r);return Hp=Object.assign({},t),s}{const e=Object.assign({},Hp);for(const e of Object.keys(n))Hp[e]=n[e];const t=new o(a.config);return Hp=Object.assign({},e),t}}}function Xp(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Yp(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Zp(e){if(null==e)throw new Dp(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Jp(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Dp(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Qp(e,t,n=0,s=1/0){return Bp(n>=0),Bp(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function ef(e,t){Array.isArray(e)?(A(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>ef(e,`element ${n+1} of ${t}`)))):A(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${tf(e)}.`))}function tf(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>tf(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function nf(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let sf=0;function rf(){return sf++}const af={};function of(e=""){return e in af||(af[e]=0),af[e]+=1,e+af[e].toString()}const lf=["channelsFirst","channelsLast"],uf=["nearest","bilinear"],cf=["valid","same","causal"],hf=["max","avg"],df=["sum","mul","concat","ave"],pf=new Map;function ff(e){Jp(lf,"DataFormat",e)}function gf(e){Jp(cf,"PaddingMode",e)}function mf(e){Jp(hf,"PoolMode",e)}const bf=[];function xf(e,t){bf.push(e);try{const e=t();return bf.pop(),e}catch(e){throw bf.pop(),e}}function yf(e){if(!kf(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===bf.length?"":bf.join("/")+"/")+e}function wf(e){if(!kf(e))throw new Error("Not a valid tensor name: '"+e+"'");pf.has(e)||pf.set(e,0);const t=pf.get(e);if(pf.set(e,pf.get(e)+1),t>0){const n=`${e}_${t}`;return pf.set(n,1),n}return e}const vf=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function kf(e){return!!e.match(vf)}function If(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Sf(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function Nf(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function $f(e,t){if(t<e)throw new Dp(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}let Cf;function Tf(){return null==Cf&&(Cf=Ar.backend.epsilon()),Cf}function Ef(e,t){return $a(e,t)}function Rf(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Oi(e,n)}function Af(e,t,n){return ui((()=>{switch(e.rank){case 1:return cl(e,t,n);case 2:return hl(e,[t,0],[n,e.shape[1]]);case 3:return dl(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return pl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return ul(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return ul(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Dp(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Ff(e,t,n){return ui((()=>{switch(e.rank){case 1:return cl(e,t,n);case 2:return hl(e,[0,t],[e.shape[0],n]);case 3:return dl(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return pl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Dp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Df(e,t,n,s){return ui((()=>{switch(e.rank){case 1:return cl(e,t,n);case 2:switch(s){case 1:return Af(e,t,n);case 2:return Ff(e,t,n);default:throw new Dp(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Af(e,t,n);case 2:return dl(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Ff(e,t,n);default:throw new Dp(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Af(e,t,n);case 2:return pl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return pl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Ff(e,t,n);default:throw new Dp(`The axis is not within the rank of the tensor ${s}`)}default:throw new Dp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function _f(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Hi(e,t)}function Of(e,t){switch(e.rank){case 1:return ji([e,t]);case 2:return qi([e,t],0);case 3:return Ki([e,t],0);case 4:return Xi([e,t],0);default:throw new Dp(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Lf(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Dp(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return ho(e,t)}function Mf(e,t=0,n=1,s,r){return tl(e,t,n,s,r)}function zf(e,t,n,s){if(e.rank<2||t.rank<2)throw new _p(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new _p(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Gl({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?Wf(e.rank,s,"channelsLast"):null,activation:n});{const r=e.shape.slice(),a=r.pop();e=Oi(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Oi(Tl(t,c),[l,-1]);const h=[...r,...u];return Oi(Gl({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?Wf(e.rank,s,"channelsLast"):null,activation:n}),h)}}function Bf(e,t,n){return ui((()=>(t=Array.isArray(t)?vl(t,"int32"):$a(t,"int32"),go(e,t,n))))}function Pf(e){return ko(e,e)}function Wf(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new Dp(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?Oi(t,[1,s[0],1,1,1]):Oi(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?Oi(t,[1,1,1,1,s[0]]):Oi(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?Oi(t,[1,s[0],1,1]):Oi(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?Oi(t,[1,1,1,s[0]]):Oi(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?Oi(t,[1,s[0],1]):Oi(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?Oi(t,[1,1,s[0]]):Oi(t,[1].concat(s))}else if(e<3)return t;throw new Dp(`Unsupported input rank by biasAdd: ${t.rank}`)}function Uf(e,t,n){return ui((()=>(null==n&&(n="channelsLast"),ff(n),bi(e,Wf(e.rank,t,n)))))}function Vf(e,t,n,s){return ui((()=>El(e,t,n,s)))}function Gf(e,t,n=!1){return n?e():t()}const Hf=["fanIn","fanOut","fanAvg"],jf=["normal","uniform","truncatedNormal"];class qf extends ri{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Kf extends qf{apply(e,t){return qo(e,t)}}Kf.className="Zeros",ii(Kf);class Xf extends qf{apply(e,t){return Ko(e,t)}}Xf.className="Ones",ii(Xf);class Yf extends qf{constructor(e){if(super(),"object"!=typeof e)throw new Dp(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Dp(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return ui((()=>ko(fi(this.value),Ko(e,t))))}getConfig(){return{value:this.value}}}Yf.className="Constant",ii(Yf);class Zf extends qf{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return nl(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Zf.className="RandomUniform",ii(Zf);class Jf extends qf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new _p(`randomNormal does not support dType ${t}.`);return Mf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Jf.className="RandomNormal",ii(Jf);class Qf extends qf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new _p(`truncatedNormal does not support dType ${t}.`);return kl(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Qf.className="TruncatedNormal",ii(Qf);class eg extends qf{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return ui((()=>{if(2!==e.length||e[0]!==e[1])throw new Dp("Identity matrix initializer can only be used for 2D square matrices.");return ko(this.gain,po(e[0]))}))}getConfig(){return{gain:this.gain}}}eg.className="Identity",ii(eg);class tg extends qf{constructor(e){if(super(),e.scale<0)throw new Dp(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Jp(Hf,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Jp(jf,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,s;if(ff(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=If(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=If(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=If(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}(e),s=n[0],r=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,s):"fanOut"===this.mode?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new _p(`${this.getClassName()} does not support dType ${t}.`);return kl(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return nl(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}tg.className="VarianceScaling",ii(tg);class ng extends tg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return tg.className}}ng.className="GlorotUniform",ii(ng);class sg extends tg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return tg.className}}sg.className="GlorotNormal",ii(sg);class rg extends tg{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return tg.className}}rg.className="HeNormal",ii(rg);class ag extends tg{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return tg.className}}ag.className="HeUniform",ii(ag);class ig extends tg{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return tg.className}}ig.className="LeCunNormal",ii(ig);class og extends tg{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return tg.className}}og.className="LeCunNormal",ii(og);class lg extends qf{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new _p("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return ui((()=>{if(e.length<2)throw new _p("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Mf(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Au.gramSchmidt(t);return e[0]>e[1]&&(n=Tl(n)),ko(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}lg.className="Orthogonal",ii(lg);const ug={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function cg(e,t={}){return Kp(e,ai.getMap().classNameMap,t,"initializer")}function hg(e){return jp(e)}function dg(e){if("string"==typeof e){const t=e in ug?ug[e]:e;if("GlorotNormal"===t)return new sg;if("GlorotUniform"===t)return new ng;if("HeNormal"===t)return new rg;if("HeUniform"===t)return new ag;if("LeCunNormal"===t)return new ig;if("LeCunUniform"===t)return new og;{const e={};return e.className=t,e.config={},cg(e)}}return e instanceof qf?e:cg(e)}function pg(e){return Array.isArray(e)&&Array.isArray(e[0])}function fg(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function gg(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Dp(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function mg(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Dp(`Expected exactly 1 Shape; got ${e.length}`)}return e}function bg(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class xg{constructor(e,t="float32",n="Variable",s=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=rf(),n=null==n?"Variable":n,this.originalName=yf(n),this.name=wf(this.originalName),this.trainable_=s,this.constraint=r,this.val=function(e,t=!0,n,s){return Ar.makeVariable(e,t,n,s)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function yg(e){return e.map((e=>e.read()))}function wg(e){e.forEach((e=>{e[0].write(e[1])}))}class vg{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class kg{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=rf(),null!=a&&(this.originalName=yf(a),this.name=wf(this.originalName)),this.rank=t.length}}let Ig=0;class Sg{constructor(e,t){this.callArgs=t,this.id=Ig++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Ng=0;class $g extends ri{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Ng++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Vp(e)+"_"+of(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Fp(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Dp(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Wp(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Wp(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ap(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Ap(`Layer ${this.name} is not connected, no input to return.`);return Wp(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Ap(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ap(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Wp(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Up(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Up(this.inputSpec);if(e.length!==t.length)throw new Dp(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const s=e[n],r=t[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new Dp(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new Dp(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new Dp(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new Dp(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const e=s.shape;for(const t in r.axes){const s=Number(t),a=r.axes[t],i=s>=0?e[s]:e[e.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new Dp(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],a=s.shape[e];if(null!=t&&null!=a&&t!==a)throw new Dp(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Up(e);let s=!0;for(const e of n)if(!(e instanceof kg)){s=!1;break}let r=!0;for(const e of n)if(e instanceof kg){r=!1;break}if(s===r)throw new Dp("Arguments to apply() must be all SymbolicTensors or all Tensors");return xf(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Up(e))t.push(n.shape);this.build(Wp(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);const r=Up(s),a=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(s=Wp(a),null!=this.activityRegularizer)throw new _p("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=Up(e);const t=[];for(const n of e)t.push(n.shape);return Wp(t)}(e),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new kg(a,n,this,Up(e),t,this.name,s))):new kg(a,s,this,Up(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new _p("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Ap(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Ap(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Fp(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return bg(this.weights)}build(e){this.built=!0}getWeights(e=!1){return yg(e?this.trainableWeights:this.weights)}setWeights(e){ui((()=>{const t=this.weights;if(t.length!==e.length)throw new Dp(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=yg(t);for(let r=0;r<s.length;++r){const a=s[r],i=t[r],o=e[r];if(!L(a.shape,o.shape))throw new Dp(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}wg(n)}))}addWeight(e,t,n,s,r,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Dp(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():dg("zeros"));const l=s.apply(t,n),u=new xg(l,n,e,a,i);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Up(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,s,r,a,i=null){const o=Up(e);t=Up(t),n=Up(n),s=Up(s),r=fg(r),a=fg(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new Sg({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Cg(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=Cg(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class Tg extends $g{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:of("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Dp("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Dp("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Dp("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new kg(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Sg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Dp(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Tg.className="InputLayer",ii(Tg);class Eg{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Eg)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Dp(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return $a(t,e.dtype)}catch(n){throw new Dp(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof kg){if(null==this.id2Value[e.id])throw new Dp(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Dp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof kg){if(null==this.id2Value[e.id])throw new Dp(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Dp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&ci(this.id2Mask)}}const Rg=new Mp,Ag=new Mp;function Fg(e,t,n,s){const r=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=Rg.get(c);if(null==d){const e=function(e,t){A(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=_g(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=_g(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in i)null==s[e]&&(s[e]=new Set),i[e].forEach((t=>s[e].add(t)))}}return{sorted:n,recipientCounts:Dg(s)}}(i,t);d=e.sorted,h=e.recipientCounts,Rg.put(c,d),Ag.put(c,h)}h={},r||Object.assign(h,Ag.get(c));const p=new Eg(t);for(let e=0;e<d.length;++e){if(null!=s){const e=li().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const a=d[e],i=a.sourceLayer;if(i instanceof Tg)continue;const u=[],c=[],f=[];let g=!1;for(const e of a.inputs){const n=p.getValue(e),s=p.getMask(e);u.push(n),c.push(s),null!=s&&(g=!0),r||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}g&&((n=n||{}).mask=c[0]);const m=Up(i.apply(u,n));let b=null;i.supportsMasking&&(b=i.computeMask(u,c));const x=Og(a),y=Array.isArray(x)?x:[x];for(let e=0;e<y.length;++e){p.hasKey(y[e])||p.add(y[e],m[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(y[e].name);-1!==t&&(l[t]=m[e])}r||ci(f)}return p.disposeMasks(),a?l:l[0]}function Dg(e){const t={};for(const n in e)t[n]=e[n].size;return t}function _g(e,t){const n=new Set,s=[],r={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:s,recipientMap:r}}function Og(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Lg(e,t){return ui((()=>bl(So(ko(e,e),t,!0))))}de().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Rg&&Rg.setMaxEntries(e),null!=Ag&&Ag.setMaxEntries(e)}));class Mg extends ri{getConfig(){return{}}}class zg extends Mg{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ui((()=>{const t=Lg(e,this.axis),n=Gi(t,0,this.maxValue);return ko(e,io(n,bi(Tf(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}zg.className="MaxNorm",ii(zg);class Bg extends Mg{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ui((()=>io(e,bi(Tf(),Lg(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Bg.className="UnitNorm",ii(Bg);class Pg extends Mg{apply(e){return rl(e)}}Pg.className="NonNeg",ii(Pg);class Wg extends Mg{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ui((()=>{const t=Lg(e,this.axis),n=bi(ko(this.rate,Gi(t,this.minValue,this.maxValue)),ko(1-this.rate,t));return ko(e,io(n,bi(Tf(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Wg.className="MinMaxNorm",ii(Wg);const Ug={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Vg(e){return jp(e)}function Gg(e,t={}){return Kp(e,ai.getMap().classNameMap,t,"constraint")}function Hg(e){return null==e?null:"string"==typeof e?Gg({className:e in Ug?Ug[e]:e,config:{}}):e instanceof Mg?e:Gg(e)}async function jg(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];ci(s)}}function qg(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Kg;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Kg||(Kg={}));class Xg{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Yg{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Zg extends Xg{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const s=t[e];if("number"==typeof s)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+s*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const r=ui((()=>bi(this.totals[e],ko(s,n))));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:ui((()=>{const n=ko(io(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),hi(t[e])})))}}class Jg extends Xg{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const s=await Promise.all(e);for(let e=0;e<s.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=s[e][0]}}class Qg extends Xg{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Uu,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Y(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let s,r=null!=n?n():Zs();return(...a)=>{const i=null!=n?n():Zs();return i-r<t||(r=i,s=e(...a)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await jg(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await jg(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await jg(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await jg(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await jg(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Y(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await jg(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await jg(e),await this.trainEnd(e))}}function em(e,t){return null==e&&(e={}),e instanceof Xg?[e]:Array.isArray(e)&&e[0]instanceof Xg?e:Up(e).map((e=>new Qg(e,t)))}class tm{constructor(){}static registerCallbackConstructor(e,t){A(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),tm.checkForDuplicate(t),null==tm.constructors[e]&&(tm.constructors[e]=[]),tm.constructors[e].push(t)}static checkForDuplicate(e){for(const t in tm.constructors)tm.constructors[+t].forEach((t=>{if(t===e)throw new Dp("Duplicate callback constructor.")}))}static clear(){tm.constructors={}}static createCallbacks(e){const t=[];for(const n in tm.constructors){const s=+n;e>=s&&t.push(...tm.constructors[s])}return t.map((e=>new e))}}function nm(e,t,n,s,r,a,i,o,l){const u=new Jg,c=[new Zg,...tm.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Yg(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function sm(e,t={},n=!1){return Kp(e,ai.getMap().classNameMap,t,"layer",n)}function rm(e,t){return ui((()=>{"float32"!==e.dtype&&(e=$a(e,"float32"));const n=So(Pf(e),t,!0),s=Vi(n.shape,Tf()),r=bl(Ro(n,s));return io(e,r)}))}function am(e,t){return ui((()=>Ao(Pf(Io(t,e)),-1)))}function im(e,t){return ui((()=>Ao(mi(Io(t,e)),-1)))}function om(e,t){return ui((()=>{const n=Io(e,t),s=Gi(mi(e),Tf(),Number.MAX_VALUE),r=mi(io(n,s));return ko(100,Ao(r,-1))}))}function lm(e,t,n=!1){return ui((()=>{if(n)t=fl(t);else{const e=So(t,t.shape.length-1,!0);t=io(t,e)}return t=Gi(t,Tf(),1-Tf()),Go(So(ko($a(e,"float32"),yo(t)),t.shape.length-1))}))}function um(e,t,n=!1){return ui((()=>{const s=$a(fo(function(e){const t=[If(e.shape)];return Oi(e,t)}(e)),"int32"),r=(t=Gi(t,Tf(),1-Tf())).shape;return lm(Oi(jo(s,r[r.length-1]),r),t,n)}))}function cm(e,t){return ui((()=>{let n;return n=Gi(t,Tf(),1-Tf()),n=yo(io(n,Io(1,n))),Ao(function(e,t){if(!L(e.shape,t.shape))throw new Dp(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return ui((()=>{const n=rl(t),s=Go(mi(t));return bi(Io(n,ko(t,e)),wo(uo(s)))}))}(e,n),-1)}))}function hm(e,t){return ui((()=>{const n=rm(e,-1),s=rm(t,-1),r=ko(n,s);return Go(So(r,-1))}))}tm.constructors={};const dm={meanSquaredError:am,meanAbsoluteError:im,meanAbsolutePercentageError:om,meanSquaredLogarithmicError:function(e,t){return ui((()=>{const n=Gi(t,Tf(),Number.MAX_VALUE),s=yo(bi(1,n)),r=Gi(e,Tf(),Number.MAX_VALUE),a=yo(bi(1,r));return Ao(Pf(Io(s,a)),-1)}))},squaredHinge:function(e,t){return ui((()=>{const n=Ro(0,Io(1,ko(e,t)));return Ao(Pf(n),-1)}))},hinge:function(e,t){return ui((()=>{const n=Ro(0,Io(1,ko(e,t)));return Ao(n,-1)}))},categoricalHinge:function(e,t){return ui((()=>{const n=So(ko(e,t),-1),s=vo(ko(Io(1,e),t),-1);return Ro(0,bi(1,Io(s,n)))}))},logcosh:function(e,t){return ui((()=>{const n=Math.log(2),s=Io(t,e),r=Io(bi(s,gl(ko(-2,s))),n);return Ao(r,-1)}))},categoricalCrossentropy:lm,sparseCategoricalCrossentropy:um,binaryCrossentropy:cm,kullbackLeiblerDivergence:function(e,t){return ui((()=>{const n=Gi(e,Tf(),1),s=Gi(t,Tf(),1);return So(ko(e,yo(io(n,s))),-1)}))},poisson:function(e,t){return ui((()=>{const n=yo(bi(Tf(),t));return Ao(Io(t,ko(e,n)),-1)}))},cosineProximity:hm};function pm(e){if("string"==typeof e){if(e in dm)return dm[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Dp(t)}return e}function fm(e,t){return ui((()=>{const n=ko(.5,Xo(t)),s=Ef(mo(t,n),e.dtype);return Ao(lo(e,s),-1)}))}function gm(e,t){return ui((()=>Ef(lo(wi(e,-1),wi(t,-1)),"float32")))}function mm(e,t){return cm(e,t)}function bm(e,t){return e.rank===t.rank&&(e=xl(e,[e.rank-1])),(t=wi(t,-1)).dtype!==e.dtype&&(t=$a(t,e.dtype)),$a(lo(e,t),"float32")}const xm=lm,ym=um,wm={binaryAccuracy:fm,categoricalAccuracy:gm,precision:function(e,t){return ui((()=>{const n=function(e,t){return ui((()=>$a(So($o(lo(e,1),lo(t,1))),"float32")))}(e,t),s=function(e,t){return ui((()=>$a(So($o(lo(e,0),lo(t,1))),"float32")))}(e,t),r=bi(n,s);return $a(Sl(mo(r,0),io(n,r),0),"float32")}))},categoricalCrossentropy:xm,sparseCategoricalCrossentropy:ym,mse:am,MSE:am,mae:im,MAE:im,mape:om,MAPE:om,cosine:hm};function vm(e){if("string"==typeof e&&e in wm)return wm[e];if("string"!=typeof e&&null!=e)return e;throw new Dp(`Unknown metric ${e}`)}function km(e){if(Bp(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(dm))if(dm[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(wm))if(wm[n]===e){t=n;break}return void 0!==t?t:e.name}}function Im(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Sm(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Sm(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Sm(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Sm(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Nm(e,t,n=console.log){let s="";for(let n=0;n<e.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=e[n],s=s.slice(0,t[n]),s+=" ".repeat(t[n]-s.length);n(s)}function $m(e,t,n){let s,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}Nm([`${e.name} (${e.getClassName()})`,r,s,e.countParams().toString()],t,n)}function Cm(e,t,n,s){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,s=t.nodeIndices[e],r=t.tensorIndices[e];i.push(`${n}[${s}][${r}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];Nm([`${o} (${l})`,a,r,e.countParams().toString(),u],t,s);for(let e=1;e<i.length;++e)Nm(["","","","",i[e]],t,s)}function Tm(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Em(e,t){if(null===e)return null;if("string"==typeof e)return Gp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];Tm(t,r,s)?n.push(s):n.push(Em(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=Gp(n);t[e]=Em(s,e)}}return t}}function Rm(e,t){if(null==e)return null;if("string"==typeof e)return Vp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];Tm(t,r,s)?n.push(s):n.push(Rm(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];t[Vp(n)]="name"!==n&&"className"!==n||"string"!=typeof s?Rm(s,n):s}return t}}class Am extends $g{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=of(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Yp(this.inputs).length!==this.inputs.length)throw new Dp(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Yp(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;Bp(0===n,"input layer has >1 nodes"),Bp(0===s,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Tg))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},a={},i=[],o=(e,t,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new Fp(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Am.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const s=u.inputTensors[e],r=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(s,t,n,r,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==s[e.outboundLayer.id]?0:s[e.outboundLayer.id];a=Math.max(a,i),s[e.outboundLayer.id]=a,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],i=e.nodeIndices[s],o=r.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const s=t[e];s in h||(h[s]=[]),h[s].push(n[e])}const d={};for(const e in s){const t=s[e];t in d||(d[t]=[]),d[t].push(r[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Xp);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],s=a[t.id];return n<s?-1:n>s?1:0}));for(const e of t)e instanceof Am&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Xp);const f=this.inputs.slice(),g=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Fp(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${g}`);for(const e of t.outputTensors)f.push(e);g.push(e.name)}}this.nodesByDepth=h;const m=this.layers.map((e=>e.name));for(const e of m){const t=m.filter((t=>t===e)).length;if(1!==t)throw new Fp(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new Sg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Dp("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Dp(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,s++}const r=[];for(const s in e){let a=s;if(null==n[s]){const e=s.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])r.push([n[a],e[s]]);else if(t)throw new Dp(`Provided weight data has no target variable: ${s}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Dp(`${e.length} of ${s} weights are not set: ${e}`)}wg(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 4.1.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Rm(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return ui((()=>{e=Up(e);const n=new Eg;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Fg(this.outputs,n,t)}))}computeMask(e,t){return ui((()=>{let n;return e=Up(e),n=null==t?zp(null,e.length):Up(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=fg(e);if(t.length!==this.inputLayers.length)throw new Dp(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const s=this.inputLayers[e],r=t[e];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Xp);if(s.length>1)for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const s=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=fg(t.computeOutputShape(Wp(s))),a=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++)n[`${t.name}_${a}_${e}`]=r[e]}}const r=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],s=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${s}`;a.push(r)}for(let e=0;e<a.length;e++){const t=a[e];Bp(t in n),r.push(n[t])}return Wp(r)}runInternalGraph(e,t){null==t&&(t=zp(null,e.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=e[s],i=t[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Xp);for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,s=e.inputTensors,r=e.outputTensors,a=new Array;for(const e of s)e.id in n&&a.push(n[e.id]);if(a.length===s.length){let s,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=Up(t.call(e,u)),l=Up(t.computeMask(e,n)),s=[e],i=[n]}else s=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=Up(t.call(s,u)),l=Up(t.computeMask(s,i));if(t.activityRegularizer)throw new _p("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],a=l[e];n[t.id]=[s,a]}}}}const r=[],a=[],i=[];for(const e of this.outputs){Bp(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,s]=n[e.id];i.push(t.shape),r.push(t),a.push(s)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Am?1:0;for(let s=0;s<e.inboundNodes.length;s++){const r=Am.nodeKey(e,s);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Dp(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Dp("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Dp(`No such layer: ${e}`)}calculateLosses(){return ui((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=Am.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const s=e.getClassName(),r=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const s=e.inboundNodes[n],r=Am.nodeKey(e,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(s.inboundLayers.length>0){const e=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let l=t[Am.nodeKey(r,a)];null==l&&(l=0),e.push([r.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const s=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],a=Am.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];s.push([n.name,i,o])}e.inputLayers=s;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],s=this.outputLayersNodeIndices[e],a=Am.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){const r={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let s;for(const a of t){const o=a[0],l=a[1],u=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(Wp(n),s)}function l(e){const n=e.name,a=sm(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Dp(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!Zp(a);)for(const e of c){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],s=e[2];Bp(t in r);const a=r[t].inboundNodes[n].outputTensors;h.push(a[s])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],s=e[2];Bp(t in r);const a=r[t].inboundNodes[n].outputTensors;d.push(a[s])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Dp("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ui((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Fm(e,t){return function(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Dm(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=ui((()=>{if(1===e.shape.length)return Ca(e);if(2===e.shape.length){if(e.shape[1]>1)return wi(e,1);if(1===e.shape[1])return Oi(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());ci(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),vl(r,"float32")}return null}function _m(e,t){return ko(e,t)}function Om(e,t){let n,s;const r=t;n=r.xs,s=r.ys,A(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=Lm("input",e.inputNames,n),i=Lm("output",e.outputNames,s),o=a[0].shape[0];A(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),A(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)A(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)A(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function Lm(e,t,n){if(n instanceof dr)return[n];if(Array.isArray(n))return A(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new Dp(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function Mm(e){return"function"==typeof e.iterator}function zm(e){A(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Bm(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Af(e,t,n-t))):Af(e,t,n-t)}function Pm(e,t){return ui((()=>null==e?null:Array.isArray(e)?e.map((e=>Pm(e,t))):Bf(e,"int32"===t.dtype?t:$a(t,"int32"))))}function Wm(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function Um(e){const t=[];e instanceof dr&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(Rf(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Vm(e,t){if(null==e)return;const n=[];if(t instanceof dr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const s=t[e];n.push(s.id)}const s=[];if(e instanceof dr)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function Gm(e){return Array.isArray(e)}function Hm(e){return!function(e){return e instanceof dr}(e)&&!Gm(e)}function jm(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Gm(e)&&e.length>0)t=!0;else if(Hm(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Dp(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(Hm(e)){a=[];for(const n of t){if(null==e[n])throw new Dp(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(Gm(e)){if(e.length!==t.length)throw new Dp(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new Dp(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Um(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Dp(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!s)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new Dp(`${r} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function qm(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Dp(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Dp(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Dp(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new Dp(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Km extends Am{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Dp("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,s=console.log){const r=function(e){let t=!0;const n=[],s=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}s.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),Nm(a,n,s),s("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?$m(o[e],n,s):Cm(o[e],n,i,s),s((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?bg(e.collectedTrainableWeights):bg(e.trainableWeights),t}(e),u=bg(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Pu.adagrad(.01),Adadelta:()=>Pu.adadelta(1,.95,Tf()),Adam:()=>Pu.adam(.001,.9,.999,Tf()),Adamax:()=>Pu.adamax(.002,.9,.999,Tf(),0),RMSProp:()=>Pu.rmsprop(.001,.9,0,Tf()),SGD:()=>Pu.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Dp(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof gi))throw new Dp("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Dp(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>pm(e)))}else{const n=pm(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Dp(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(pm(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],xf("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};xf("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,s,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===cm?-1!==["accuracy","acc"].indexOf(i)?s=fm:-1!==["crossentropy","ce"].indexOf(i)&&(s=mm):this.lossFunctions[e]===um?-1!==["accuracy","acc"].indexOf(i)?s=bm:-1!==["crossentropy","ce"].indexOf(i)&&(s=ym):-1!==["accuracy","acc"].indexOf(i)?s=gm:-1!==["crossentropy","ce"].indexOf(i)&&(s=xm),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),a=s,n=""+r}else{const e=vm(i);a=e,n=""+km(i)}let t;xf(n,(()=>{t=a})),r(e,n,t)}})(s[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;zm(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const a=r[0].concat(r[1]);this.makeTestFunction();const i=this.testFunction;return Wp(this.testLoop(i,a,s,n.verbose,n.steps))}finally{Vm(r[0],e),Vm(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,r=e.testFunction;let a=[];if(n.verbose>0)throw new _p("Verbose mode is not implemented yet.");A(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!s||l<n.batches;){const t=await i.next();if(a=ui((()=>{if(t.value){const{xs:n,ys:s}=Om(e,t.value),i=n.concat(s),u=ui((()=>r(i)));if(ci(i),0===l)for(let e=0;e<u.length;++e)a.push(fi(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=ui((()=>bi(a[e],ko(c,t)))),l>0&&ci(n)}ci(u),o+=c,++l}return a})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=io(a[e],o),ci(t)}return Wp(a)}(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new Dp(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Dp(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Dp("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new Eg;if(e instanceof dr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Dp(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Dp(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=Fg(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=zp(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((e=>e.name));for(let s=0;s<e.length;++s){const i=a.indexOf(e[s]);if(-1!==i&&(t[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new Dp(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return ui((()=>{const s=this.checkNumSamples(e);if(n)throw new _p("Verbose predictLoop() is not implemented yet.");const r=Wm(s,t),a=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t)ui((()=>{const n=r[t][0],s=r[t][1],a=Bm(e,n,s),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Eg(i);return Fg(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return Wp(a.map((e=>Hi(e,0))))}))}predict(e,t={}){const n=Um(e);qm(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==t.batchSize?32:t.batchSize;return zm(s),this.predictLoop(n,s)}finally{Vm(n,e)}}predictOnBatch(e){qm(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new Fp("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===um?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t,n){const s=Yp(e.map((e=>e.shape[0])));s.sort();const r=Yp(t.map((e=>e.shape[0])));if(r.sort(),s.length>1)throw new Dp(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new Dp(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(s.length>0&&r.length>0&&!L(s,r))throw new Dp(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=jm(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=jm(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const s=[am,cm,lm];for(let r=0;r<e.length;++r){const a=e[r],i=t[r],o=n[r];if(null!=i){if(i===lm&&1===a.shape[a.shape.length-1])throw new Dp(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new Dp(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new Dp(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const e=Fm(s,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Dm(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,s=0,r){return ui((()=>{const a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new _p("Verbose mode is not implemented yet.");if(null!=r)throw new _p("steps mode in testLoop() is not implemented yet");{const s=Wm(a,n),r=vl($f(0,a));for(let n=0;n<s.length;++n){const a=s[n][0],o=s[n][1],l=Af(r,a,o-a),u=Pm(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(fi(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=bi(i[e],ko(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=io(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;Pp(e,s)>1&&(r+=`_${Pp(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Eg(e),o=Fg(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(s[e],o[e]);null!=r[e]&&(n=_m(n,r[e]));const a=Ao(n);t.push(a),l=0===e?n:bi(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=Ao(t(s[r],o[r]))}hi(n),a.push(n)}return l=Ao(l),this.calculateLosses().forEach((e=>{l=bi(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>ui((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:s[e]});const i=new Eg(a),o=Fg(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],a=Ao(s(r[e],o[e]));n=0===e?a:bi(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],a=Ao(n(r[s],o[s]));t.push(a)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,r,a,i,o,l,u,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;zm(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);s=f[0],r=f[1],h=f[2];let g,m=!1;if(null!=n.validationData&&n.validationData.length>0){if(m=!0,2!==n.validationData.length)throw 3===n.validationData.length?new _p("validationData including sample weights is not supported yet."):new Dp(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,d);u=t[0],c=t[1],g=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){m=!0;const e=Math.floor(s[0].shape[0]*(1-n.validationSplit)),t=s[0].shape[0];u=Bm(s,e,t),a=s,s=Bm(s,0,e),c=Bm(r,e,t),i=r,r=Bm(r,0,e),g=u.concat(c)}else null!=n.validationSteps&&(m=!0);const b=s.concat(r).concat(h);this.checkTrainableWeightsConsistency();const x=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let w,v;m?(this.makeTestFunction(),w=this.testFunction,v=y.slice().concat(y.map((e=>"val_"+e)))):(w=null,g=[],v=y.slice());const k=em(n.callbacks,n.yieldEvery);return await this.fitLoop(x,b,y,d,n.epochs,n.verbose,k,w,g,n.shuffle,v,n.initialEpoch,null,null)}finally{this.isTraining=!1,Vm(s,e),Vm(r,t),Vm(a,e),Vm(i,t),Vm(u,o),Vm(c,l),null!=h&&ci(h)}}async fitLoop(e,t,n,s,r,a,i,o,l,u,c,h,d,p){null==s&&(s=32),null==r&&(r=1),null==u&&(u=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=p&&(f=!0,null==d))throw new Dp("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,s,d,"steps_per_epoch");let m;null!=g&&(m=$f(0,g)),null==a&&(a=1);const{callbackList:b,history:x}=nm(i,a,r,h,g,d,s,f,c);b.setModel(this),this.history=x,await b.onTrainBegin(),this.stopTraining_=!1;for(let a=h;a<r;++a){await b.onEpochBegin(a);const r={};if(null!=d)throw new _p("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new _p("batch shuffling is not implemneted yet");u&&C(m);const a=vl(m),i=Wm(g,s);for(let u=0;u<i.length;++u){const c={};if(await b.onBatchBegin(u,c),ui((()=>{const h=i[u][0],d=i[u][1],p=Af(a,h,d-h);c.batch=u,c.size=d-h;const g=Pm(t,p),m=e(g);for(let e=0;e<n.length;++e){const t=n[e],s=m[e];c[t]=s,hi(s)}if(u===i.length-1&&f){const e=this.testLoop(o,l,s);for(let t=0;t<n.length;++t){const s=n[t],a=e[t];hi(a),r["val_"+s]=a}}})),await b.onBatchEnd(u,c),qg(c),this.stopTraining_)break}a.dispose()}if(await b.onEpochEnd(a,r),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const s=null!=n.batchesPerEpoch;if(A(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),A(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),A(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),A(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),A(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let a,i;if(r)if(Mm(n.validationData))A(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new _p("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=em(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=nm(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,r,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(s||(g=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await g.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:r}=Om(e,t.value),a={};a.batch=h,a.size=s[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Fm(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Dm(r[e],null,t[e]))}const u=s.concat(r).concat(i),p=o(u);ci(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,hi(n)}await d.onBatchEnd(h,a),qg(a),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(r){let t;t=Mm(n.validationData)?Up(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Up(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],a=this.makeTrainFunction()(s.concat(r)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return ci(a),Vm(n[0],e),Vm(n[1],t),Wp(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<s.length;++e)n&&!s[e].trainable||t.push({name:s[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=li().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-li().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Vp(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Vp(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=Vp(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Vp(km(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Vp(km(e))));{const e={};for(const t in this.metrics)e[t]=Vp(km(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=sm(Em(e.optimizer_config));let n,s;if("string"==typeof e.loss)n=Gp(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Gp(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Gp(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>Gp(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=Gp(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,ea.getSaveHandlers(n));if(0===t.length)throw new Dp(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Dp(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new Dp("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await jr(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v4.1.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await jr(await this.optimizer.getWeights(),e);s.specs.push(...n),s.data=Yr([s.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Im(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=s.data,r.weightSpecs=s.specs,e.save(r)}setUserDefinedMetadata(e){Im(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Km.className="Model",ii(Km);class Xm extends Km{}async function Ym(e,t){if(null==t&&(t={}),"string"==typeof e){const r=(n=e,s=t,ea.getLoadHandlers(n,s));if(0===r.length)r.push(function(e,t){return Oa(e,t)}(e,t));else if(r.length>1)throw new Dp(`Found more than one (${r.length}) load handlers for URL '${e}'`);e=r[0]}var n,s;return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new Dp("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const a=null==n.strict||n.strict,i=null!=s.weightData&&null!=s.weightSpecs&&a,o=sm(Em(r),void 0,i),l=s.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=s.userDefinedMetadata&&o.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new Dp("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=function(e,t){const n={};let s,r=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,l=O(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Hr[n.dtype],c=e.slice(r,r+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=Qr()),u=s(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}r+=l*o}else if("string"===i){const t=O(a.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(r,r+4))[0];r+=4;const n=new Uint8Array(e.slice(r,r+t));u.push(n),r+=t}}else{const s=Hr[i],a=e.slice(r,r+l*s);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(a);const e=new Float32Array(u.length/2),s=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],s[t]=u[2*t+1];const r=Gr(e,o,"float32"),i=Gr(s,o,"float32");n[t]=Ur(r,i),r.dispose(),i.dispose()}}r+=l*s}"complex64"!==i&&(n[t]=Gr(u,o,i))}return n}(e,t),s={},r=[];return t.forEach((e=>{"optimizer"===e.group?r.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:r}}(s.weightData,s.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),ci(e),ci(t.map((e=>e.tensor)))}return o}(e,0,t)}Xm.className="Functional",ii(Xm);class Zm extends Km{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:of("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Dp(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Zm||e instanceof Km;let n;if(t){if(n=e,1!==n.outputs.length)throw new Dp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Dp("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Dp("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Dp("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Tg({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Dp(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Dp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Cg(this.outputs[0])}this.inboundNodes=[],new Sg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:zp(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(mg(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Km({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Fp("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Fp("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Fp("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Fp("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Dp("Legacy serialization format not supported yet.");r=t}else A(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Zm))throw new _p(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of r){const t=sm(e,void 0,s);s&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Dp("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Dp("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Zm.className="Sequential",ii(Zm);class Jm extends ri{getConfig(){return{}}}class Qm extends Jm{apply(e,t=1){return function(e,t=1){if(1!==t)throw new _p(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return oo(e)}(e,t)}}Qm.className="elu",ii(Qm);class eb extends Jm{apply(e){return il(e)}}eb.className="selu",ii(eb);class tb extends Jm{apply(e){return rl(e)}}tb.className="relu",ii(tb);class nb extends Jm{apply(e){return ui((()=>Do(6,rl(e))))}}nb.className="relu6",ii(nb);class sb extends Jm{apply(e){return e}}sb.className="linear",ii(sb);class rb extends Jm{apply(e){return ll(e)}}rb.className="sigmoid",ii(rb);class ab extends Jm{apply(e){return function(e){return ui((()=>{const t=bi(.5,ko(.2,e));return Gi(t,0,1)}))}(e)}}ab.className="hardSigmoid",ii(ab);class ib extends Jm{apply(e){return gl(e)}}ib.className="softplus",ii(ib);class ob extends Jm{apply(e){return function(e){return ui((()=>io(e,bi(mi(e),1))))}(e)}}ob.className="softsign",ii(ob);class lb extends Jm{apply(e){return wl(e)}}lb.className="tanh",ii(lb);class ub extends Jm{apply(e,t=-1){return fl(e,t)}}ub.className="softmax",ii(ub);class cb extends Jm{apply(e,t=-1){return No(e,t)}}cb.className="logSoftmax",ii(cb);class hb extends Jm{apply(e,t=1){return ui((()=>ko(ll(ko(e,t)),e)))}}hb.className="swish",ii(hb);class db extends Jm{apply(e){return ui((()=>ko(e,wl(gl(e)))))}}function pb(e){return e.getClassName()}function fb(e,t={}){return Kp(e,ai.getMap().classNameMap,t,"activation")}function gb(e){if(null==e){return fb({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},fb(t)}return e instanceof Jm?e:fb(e)}db.className="mish",ii(db);class mb extends ri{}class bb extends mb{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return ui((()=>{let t=qo([1]);return this.hasL1&&(t=bi(t,So(ko(this.l1,mi(e))))),this.hasL2&&(t=bi(t,So(ko(this.l2,Pf(e))))),Oi(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}bb.className="L1L2",ii(bb);const xb={l1l2:"L1L2"};function yb(e){return jp(e)}function wb(e,t={}){return Kp(e,ai.getMap().classNameMap,t,"regularizer")}function vb(e){return null==e?null:"string"==typeof e?wb({className:e in xb?xb[e]:e,config:{}}):e instanceof mb?e:wb(e)}class kb extends $g{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=gg(e);let n=rl(e);return null!=this.maxValue&&(n=Gi(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}kb.className="ReLU",ii(kb);class Ib extends $g{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=gg(e);return xo(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Ib.className="LeakyReLU",ii(Ib);class Sb extends $g{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=dg(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=vb(e.alphaRegularizer),this.alphaConstraint=Hg(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Dp(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=mg(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new vg({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=gg(e),Zo(e,this.alpha.read())}getConfig(){const e={alphaInitializer:hg(this.alphaInitializer),alphaRegularizer:yb(this.alphaRegularizer),alphaConstraint:Vg(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Sb.className="PReLU",ii(Sb);class Nb extends $g{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new _p(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=gg(e);return oo(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Nb.className="ELU",ii(Nb);class $b extends $g{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=gg(e);return ko(n,$a(mo(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}$b.className="ThresholdedReLU",ii($b);class Cb extends $g{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new ub).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=gg(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Tb(e,t,n){if("number"==typeof e)return zp(e,t);if(e.length!==t)throw new Dp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if((s=a)!==parseInt(s.toString(),10))throw new Dp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var s}function Eb(e,t,n,s,r=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((a+s-1)/s)}function Rb(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+Nf([n-t,0]);else{if("same"!==s)throw new Dp(`Unsupport padding mode: ${s}.`);e*=t}return e}function Ab(e,t){return ui((()=>(ff(t),"channelsFirst"===t?Tl(e,[0,2,3,1]):e)))}function Fb(e,t){return ui((()=>(ff(t),"channelsFirst"===t?Tl(e,[0,2,3,4,1]):e)))}function Db(e,t,n,s=[1,1],r="valid",a,i,o=null){return ui((()=>{if(null==a&&(a="channelsLast"),ff(a),3!==e.rank&&4!==e.rank)throw new Dp(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Dp(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Ab(e,a);if("causal"===r)throw new _p("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Wl({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=Tl(l,[0,3,1,2])),l}))}Cb.className="Softmax",ii(Cb);class _b extends $g{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",_b.verifyArgs(t),this.rank=e,ef(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new _p(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Tb(t.kernelSize,e,"kernelSize"),this.strides=Tb(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,gf(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ff(this.dataFormat),this.activation=gb(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=dg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Hg(t.biasConstraint),this.biasRegularizer=vb(t.biasRegularizer),this.activityRegularizer=vb(t.activityRegularizer),this.dilationRate=Tb(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Dp(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Dp(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Dp(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Bp("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Qp(e.kernelSize,"number",1,3))throw new Dp(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:pb(this.activation),useBias:this.useBias,biasInitializer:hg(this.biasInitializer),biasRegularizer:yb(this.biasRegularizer),activityRegularizer:yb(this.activityRegularizer),biasConstraint:Vg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Ob extends _b{constructor(e,t){super(e,t),this.kernel=null,Ob.verifyArgs(t),this.filters=t.filters,ef(this.filters,"filters"),this.kernelInitializer=dg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Hg(t.kernelConstraint),this.kernelRegularizer=vb(t.kernelRegularizer)}build(e){e=mg(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Dp(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return ui((()=>{let t;e=gg(e);const n=null==this.bias?null:this.bias.read(),s=nf(this.activation.getClassName());if(null!=s&&2===this.rank)t=Db(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=function(e,t,n,s=1,r="valid",a,i=1){return ui((()=>{if(null==a&&(a="channelsLast"),ff(a),3!==e.shape.length)throw new Dp(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Dp(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Dp(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=Tl(e,[0,2,1])),"causal"===r)throw new _p("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Zi(e,t,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=Uf(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Db(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new _p("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,s=[1,1,1],r="valid",a,i){return ui((()=>{if(null==a&&(a="channelsLast"),ff(a),4!==e.rank&&5!==e.rank)throw new Dp(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Dp(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Fb(e,a);if("causal"===r)throw new _p("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=eo(o,t,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=Uf(o,n)),"channelsFirst"===a&&(o=Tl(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=mg(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const s=Eb(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(s)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:hg(this.kernelInitializer),kernelRegularizer:yb(this.kernelRegularizer),kernelConstraint:Vg(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Dp(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Lb extends Ob{constructor(e){super(2,e),Lb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Qp(e.kernelSize,"number",1,2))throw new Dp(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Lb.className="Conv2D",ii(Lb);class Mb extends Ob{constructor(e){super(3,e),Mb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Dp(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Mb.className="Conv3D",ii(Mb);class zb extends Lb{constructor(e){if(super(e),this.inputSpec=[new vg({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Dp(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=mg(e)).length)throw new Dp("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Dp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new vg({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return ui((()=>{let t=gg(e);if(4!==t.shape.length)throw new Dp(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const i=n[r],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[s,Rb(i,c,l,this.padding),Rb(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Tl(t,[0,2,3,1]));let p=Qi(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Tl(p,[0,3,1,2])),null!=this.bias&&(p=Uf(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=mg(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=Rb(t[s],o,a,this.padding),t[r]=Rb(t[r],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}zb.className="Conv2DTranspose",ii(zb);class Bb extends Mb{constructor(e){if(super(e),this.inputSpec=[new vg({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Dp(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=mg(e)).length)throw new Dp("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Dp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new vg({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return ui((()=>{let t=gg(e);if(5!==t.shape.length)throw new Dp(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a,i;"channelsFirst"===this.dataFormat?(i=2,r=3,a=4):(i=1,r=2,a=3);const o=n[i],l=n[r],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],g=this.strides[2],m=[s,Rb(o,p,c,this.padding),Rb(l,f,h,this.padding),Rb(u,g,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Tl(t,[0,2,3,4,1]));let b=no(t,this.kernel.read(),m,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=Tl(b,[0,4,1,2,3])),null!==this.bias&&(b=Uf(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=mg(e)).slice();let n,s,r,a;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=Rb(t[s],u,i,this.padding),t[r]=Rb(t[r],c,o,this.padding),t[a]=Rb(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Bb.className="Conv3DTranspose",ii(Bb);class Pb extends Ob{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Dp("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Dp("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Dp(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=dg(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=vb(t.depthwiseRegularizer),this.depthwiseConstraint=Hg(t.depthwiseConstraint),this.pointwiseInitializer=dg(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=vb(t.pointwiseRegularizer),this.pointwiseConstraint=Hg(t.pointwiseConstraint)}build(e){if((e=mg(e)).length<this.rank+2)throw new Dp(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Dp(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new vg({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return ui((()=>{let t;if(e=gg(e),1===this.rank)throw new _p("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Tl(e,[0,2,3,1])),t=ol(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Uf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Tl(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=hg(this.depthwiseInitializer),e.pointwiseInitializer=hg(this.pointwiseInitializer),e.depthwiseRegularizer=yb(this.depthwiseRegularizer),e.pointwiseRegularizer=yb(this.pointwiseRegularizer),e.depthwiseConstraint=Vg(this.depthwiseConstraint),e.pointwiseConstraint=Vg(this.pointwiseConstraint),e}}Pb.className="SeparableConv";class Wb extends Pb{constructor(e){super(2,e)}}Wb.className="SeparableConv2D",ii(Wb);class Ub extends Ob{constructor(e){super(1,e),Ub.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Qp(e.kernelSize,"number",1,1))throw new Dp(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Ub.className="Conv1D",ii(Ub);class Vb extends $g{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ui((()=>{if(e=gg(e),"channelsLast"===this.dataFormat){const t=Df(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Df(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Df(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Df(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Vb.className="Cropping2D",ii(Vb);class Gb extends $g{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ff(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Jp(uf,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return ui((()=>{let t=gg(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Tl(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?Ru.resizeNearestNeighbor(t,[e,s]):Ru.resizeBilinear(t,[e,s]);return Tl(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?Ru.resizeNearestNeighbor(t,[e,s]):Ru.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Gb.className="UpSampling2D",ii(Gb);class Hb extends _b{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=dg(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Hg(e.depthwiseConstraint),this.depthwiseRegularizer=vb(e.depthwiseRegularizer)}build(e){if((e=mg(e)).length<4)throw new Dp(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Dp(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ui((()=>{let t=function(e,t,n=[1,1],s="valid",r,a){return ui((()=>{null==r&&(r="channelsLast"),ff(r);let i=Ab(e,r);if(4!==e.rank)throw new Dp(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Dp(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=ro(i,t,n,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(i=Tl(i,[0,3,1,2])),i}))}(e=gg(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Uf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=mg(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Eb(t,this.kernelSize[0],this.padding,this.strides[0]),a=Eb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=hg(this.depthwiseInitializer),e.depthwiseRegularizer=yb(this.depthwiseRegularizer),e.depthwiseConstraint=Vg(this.depthwiseRegularizer),e}}function jb(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new Dp("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function qb(e,t,n,s=!1,r,a,i=!1,o=!1){return ui((()=>{const l=t.shape.length;if(l<3)throw new Dp(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat($f(2,l));if(t=Tl(t,u),null!=a)throw new _p("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=$a($a(r,"bool"),"float32")).rank===l-1&&(r=co(r,-1)),r=Tl(r,u)),s&&(t=al(t,0),null!=r&&(r=al(r,0)));const c=[];let h,d=n;const p=t.shape[0],f=Il(t);let g,m;null!=r&&(g=Il(r));for(let t=0;t<p;++t){const n=f[t],s=ui((()=>e(n,d)));if(null==r)h=s[0],d=s[1];else{const e=ui((()=>{const e=g[t],n=Io(Xo(e),e);return{output:bi(ko(s[0],e),ko(d[0],n)),newStates:d.map(((t,r)=>bi(ko(s[1][r],e),ko(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(m=yl(c,1)),[h,m,d]}))}Hb.className="DepthwiseConv2D",ii(Hb);class Kb extends $g{constructor(e){let t;if(super(e),null==e.cell)throw new Dp("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new nx({cells:e.cell}):e.cell,null==t.stateSize)throw new Dp("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new vg({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?$f(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){pg(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return ui((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new _p("Constants support is not implemented in RNN yet.");pg(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new vg({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!L(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Dp(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new vg({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){ui((()=>{if(!this.stateful)throw new Ap("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Dp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>qo([n,e]))):this.states_=[qo([n,this.cell.stateSize])];else if(null==e)ci(this.states_),null!=this.keptStates&&(ci(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>qo([n,e]))):this.states_[0]=qo([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Dp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):ci(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,r];if(!L(s.shape,a))throw new Dp(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>hi(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=jb(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new vg({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof kg){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return ui((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=gg(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new Dp(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=qb(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return ui((()=>{let t=qo(e.shape);return t=So(t,[1,2]),t=Rf(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Lf(t,[1,e]):t)):this.cell.stateSize>1?[Lf(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Kb.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const s=sm(t.cell,n);return new e(Object.assign(t,{cell:s}))}}Kb.className="RNN",ii(Kb);class Xb extends $g{}class Yb extends Xb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ef(this.units,"units"),this.activation=gb(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=dg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=dg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=dg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vb(e.kernelRegularizer),this.recurrentRegularizer=vb(e.recurrentRegularizer),this.biasRegularizer=vb(e.biasRegularizer),this.kernelConstraint=Hg(e.kernelConstraint),this.recurrentConstraint=Hg(e.recurrentConstraint),this.biasConstraint=Hg(e.biasConstraint),this.dropout=Sf([1,Nf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Sf([1,Nf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=mg(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ui((()=>{if(2!==e.length)throw new Dp(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=sx({ones:()=>Xo(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=sx({ones:()=>Xo(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;r=zf(null!=a?ko(e,a):e,this.kernel.read()),null!=this.bias&&(r=Uf(r,this.bias.read())),null!=i&&(n=ko(n,i));let o=bi(r,zf(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:pb(this.activation),useBias:this.useBias,kernelInitializer:hg(this.kernelInitializer),recurrentInitializer:hg(this.recurrentInitializer),biasInitializer:hg(this.biasInitializer),kernelRegularizer:yb(this.kernelRegularizer),recurrentRegularizer:yb(this.recurrentRegularizer),biasRegularizer:yb(this.biasRegularizer),activityRegularizer:yb(this.activityRegularizer),kernelConstraint:Vg(this.kernelConstraint),recurrentConstraint:Vg(this.recurrentConstraint),biasConstraint:Vg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Yb.className="SimpleRNNCell",ii(Yb);class Zb extends Kb{constructor(e){e.cell=new Yb(e),super(e)}call(e,t){return ui((()=>{null!=this.cell.dropoutMask&&(ci(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ci(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Zb.className="SimpleRNN",ii(Zb);class Jb extends Xb{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Dp("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ef(this.units,"units"),this.activation=gb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=gb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=dg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=dg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=dg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vb(e.kernelRegularizer),this.recurrentRegularizer=vb(e.recurrentRegularizer),this.biasRegularizer=vb(e.biasRegularizer),this.kernelConstraint=Hg(e.kernelConstraint),this.recurrentConstraint=Hg(e.recurrentConstraint),this.biasConstraint=Hg(e.biasConstraint),this.dropout=Sf([1,Nf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Sf([1,Nf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=mg(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ui((()=>{if(2!==e.length)throw new Dp(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=sx({ones:()=>Xo(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=sx({ones:()=>Xo(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=ko(e,r[0]));let u=zf(e,this.kernel.read());this.useBias&&(u=Uf(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=ko(s,a[0]));const c=this.recurrentKernel.read(),[h,d]=ml(c,[2*this.units,this.units],c.rank-1),p=zf(s,h),[f,g,m]=ml(u,3,u.rank-1),[b,x]=ml(p,2,p.rank-1);i=this.recurrentActivation.apply(bi(f,b)),o=this.recurrentActivation.apply(bi(g,x));const y=zf(ko(o,s),d);l=this.activation.apply(bi(m,y));const w=bi(ko(i,s),ko(bi(1,Go(i)),l));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:pb(this.activation),recurrentActivation:pb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:hg(this.kernelInitializer),recurrentInitializer:hg(this.recurrentInitializer),biasInitializer:hg(this.biasInitializer),kernelRegularizer:yb(this.kernelRegularizer),recurrentRegularizer:yb(this.recurrentRegularizer),biasRegularizer:yb(this.biasRegularizer),activityRegularizer:yb(this.activityRegularizer),kernelConstraint:Vg(this.kernelConstraint),recurrentConstraint:Vg(this.recurrentConstraint),biasConstraint:Vg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Jb.className="GRUCell",ii(Jb);class Qb extends Kb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Jb(e),super(e)}call(e,t){return ui((()=>{null!=this.cell.dropoutMask&&(ci(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ci(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Qb.className="GRU",ii(Qb);class ex extends Xb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ef(this.units,"units"),this.activation=gb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=gb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=dg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=dg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=dg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=vb(e.kernelRegularizer),this.recurrentRegularizer=vb(e.recurrentRegularizer),this.biasRegularizer=vb(e.biasRegularizer),this.kernelConstraint=Hg(e.kernelConstraint),this.recurrentConstraint=Hg(e.recurrentConstraint),this.biasConstraint=Hg(e.biasConstraint),this.dropout=Sf([1,Nf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Sf([1,Nf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=mg(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends qf{apply(t,s){const r=e.apply([n]),a=(new Xf).apply([n]),i=e.apply([2*n]);return Of(Of(r,a),i)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ui((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Dp(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=sx({ones:()=>Xo(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=sx({ones:()=>Xo(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=ko(e,a[0]));let h=zf(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=ko(s,i[0])),h=bi(h,zf(s,this.recurrentKernel.read())),this.useBias&&(h=Uf(h,this.bias.read()));const[d,p,f,g]=ml(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=bi(ko(l,r),ko(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=ko(c,this.activation.apply(u));return[m,m,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:pb(this.activation),recurrentActivation:pb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:hg(this.kernelInitializer),recurrentInitializer:hg(this.recurrentInitializer),biasInitializer:hg(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:yb(this.kernelRegularizer),recurrentRegularizer:yb(this.recurrentRegularizer),biasRegularizer:yb(this.biasRegularizer),activityRegularizer:yb(this.activityRegularizer),kernelConstraint:Vg(this.kernelConstraint),recurrentConstraint:Vg(this.recurrentConstraint),biasConstraint:Vg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}ex.className="LSTMCell",ii(ex);class tx extends Kb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ex(e),super(e)}call(e,t){return ui((()=>{null!=this.cell.dropoutMask&&(ci(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ci(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}tx.className="LSTM",ii(tx);class nx extends Xb{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ui((()=>{let n=e.slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;pg(e)&&(e=e[0]),this.cells.forEach(((n,s)=>{xf(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const s=[];for(const e of t.cells)s.push(sm(e,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return yg(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}wg(t)}}function sx(e){const{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):Vf(t(),n),o=()=>Gf(i,t,s);return!r||r<=1?hi(o().clone()):Array(r).fill(void 0).map(o).map((e=>hi(e.clone())))}nx.className="StackedRNNCells",ii(nx);class rx extends Kb{constructor(e){if(e.unroll)throw new _p("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new _p("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new vg({ndim:5})]}call(e,t){return ui((()=>{if(null!=this.cell.dropoutMask&&(ci(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ci(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Dp("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ui((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=qo([s[0],...s.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e,t=!1){ui((()=>{if(!this.stateful)throw new Ap("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new Dp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>qo(r))):this.states_=[qo(r)];else if(null==e)ci(this.states_),null!=this.keptStates&&(ci(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>qo(r))):this.states_[0]=qo(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Dp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ci(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!L(n.shape,s))throw new Dp(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>hi(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Eb(l,s[0],r,a[0],i[0]),h=Eb(u,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}rx.className="ConvRNN2D";class ax extends ex{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,ef(this.filters,"filters"),this.kernelSize=Tb(n,2,"kernelSize"),this.kernelSize.forEach((e=>ef(e,"kernelSize"))),this.strides=Tb(s||1,2,"strides"),this.strides.forEach((e=>ef(e,"strides"))),this.padding=r||"valid",gf(this.padding),this.dataFormat=a||"channelsLast",ff(this.dataFormat),this.dilationRate=Tb(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>ef(e,"dilationRate")))}build(e){var t;e=mg(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Dp(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends qf{apply(e,t){return _f([n.apply([s]),Ko([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ui((()=>{if(3!==e.length)throw new Dp(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],r=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=sx({ones:()=>Xo(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?ko(t[n],e):e;let l=o(s,i,0),u=o(s,i,1),c=o(s,i,2),h=o(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=sx({ones:()=>Xo(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(r,d,0),f=o(r,d,1),g=o(r,d,2),m=o(r,d,3);const[b,x,y,w]=ml(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?ml(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,v,this.padding),u=this.inputConv(u,x,k,this.padding),c=this.inputConv(c,y,I,this.padding),h=this.inputConv(h,w,S,this.padding);const[N,$,C,T]=ml(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,$),g=this.recurrentConv(g,C),m=this.recurrentConv(m,T);const E=this.recurrentActivation.apply(bi(l,p)),R=this.recurrentActivation.apply(bi(u,f)),A=bi(ko(R,a),ko(E,this.activation.apply(bi(c,g)))),F=ko(this.recurrentActivation.apply(bi(h,m)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n}(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(e,t,n,s){const r=Yi(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Uf(r,n,this.dataFormat):r}recurrentConv(e,t){return Yi(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}ax.className="ConvLSTM2DCell",ii(ax);class ix extends rx{constructor(e){const t=new ax(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}ix.className="ConvLSTM2D",ii(ix);class ox extends $g{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return ui((()=>{this.invokeCallHook(e,t);const n=gg(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return Gf((()=>Vf(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}ox.className="Dropout",ii(ox);class lx extends ox{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}lx.className="SpatialDropout1D",ii(lx);class ux extends $g{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ef(this.units,"units"),this.activation=gb(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=dg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=dg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Hg(e.kernelConstraint),this.biasConstraint=Hg(e.biasConstraint),this.kernelRegularizer=vb(e.kernelRegularizer),this.biasRegularizer=vb(e.biasRegularizer),this.activityRegularizer=vb(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=mg(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=mg(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return ui((()=>{this.invokeCallHook(e,t);const n=gg(e),s=nf(this.activation.getClassName());let r;return null!=s?r=zf(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=zf(n,this.kernel.read()),null!=this.bias&&(r=Uf(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:pb(this.activation),useBias:this.useBias,kernelInitializer:hg(this.kernelInitializer),biasInitializer:hg(this.biasInitializer),kernelRegularizer:yb(this.kernelRegularizer),biasRegularizer:yb(this.biasRegularizer),activityRegularizer:yb(this.activityRegularizer),kernelConstraint:Vg(this.kernelConstraint),biasConstraint:Vg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ux.className="Dense",ii(ux);class cx extends $g{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=mg(e);for(const t of e.slice(1))if(null==t)throw new Dp(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],If(e,1)]}call(e,t){return ui((()=>{this.invokeCallHook(e,t);let n=gg(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Tl(n,e)}return function(e){if(e.rank<=1)throw new Dp(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],If(e.shape,1)];return Oi(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}cx.className="Flatten",ii(cx);class hx extends $g{constructor(e){super(e),this.supportsMasking=!0,this.activation=gb(e.activation)}call(e,t){return ui((()=>{this.invokeCallHook(e,t);const n=gg(e);return this.activation.apply(n)}))}getConfig(){const e={activation:pb(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}hx.className="Activation",ii(hx);class dx extends $g{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ui((()=>{return e=gg(e),t=e,n=this.n,ui((()=>{if(2!==t.shape.length)throw new Dp(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Lf(Rf(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}dx.className="RepeatVector",ii(dx);class px extends $g{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,a=null;for(let e=0;e<s.length;++e){const t=s[e];if(this.isUnknown(t)){if(null!==a)throw new Dp("Can only specifiy one unknown dimension.");a=e}else r*=t}const i=If(e);if(null!==a){if(0===r||i%r!=0)throw new Dp(n);s[a]=i/r}else if(i!==r)throw new Dp(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ui((()=>{this.invokeCallHook(e,t);const n=gg(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return Oi(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}px.className="Reshape",ii(px);class fx extends $g{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=$f(1,e.dims.length+1);if(!L(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new vg({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=mg(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return Tl(gg(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}fx.className="Permute",ii(fx);class gx extends $g{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=gg(e);return yi(Ho(n,this.maskValue),-1)}call(e,t){return ui((()=>{this.invokeCallHook(e,t);const n=gg(e),s=yi(Ho(n,this.maskValue),-1,!0);return ko(n,$a(s,n.dtype))}))}}gx.className="Masking",ii(gx);class mx extends $g{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Up(e.inputLength))}this.inputDim=e.inputDim,ef(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ef(this.outputDim,"outputDim"),this.embeddingsInitializer=dg(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=vb(e.embeddingsRegularizer),this.activityRegularizer=vb(e.activityRegularizer),this.embeddingsConstraint=Hg(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ui((()=>this.maskZero?(e=gg(e),Ho(e,Nl(e))):null))}computeOutputShape(e){if(e=mg(e),null==this.inputLength)return[...e,this.outputDim];const t=Up(this.inputLength);if(t.length!==e.length-1)throw new Dp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],a=e[s+1];if(null!=r&&null!=a&&r!==a)throw new Dp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return ui((()=>{this.invokeCallHook(e,t);let n=gg(e);"int32"!==n.dtype&&(n=Ef(n,"int32"));const s=Bf(this.embeddings.read(),Oi(n,[n.size]));return Oi(s,mg(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:hg(this.embeddingsInitializer),embeddingsRegularizer:yb(this.embeddingsRegularizer),activityRegularizer:yb(this.activityRegularizer),embeddingsConstraint:Vg(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}mx.className="Embedding",ii(mx);class bx extends $g{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new _p}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],a=t[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new Dp("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[mg(e)]),e.length<2)throw new Dp(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Yp(t),t.length>1)throw new Dp(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const s=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===Yp(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ui((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=Nf(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=Rf(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],a=e.slice(1).concat([r]);let i=Oi(s,[r].concat(If(e.slice(1))));i=Tl(i,[1,0]),i=Oi(i,a),t.push(i),n=!0}else if(e>1){const r=$f(1,e).concat([0]);t.push(Tl(s,r)),n=!0}else t.push(s)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=Oi(Tl(Oi(s,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat($f(0,r-1));s=Tl(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const s=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Yp(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return ui((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Dp("`mask` should be an Array");if(!Array.isArray(e))throw new Dp("`inputs` should be an Array");if(t.length!==e.length)throw new Dp(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:co(e,0))))[0];for(let e=1;e<t.length-1;++e)n=$o(n,t[e]);return n}))}}class xx extends bx{constructor(e){super(e)}mergeFunction(e){return ui((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=bi(t,e[n]);return t}))}}xx.className="Add",ii(xx);class yx extends bx{constructor(e){super(e)}mergeFunction(e){return ui((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ko(t,e[n]);return t}))}}yx.className="Multiply",ii(yx);class wx extends bx{constructor(e){super(e)}mergeFunction(e){return ui((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=bi(t,e[n]);return ko(1/e.length,t)}))}}wx.className="Average",ii(wx);class vx extends bx{constructor(e){super(e)}mergeFunction(e){return ui((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ro(t,e[n]);return t}))}}vx.className="Maximum",ii(vx);class kx extends bx{constructor(e){super(e)}mergeFunction(e){return ui((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Do(t,e[n]);return t}))}}kx.className="Minimum",ii(kx);class Ix extends bx{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Dp("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const s=e[t].slice();s.splice(this.axis,1);let r=!1;for(const e of n)if(L(e,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new Dp("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ui((()=>_f(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Dp("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[s]||null==e[s]){n[s]=null;break}n[s]+=e[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Dp("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Dp("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Dp(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return ui((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let n=0;n<e.length;++n)null==t[n]?s.push($a(Xo(e[n]),"bool")):t[n].rank<e[n].rank?s.push(co(t[n],-1)):s.push(t[n]);const r=Hi(s,this.axis);return xi(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Sx(e,t){for(;e<0;)e+=t;return e}Ix.className="Concatenate",ii(Ix);class Nx extends bx{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){A(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new _p("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new Dp(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Dp(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Sx(t,e[n].shape.length))):[Sx(this.axes,n.shape.length),Sx(this.axes,s.shape.length)],this.normalize&&(n=rm(n,t[0]),s=rm(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new _p("batchDot is not implemented for tensors of 4D or higher rank yet");if(A(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),A(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new _p("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const a=n;return ui((()=>{let n,i;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=Oi(t,t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=Oi(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?So(ko(e,t),a[0]):So(ko(Tl(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,s=a[1]===t.shape.length-1;i=Co(e,t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);i=xl(i,t)}return 1===i.shape.length&&(i=co(i,1)),i}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Sx(this.axes,e.length),Sx(this.axes,t.length)],n}computeOutputShape(e){A(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new _p("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Nx.className="Dot",ii(Nx);class $x extends $g{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ui((()=>{this.invokeCallHook(e,t);const n=gg(e);return Gf((()=>bi(Mf(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}$x.className="GaussianNoise",ii($x);class Cx extends $g{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ui((()=>{this.invokeCallHook(e,t);const n=gg(e);return this.rate>0&&this.rate<1?Gf((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return ko(n,Mf(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Cx.className="GaussianDropout",ii(Cx);class Tx extends $g{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||gg(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ui((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Gf((()=>{const t=gg(e),s=-1.7580993408473766;let r=bo(nl(n),this.rate);r=Ef(r,"float32");const a=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-a*s*this.rate,o=bi(ko(t,r),ko(bi(r,-1),s));return bi(ko(o,a),i)}),(()=>gg(e)),t.training||!1)}return e}))}}function Ex(e,t,n,s,r,a=.001){let i;if(2===e.rank)i=Bi(e,t,n,s,r,a);else if(3===e.rank)i=Pi(e,t,n,s,r,a);else{if(4!==e.rank)throw new _p(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Wi(e,t,n,s,r,a)}return i}Tx.className="AlphaDropout",ii(Tx);class Rx extends $g{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=dg(e.betaInitializer||"zeros"),this.gammaInitializer=dg(e.gammaInitializer||"ones"),this.movingMeanInitializer=dg(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=dg(e.movingVarianceInitializer||"ones"),this.betaConstraint=Hg(e.betaConstraint),this.gammaConstraint=Hg(e.gammaConstraint),this.betaRegularizer=vb(e.betaRegularizer),this.gammaRegularizer=vb(e.gammaRegularizer)}build(e){e=mg(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Dp(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new vg({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ui((()=>{const n=null!=t.training&&t.training,s=gg(e),r=s.shape,a=r.length,i=$f(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=zp(1,a);l[o]=r[o];const u=i.slice();u.sort();const c=!L(u,$f(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=Oi(this.movingMean.read(),l),t=Oi(this.movingVariance.read(),l),n=this.center?Oi(this.beta.read(),l):null,r=this.scale?Oi(this.gamma.read(),l):null;return Ex(s,e,t,n,r,this.epsilon)}return Ex(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,s,r=.001){return L(s.slice().sort(),$f(0,e.rank-1))?function(e,t,n,s,r=.001){return ui((()=>{const a=Vo(e,s),i=a.mean,o=a.variance;return[Ex(e,i,o,n,t,r),i,o]}))}(e,t,n,s,r):function(e,t,n,s,r=.001){return ui((()=>{const a=Vo(e,s),i=a.mean,o=a.variance,l=[];for(const t of $f(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Oi(i,l),c=Oi(o,l),h=null==t?null:Oi(t,l),d=null==n?null:Oi(n,l);return[Ex(e,u,c,d,h,r),i,o]}))}(e,t,n,s,r)}(s,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{ui((()=>{const s=1-n,r=e.read(),a=ko(Io(r,t),s);e.write(Io(r,a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:hg(this.betaInitializer),gammaInitializer:hg(this.gammaInitializer),movingMeanInitializer:hg(this.movingMeanInitializer),movingVarianceInitializer:hg(this.movingVarianceInitializer),betaRegularizer:yb(this.betaRegularizer),gammaRegularizer:yb(this.gammaRegularizer),betaConstraint:Vg(this.betaConstraint),gammaConstraint:Vg(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Rx.className="BatchNormalization",ii(Rx);class Ax extends $g{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=dg(e.betaInitializer||"zeros"),this.gammaInitializer=dg(e.gammaInitializer||"ones"),this.betaRegularizer=vb(e.betaRegularizer),this.gammaRegularizer=vb(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=mg(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Yp(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=gg(e),s=n.shape,r=s.length;return ui((()=>{let{mean:e,variance:t}=Vo(n,this.axis,!0);const a=zp(1,r);for(const e of this.axis)a[e]=s[e];const i=e=>null!=e&&e.shape.length!==r?Oi(e,a):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(u.push(s[e]),c.push(1)):(u.push(1),c.push(s[e]));return e=ho(e,u),t=ho(t,u),null!=o&&(o=ho(o,c)),null!=l&&(l=ho(l,c)),Ex(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:hg(this.betaInitializer),gammaInitializer:hg(this.gammaInitializer),betaRegularizer:yb(this.betaRegularizer),gammaRegularizer:yb(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ax.className="LayerNormalization",ii(Ax);class Fx extends $g{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Dp(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Dp(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Dp(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new vg({ndim:4})]}computeOutputShape(e){let t,n;return e=mg(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return ui((()=>{return t=gg(e),n=this.padding,s=this.dataFormat,ui((()=>{if(4!==t.rank)throw new Dp(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Dp("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new Dp(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Yo(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Dx(e,t,n,s,r,a){return ui((()=>{let i;ff(r),mf(a),gf(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=Ab(e,r);const o="same"===s?"same":"valid";return i="max"===a?To(e,t,n,o):Li(e,t,n,o),"channelsFirst"===r&&(i=Tl(i,[0,3,1,2])),i}))}function _x(e,t,n,s,r,a){return ui((()=>{let i;ff(r),mf(a),gf(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=Fb(e,r);const o="same"===s?"same":"valid";return i="max"===a?Eo(e,t,n,o):Mi(e,t,n,o),"channelsFirst"===r&&(i=Tl(i,[0,4,1,2,3])),i}))}Fx.className="ZeroPadding2D",ii(Fx);class Ox extends $g{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Dp(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(ef(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Dp(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}ef(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,gf(this.padding),this.inputSpec=[new vg({ndim:3})]}computeOutputShape(e){const t=Eb((e=mg(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ui((()=>{this.invokeCallHook(e,t),e=Rf(gg(e),2);const n=this.poolingFunction(gg(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return xl(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Lx extends Ox{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return ff(r),gf(s),Dx(e,t,n,s,r,"max")}}Lx.className="MaxPooling1D",ii(Lx);class Mx extends Ox{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return ff(r),gf(s),Dx(e,t,n,s,r,"avg")}}Mx.className="AveragePooling1D",ii(Mx);class zx extends $g{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Dp(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];ef(this.poolSize,"poolSize"),ef(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ff(this.dataFormat),gf(this.padding),this.inputSpec=[new vg({ndim:4})]}computeOutputShape(e){e=mg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Eb(t,this.poolSize[0],this.padding,this.strides[0]),n=Eb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return ui((()=>(this.invokeCallHook(e,t),this.poolingFunction(gg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Bx extends zx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return ff(r),gf(s),Dx(e,t,n,s,r,"max")}}Bx.className="MaxPooling2D",ii(Bx);class Px extends zx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return ff(r),gf(s),Dx(e,t,n,s,r,"avg")}}Px.className="AveragePooling2D",ii(Px);class Wx extends $g{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Dp(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ef(this.poolSize,"poolSize"),ef(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ff(this.dataFormat),gf(this.padding),this.inputSpec=[new vg({ndim:5})]}computeOutputShape(e){e=mg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Eb(t,this.poolSize[0],this.padding,this.strides[0]),n=Eb(n,this.poolSize[1],this.padding,this.strides[1]),s=Eb(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return ui((()=>(this.invokeCallHook(e,t),this.poolingFunction(gg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ux extends Wx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return ff(r),gf(s),_x(e,t,n,s,r,"max")}}Ux.className="MaxPooling3D",ii(Ux);class Vx extends Wx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return ff(r),gf(s),_x(e,t,n,s,r,"avg")}}Vx.className="AveragePooling3D",ii(Vx);class Gx extends $g{constructor(e){super(e),this.inputSpec=[new vg({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new _p}}class Hx extends Gx{constructor(e){super(e||{})}call(e,t){return ui((()=>{const t=gg(e);return Ao(t,1)}))}}Hx.className="GlobalAveragePooling1D",ii(Hx);class jx extends Gx{constructor(e){super(e||{})}call(e,t){return ui((()=>{const t=gg(e);return vo(t,1)}))}}jx.className="GlobalMaxPooling1D",ii(jx);class qx extends $g{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ff(this.dataFormat),this.inputSpec=[new vg({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new _p}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Kx extends qx{call(e,t){return ui((()=>{const t=gg(e);return"channelsLast"===this.dataFormat?Ao(t,[1,2]):Ao(t,[2,3])}))}}Kx.className="GlobalAveragePooling2D",ii(Kx);class Xx extends qx{call(e,t){return ui((()=>{const t=gg(e);return"channelsLast"===this.dataFormat?vo(t,[1,2]):vo(t,[2,3])}))}}Xx.className="GlobalMaxPooling2D",ii(Xx);class Yx extends $g{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=sm(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class Zx extends Yx{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=mg(e)).length<3)throw new Dp(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=mg(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return ui((()=>qb(((e,n)=>[gg(this.layer.call(e,t)),[]]),e=gg(e),[],!1,null,null,!1,!0)[1]))}}Zx.className="TimeDistributed",ii(Zx);class Jx extends Yx{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=sm(n),t.goBackwards=!0!==t.goBackwards;const s={};var r;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=sm(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,Jp(df,"BidirectionalMergeMode",r),e.weights)throw new _p("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):Wp(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=jb(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Dp("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const s=n.map((e=>new vg({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new _p("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof kg;for(const e of a)if(e instanceof kg!==o)throw new Dp("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return ui((()=>{const n=t.initialState;let s,r,a,i;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=al(r,1)),"concat"===this.mergeMode?i=_f([s,r]):"sum"===this.mergeMode?i=bi(s,r):"ave"===this.mergeMode?i=ko(.5,bi(s,r)):"mul"===this.mergeMode?i=ko(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){xf(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),xf(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=sm(t.layer);if(delete t.layer,null!=t.numConstants)throw new _p("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}Jx.className="Bidirectional",ii(Jx);class Qx extends $g{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ui((()=>("float32"!==(e=gg(e)).dtype&&(e=Ef(e,"float32")),bi(ko(e,this.scale),this.offset))))}}Qx.className="Rescaling",ii(Qx);const{resizeBilinear:ey,cropAndResize:ty}=Ru;class ny extends $g{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,s,r,a,i,o){return ui((()=>{let l,u=!1;const c=[t/a,n/i,(s+t)/a,(r+n)/i],h=[];3===e.rank?(u=!0,l=yl([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(c);const d=Gr(h,[h.length,4]),p=sl(0,h.length,1,"int32"),f=ty(l,d,p,[s,r],"nearest");return Ef(u?gg(Il(f)):f,o)}))}upsize(e,t,n,s){return ui((()=>Ef(ey(e,[t,n]),s)))}call(e,t){return ui((()=>{const t=gg(e),n=t.dtype,s=t.shape,r=s[s.length-3],a=s[s.length-2];let i=0;r!==this.height&&(i=Math.floor((r-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,r,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=mg(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}ny.className="CenterCrop",ii(ny);class sy extends $g{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=mg(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return ui((()=>{let n;if("int32"!==(e=gg(e)).dtype&&(e=Ef(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new Dp(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=gg(t.countWeights)}const s=vo(e),r=Fo(e),a=mo(this.numTokens,s).bufferSync().get(0),i=bo(r,0).bufferSync().get(0);if(!a||!i)throw new Dp(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,s){let r=gg(e);if("int32"!==r.dtype&&(r=Ef(r,"int32")),"int"===t)return r;const a=r.shape;if(0===r.rank&&(r=co(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=co(r,-1)),r.rank>2)throw new Dp(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(t);let o;if(o=so(r,void 0!==s&&"count"===t?s:[],n,i),"tfIdf"!==t)return o;if(s)return ko(o,s);throw new Dp("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}sy.className="CategoryEncoding",ii(sy);const ry=new Set(["bilinear","nearest"]);class ay extends $g{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!ry.has(e.interpolation))throw new Dp(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=mg(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ui((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Ru.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Ru.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...ry]} are supported`)}))}}var iy,oy,ly,uy;function cy(e,t,n=new Map,s=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(fy(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const a in e){const i=cy(e[a],t,n,s);r[a]=i}return s.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function hy(e,t=py){return dy(e,t)}function dy(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(fy(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=dy(e.map((e=>e[a])),t,n);r[a]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function py(e){return null===e?null:fy(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function fy(e){let t=!1;if(de().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:s}=n(977);t=e instanceof s}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof dr)&&!(e instanceof Promise)&&!t)}function gy(e){return cy(e,my)}function my(e){return e instanceof dr?{value:e.clone(),recurse:!1}:fy(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}ay.className="Resizing",ii(ay),de().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(iy||(iy={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(oy||(oy={}));class by{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class xy extends by{constructor(){super(xy.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}xy.INITIAL_CAPACITY=32;class yy{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Ty(this,e)}filter(e){return new $y(this,e)}map(e){return new Cy(this,e)}mapAsync(e){return new Ey(this,e)}serialMapAsync(e){return new Ey(this,e).serial()}flatmap(e){return new Ay(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Ny(this,e,t)}columnMajorBatch(e,t=!0,n=py){return this.rowMajorBatch(e,t).map((e=>hy(e,n)))}concatenate(e,t){return new Fy(new wy([this,e]),t)}take(e){return e<0||null==e?this:new Sy(this,e)}skip(e){return e<0||null==e?this:new Iy(this,e)}prefetch(e){return new Dy(this,e)}shuffle(e,t){return new _y(this,e,t)}serial(){return new ky(this)}}class wy extends yy{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:gy(e),done:!1}}}class vy extends yy{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class ky extends yy{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Iy extends yy{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;ci(e.value)}return this.upstream.next()}}class Sy extends yy{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Ny extends yy{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class $y extends yy{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ci(e.value)}}}class Cy extends yy{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Nr(e.value),n=this.transform(e.value),s=Nr(n);for(const e of t)Sr(e,s)||e.dispose();return{value:n,done:!1}}}class Ty extends yy{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Ey extends yy{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Nr(e.value),n=await this.transform(e.value),s=Nr(n);for(const e of t)Sr(e,s)||e.dispose();return{value:n,done:!1}}}class Ry extends yy{constructor(){super(),this.outputQueue=new xy,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Ay extends Ry{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Nr(e.value),n=this.transform(e.value),s=Nr(n);this.outputQueue.pushAll(n);for(const e of t)Sr(e,s)||e.dispose();return!0}}class Fy extends yy{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(uy=ly||(ly={}))[uy.FAIL=0]="FAIL",uy[uy.SHORTEST=1]="SHORTEST",uy[uy.LONGEST=2]="LONGEST";class Dy extends yy{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new by(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class _y extends Dy{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Jo.alea(n||Zs().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Oy{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return A(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Ly((async()=>(await n.iterator()).columnMajorBatch(e,t,My)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Ly((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Ly((async()=>(await t.iterator()).filter((t=>ui((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Ly((async()=>(await t.iterator()).map((t=>ui((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Ly((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Ly((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Ly((async()=>{return n=(r=async()=>({value:await t.iterator(),done:!1}),new vy(r)).take(e),new Fy(n,s);var n,s,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Ly((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=Jo.alea(t||Zs().toString());return Ly((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Ly((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Ly(e,t=null){return new class extends Oy{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function My(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof dr||q(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof dr?yl(e):Gr(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function zy(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&A("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}Oy.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const By=Xc;class Py extends N{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new S(this,oi())}nextDataId(){return Py.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,de().get("IS_NODE")&&Ns("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&X(n[0])){const r=n.map((e=>Js(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?mc(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Qs(e)));return Na(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Na(e.shape,e.dtype,t)}makeOutput(e,t,n){return oi().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Zs();return e(),{kernelMs:Zs()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){zy([e],"where");const t=this.readSync(e.dataId);return By(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Wy(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(zy(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=O(i.shape),c=n||i.dtype,h=H(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],r);return o.makeTensorInfo(i.shape,c,h)}}function Uy(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(zy(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,r);return o.makeTensorInfo(i.shape,u,c)}}Py.nextDataId=0,di("cpu",(()=>new Py),1);const Vy=Wy(pt,(e=>e>=0?e:Math.exp(e)-1)),Gy={kernelName:pt,backendName:"cpu",kernelFunc:Vy};function Hy(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const jy={kernelName:Rt,backendName:"cpu",kernelFunc:Hy};function qy(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;zy([r],"leakyRelu");const i=O(r.shape),o=n.data.get(r.dataId).values,l=G("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",l)}const Ky={kernelName:Lt,backendName:"cpu",kernelFunc:qy};function Xy(e){return(t,n,s,r,a)=>{const i=za(t,n),o=i.length,l=ee(i),u=G(a,O(i)),c=t.length,h=n.length,d=ee(t),p=ee(n),f=La(t,i),g=La(n,i);if(f.length+g.length===0)for(let t=0;t<u.length;++t)u[t]=e(s[t%s.length],r[t%r.length]);else for(let t=0;t<u.length;++t){const n=le(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=oe(a,c,d),m=n.slice(-h);g.forEach((e=>m[e]=0));const b=oe(m,h,p);u[t]=e(s[i],r[b])}return[u,i]}}const Yy=Xy(((e,t)=>e<0?t*e:e));function Zy(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;zy([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,l]=Yy(s.shape,r.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const Jy={kernelName:xn,backendName:"cpu",kernelFunc:Zy},Qy=Wy($n,(e=>Math.max(0,e))),ew={kernelName:$n,backendName:"cpu",kernelFunc:Qy},tw=Wy(Fn,(e=>Math.min(Math.max(0,e),6))),nw={kernelName:Fn,backendName:"cpu",kernelFunc:tw};function sw(e){return(t,n,s)=>{const r=G(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],s);return r}}const rw=sw((e=>1/(1+Math.exp(-e)))),aw=Wy(Gn,(e=>1/(1+Math.exp(-e)))),iw={kernelName:Gn,backendName:"cpu",kernelFunc:aw};function ow(e,t,n,s,r){if("linear"===n)return Hy({inputs:{x:t},backend:e});if("relu"===n)return Qy({inputs:{x:t},backend:e});if("elu"===n)return Vy({inputs:{x:t},backend:e});if("relu6"===n)return tw({inputs:{x:t},backend:e});if("prelu"===n)return Zy({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return qy({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return aw({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function lw(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const uw={kernelName:Ue,backendName:"cpu",kernelFunc:lw};function cw(e,t,n="float32"){if("complex64"===n)return lw({inputs:{real:cw(e,t,"float32"),imag:cw(e,t,"float32")},backend:e});const s=re(O(t),n);return e.makeTensorInfo(t,n,s)}function hw(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const dw={kernelName:Sn,backendName:"cpu",kernelFunc:hw};function pw(e,t,n,s){if("int32"===s)return[t,"int32",Int32Array.from(e)];if("bool"===s){const s=Ys([0],n),[r,a]=Xy(((e,t)=>e!==t?1:0))(t,[],e,s,"bool");return[a,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function fw(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return Hy({inputs:{x:r},backend:n});const e=cw(n,r.shape,r.dtype),t=fw({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=lw({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=hw({inputs:{input:r},backend:n}),t=fw({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!j(r.dtype,a)){const e=Hy({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(r.dataId).values,[o,l,u]=pw(i,r.shape,r.dtype,a);return n.makeTensorInfo(o,l,u)}const gw={kernelName:Be,backendName:"cpu",kernelFunc:fw};function mw(e,t,n,s){return null==n?({inputs:n,backend:r})=>{const{a,b:i}=n,o=r;zy([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c="string"===a.dtype?qc(l):l,h="string"===a.dtype?qc(u):u,d=s||a.dtype,[p,f]=t(a.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:r})=>{const{a,b:i}=e,o=r;if("complex64"===a.dtype||"complex64"===i.dtype){const e=fw({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=fw({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,g=o.data.get(p.dataId).values,[m,b,x]=n(a.shape,i.shape,l,u,f,g),y=o.makeTensorInfo(x,"float32",m),w=o.makeTensorInfo(x,"float32",b),v=lw({inputs:{real:y,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,r=s||a.dtype,[l,u]=t(a.shape,i.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function bw(e){return(t,n,s,r,a,i)=>{const o=za(t,n),l=O(o),u=o.length,c=ee(o),h=G("float32",l),d=G("float32",l),p=La(t,o),f=La(n,o),g=mc(s,r),m=mc(a,i),b=t.length,x=ee(t),y=n.length,w=ee(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%g.length,s=t%m.length,r=e(g[2*n],g[2*n+1],m[2*s],m[2*s+1]);h[t]=r.real,d[t]=r.imag}else for(let t=0;t<h.length;t++){const n=le(t,u,c),s=n.slice(-b);p.forEach((e=>s[e]=0));const r=oe(s,b,x),a=n.slice(-y);f.forEach((e=>a[e]=0));const i=oe(a,y,w),o=e(g[2*r],g[2*r+1],m[2*i],m[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const xw=Xy(((e,t)=>e+t)),yw=bw(((e,t,n,s)=>({real:e+n,imag:t+s}))),ww=mw(we,xw,yw),vw={kernelName:we,backendName:"cpu",kernelFunc:ww};function kw(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=O(r.shape),o=W(a,i),l=O(o);A(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const Iw={kernelName:Cn,backendName:"cpu",kernelFunc:kw};function Sw(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;zy([r,a],"matMul");const l=r.shape.length,u=a.shape.length,c=i?r.shape[l-2]:r.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],d=i?r.shape[l-1]:r.shape[l-2],p=o?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),g=a.shape.slice(0,-2),m=O(f),b=O(g),x=za(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);A(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const y=o?[b,p,h]:[b,h,p],w=kw({inputs:{x:r},backend:n,attrs:{shape:i?[m,c,d]:[m,d,c]}}),v=kw({inputs:{x:a},backend:n,attrs:{shape:y}}),k=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],S=o?v.shape[1]:v.shape[2],N=Math.max(m,b),$=n.data.get(w.dataId).values,C=n.data.get(v.dataId).values,T=ee(w.shape),E=ee(v.shape),[R,F,D]=i?[T[0],1,T[1]]:[T[0],T[1],1],[_,L,M]=o?[1,E[1],E[0]]:[E[1],1,E[0]],z=I*S,B=Na([N,I,S],w.dtype),P=B.values,W=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<I;t+=W)for(let n=0;n<S;n+=W)for(let s=0;s<k;s+=W){const r=Math.min(t+W,I),a=Math.min(n+W,S),i=Math.min(s+W,k);for(let o=t;o<r;o++)for(let t=n;t<a;t++){let n=0;for(let r=s;r<i;r++){const s=Math.min(e,m-1)*R,a=Math.min(e,b-1)*M;n+=$[s+o*F+r*D]*C[r*_+t*L+a]}P[e*z+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(x,B.dtype,B.values)}const Nw={kernelName:Oe,backendName:"cpu",kernelFunc:Sw},$w={kernelName:ks,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const g=[];d=Sw({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=ww({inputs:{a:d,b:i},backend:n}),g.push(d),d=p),c&&(f=ow(n,d,c,o,h),g.push(d),d=f);for(const e of g)n.disposeIntermediateTensorInfo(e);return d}};function Cw(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Tw={kernelName:be,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;zy(t,"abs");let s=new Float32Array(O(t.shape));return s=Cw(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,t.dtype)}},Ew=Wy(xe,(e=>Math.acos(e))),Rw={kernelName:xe,backendName:"cpu",kernelFunc:Ew},Aw=Wy(ye,(e=>Math.acosh(e))),Fw={kernelName:ye,backendName:"cpu",kernelFunc:Aw},Dw={kernelName:ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;zy(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),a=Na(s[0].shape,s[0].dtype),i=a.values;for(let e=0;e<s.length;e++){const t=r[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function _w(e,t,n,s,r){const a=t.length,i=O(t),o=ee(t),l=ee(r),u=G(n,O(r));for(let t=0;t<i;++t){const n=le(t,a,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[s[e]];u[oe(r,a,l)]=e[t]}return u}function Ow(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;zy(r,"transpose");const i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[a[e]];const l=_w(s.data.get(r.dataId).values,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const Lw={kernelName:fs,backendName:"cpu",kernelFunc:Ow},Mw={kernelName:ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;zy(r,"all");const o=U(a,r.shape);let l=o;const u=Bo(l,r.shape.length);let c=r;null!=u&&(c=Ow({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Wo(l.length,r.shape.length)),zo("all",l,c.shape.length);const[h,d]=Lo(c.shape,l),p=O(d),f=re(O(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const s=g[t+e];n=n&&s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=kw({inputs:{x:m},backend:n,attrs:{shape:Mo(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},zw={kernelName:Ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;zy(r,"any");const o=U(a,r.shape);let l=o;const u=Bo(l,r.shape.length);let c=r;null!=u&&(c=Ow({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Wo(l.length,r.shape.length)),zo("any",l,c.shape.length);const[h,d]=Lo(c.shape,l),p=O(d),f=re(O(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const s=g[t+e];n=n||s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=kw({inputs:{x:m},backend:n,attrs:{shape:Mo(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},Bw={kernelName:Se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;zy(r,"argMax");let i=U(a,r.shape);const o=Bo(i,r.shape.length);let l=r;const u=[];null!=o&&(l=Ow({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Wo(i.length,l.shape.length)),i=[i[0]],zo("argMax",i,l.shape.length);const[c,h]=Lo(l.shape,i),d=re(O(c),"int32"),p=O(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],s=0;for(let e=0;e<p;++e){const r=f[t+e];r>n&&(n=r,s=e)}d[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Pw={kernelName:Ne,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;zy(r,"argMin");let i=U(a,r.shape);const o=Bo(i,r.shape.length);let l=r;const u=[];null!=o&&(l=Ow({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Wo(i.length,l.shape.length)),i=[i[0]],zo("argMin",i,l.shape.length);const[c,h]=Lo(l.shape,i),d=re(O(c),"int32"),p=O(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],s=0;for(let e=0;e<p;++e){const r=f[t+e];r<n&&(n=r,s=e)}d[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Ww=Wy($e,(e=>Math.asin(e))),Uw={kernelName:$e,backendName:"cpu",kernelFunc:Ww},Vw=Wy(Ce,(e=>Math.asinh(e))),Gw={kernelName:Ce,backendName:"cpu",kernelFunc:Vw},Hw=Wy(Te,(e=>Math.atan(e))),jw={kernelName:Te,backendName:"cpu",kernelFunc:Hw},qw=Xy(((e,t)=>Math.atan2(e,t))),Kw=mw(Re,qw),Xw={kernelName:Re,backendName:"cpu",kernelFunc:Kw},Yw=Wy(Ee,(e=>Math.atanh(e))),Zw={kernelName:Ee,backendName:"cpu",kernelFunc:Yw};function Jw(e,t,n,s,r,a){const i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Na(r.outShape,n),m=g.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],y=r.outShape[3];for(let t=0;t<r.batchSize;++t){const n=t*b,g=t*s[0];for(let t=0;t<r.inChannels;++t)for(let b=0;b<r.outHeight;++b){const w=b*i-d,v=Math.max(0,w),k=Math.min(r.inHeight,c+w),I=n+b*x;for(let n=0;n<r.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(r.inWidth,h+i);let b=f,x=0,w=0;for(let n=v;n<k;n+=l){const r=g+n*s[1];for(let n=c;n<d;n+=u){const i=e[r+n*s[2]+t];"max"===a&&i>b?b=i:"avg"===a&&(x+=i,w++)}if(isNaN(b))break}m[I+n*y+t]="avg"===a?x/w:b}}}return g}function Qw(e,t,n,s,r=!1,a=!1){const i=Na(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,g=Na(t,n,e);for(let e=0;e<s.batchSize;++e)for(let t=0;t<s.inChannels;++t)for(let n=0;n<s.outHeight;++n){const m=n*o-p;let b=m;for(;b<0;)b+=u;const x=Math.min(s.inHeight,h+m);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const y=Math.min(s.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=b;n<x;n+=u){const i=n-m;for(let o=p;o<y;o+=c){const l=o-h,u=g.get(e,n,o,t);u>w&&(w=u,v=r?a?((e*s.inHeight+n)*s.inWidth+o)*s.inChannels+t:(n*s.inWidth+o)*s.inChannels+t:i*d+l)}}i.set(v,e,n,o,t)}}return i}function ev(e,t,n,s,r,a){const i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,g=r.padInfo.front,m=r.padInfo.top,b=r.padInfo.left,x="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=Na(r.outShape,n),w=y.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],S=r.outShape[4];for(let t=0;t<r.batchSize;++t){const n=t*v,y=t*s[0];for(let t=0;t<r.inChannels;++t)for(let v=0;v<r.outDepth;++v){const N=v*i-g;let $=N;for(;$<0;)$+=u;const C=Math.min(r.inDepth,d+N),T=n+v*k;for(let n=0;n<r.outHeight;++n){const i=n*o-m;let d=i;for(;d<0;)d+=c;const g=Math.min(r.inHeight,p+i),v=T+n*I;for(let n=0;n<r.outWidth;++n){const i=n*l-b;let o=i;for(;o<0;)o+=h;const p=Math.min(r.inWidth,f+i),m=v+n*S;let k=x,I=0,N=0;for(let n=$;n<C;n+=u){const r=y+n*s[1];for(let n=d;n<g;n+=c){const i=r+n*s[2];for(let n=o;n<p;n+=h){const r=e[i+n*s[3]+t];if("max"===a&&r>k?k=r:"avg"===a&&(I+=r,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[m+t]="avg"===a?I/N:k}}}}return y}const tv={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;zy(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;A(Fi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ki(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&L(u.inShape,u.outShape))c=Hy({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=ee(r.shape),s=Jw(e,r.shape,r.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},nv={kernelName:De,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;zy(r,"avgPool3d");const c=Ii(r.shape,a,i,1,o,l,u),h=ev(n.data.get(r.dataId).values,r.shape,r.dtype,ee(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},sv={kernelName:_e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;zy([r,a],"avgPool3DGrad");const c=Ii(a.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,y=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,S=k-1-c.padInfo.left,N=v-1-c.padInfo.top,$=Na(a.shape,"float32"),C=1/(f*g*m),T=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-I,i=s-N,o=r-S;let l=0;for(let n=0;n<w;n+=b){const s=(a+n)/h;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let n=0;n<v;n+=x){const r=(i+n)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<k;n+=y){const a=(o+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=T.get(e,s,r,a,t))}}}$.set(l*C,e,n,s,r,t)}return n.makeTensorInfo($.shape,$.dtype,$.values)}},rv={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;zy([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=ki(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,y=x-1-c.padInfo.left,w=b-1-c.padInfo.top,v=Na(i.shape,"float32"),k=1/(p*f),I=n.data.get(r.dataId).values,S=Na(r.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=n-w,a=s-y;let i=0;for(let n=0;n<b;n+=g){const s=(r+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<x;n+=m){const r=(a+n)/d;r<0||r>=c.outWidth||Math.floor(r)!==r||(i+=S.get(e,s,r,t))}}v.set(i*k,e,n,s,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},av={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:l}=t;A(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),A(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),A(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),zy([r,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),m=f.length,b=p.length,x=d.length,y=h.length;let w=0,v=0,k=0,I=0;for(let e=0;e<c.length;++e)g[e]=f[w++]+(c[e]-h[v++])*p[k++]/Math.sqrt(d[I++]+u),w>=m&&(w=0),v>=y&&(v=0),k>=b&&(k=0),I>=x&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,g)}};function iv(e,t,n,s,r){const a=Qa(s,t,n),i=O(n),o=ee(s);if(a){const n=ei(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const l=Na(s,r,"string"===r?qc(e):e),u=Na(n,r);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),s=n.map(((e,n)=>e+t[n]));u.set(l.get(...s),...n)}return"string"===r?Kc(u.values):u.values}function ov(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;zy(r,"slice");const[o,l]=ti(r,a,i);Wa(r,o,l);const u=iv(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const lv={kernelName:Pn,backendName:"cpu",kernelFunc:ov},uv={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;zy([r],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=Qu(r.shape,a,o),u=ec(l.length,a.length),c=tc(r.shape,a,o),h=nc(i,a.length),d=sc(c,i,a.length),p=kw({inputs:{x:r},backend:n,attrs:{shape:l}}),f=Ow({inputs:{x:p},backend:n,attrs:{perm:u}}),g=kw({inputs:{x:f},backend:n,attrs:{shape:c}}),m=ov({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}};function cv(e,t,n,s,r){const a=O(s),i=re(r,n);for(let n=0;n<e.length;n++){const s=e[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(i[s]+=a>0?t[n]:1)}return i}function hv(e,t,n,s=!1){const r=e.shape[0],a=e.shape[1],i=Na([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<a;r++){const a=e.get(o,r);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,r),o,a):i.set(i.get(o,a)+1,o,a))}return i}const dv={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=cv(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},pv={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=za(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},fv=sw((e=>Math.ceil(e))),gv=Uy(Pe,fv),mv={kernelName:Pe,backendName:"cpu",kernelFunc:gv},bv=Wy(We,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),xv={kernelName:We,backendName:"cpu",kernelFunc:bv},yv={kernelName:Ve,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(O(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];s[e]=Math.hypot(t,n)}return n.makeOutput(s,t.shape,"float32")}};function wv(e,t,n,s){const r=H(n,O(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=O(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const a="string"===n?qc(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=a[i++]}s+=e.shape[1]}))}return r}function vv(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const kv={kernelName:Ft,backendName:"cpu",kernelFunc:vv};function Iv(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=U(r,t[0].shape)[0];Vu(t.map((e=>e.shape)),a);let i=Gu(t.map((e=>e.shape)),a);if(0===O(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>O(e.shape)>0));if(1===o.length)return Hy({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>hw({inputs:{input:e},backend:n}))),t=o.map((e=>vv({inputs:{input:e},backend:n}))),s=Iv({inputs:e,backend:n,attrs:{axis:a}}),r=Iv({inputs:t,backend:n,attrs:{axis:a}}),i=lw({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}const l=o.map((e=>{const t=O(e.shape.slice(a));return kw({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Gu(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=wv(u,i,t[0].dtype,c),d=Gu(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const Sv={kernelName:Ge,backendName:"cpu",kernelFunc:Iv};function Nv(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;zy([r,a],"conv2d");const h=Di(l),d=Si(r.shape,a.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,y="channelsLast"===d.dataFormat,w=new lr(d.outShape,r.dtype),v=ee(r.shape),k=ee(a.shape),I=v[0],S=y?v[1]:v[2],N=y?v[2]:1,$=y?1:v[1],C=w.strides[0],T=y?w.strides[1]:w.strides[2],E=y?w.strides[2]:1,R=y?1:w.strides[1],A=n.data.get(r.dataId).values,F=n.data.get(a.dataId).values,D=w.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*C;for(let e=0;e<d.outHeight;++e){const s=n+e*T,r=e*d.strideHeight-x;for(let e=0;e<p;++e){const n=r+e*g;if(n<0||n>=d.inHeight)continue;const a=e*k[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){const t=s+e*E,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const s=n+e*m;if(s<0||s>=d.inWidth)continue;const r=i+s*N;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=A[r+e*$];for(let e=0;e<d.outChannels;++e)D[t+e*R]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}const $v={kernelName:He,backendName:"cpu",kernelFunc:Nv},Cv={kernelName:je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;zy([r,a],"conv2dBackpropFilter");const h=Di(l),d=Si(r.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,b="channelsLast"===d.dataFormat,x=new lr(d.filterShape,"float32"),y=d.padInfo.left,w=d.padInfo.top,v=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=new lr(r.shape,r.dtype,v),S=new lr(a.shape,a.dtype,k);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((w-e)/p)),n=Math.min(d.outHeight,(d.inHeight+w-e)/p);for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((y-s)/f)),a=Math.min(d.outWidth,(d.inWidth+y-s)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-w;for(let e=r;e<a;++e){const n=s+e*f-y;l+=b?I.get(u,t,n,i)*S.get(u,c,e,o):I.get(u,i,t,n)*S.get(u,o,c,e)}}x.set(l,e,s,i,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Tv={kernelName:qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;zy([r,a],"conv2dBackpropInput");const h=ee(a.shape),d=ee(r.shape);let p=Di(u);const f=Si(i,a.shape,o,1,l,c,!1,p),g=new lr(f.inShape,"float32"),m=g.values,b=n.data.get(r.dataId).values,x=n.data.get(a.dataId).values,[y,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:$,inWidth:C,outChannels:T,outHeight:E,outWidth:R,strideHeight:A,strideWidth:F}=f;p=f.dataFormat;const D=I-1-f.padInfo.top,_=S-1-f.padInfo.left,O="channelsLast"===p,L=g.strides[0],M=O?g.strides[1]:g.strides[2],z=O?g.strides[2]:1,B=O?1:g.strides[1],P=d[0],W=O?d[1]:d[2],U=O?d[2]:1,V=O?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<$;++n){const s=n-D,r=Math.max(0,Math.ceil(s/A)),a=Math.min(E,(I+s)/A);for(let i=0;i<C;++i){const o=i-_,l=Math.max(0,Math.ceil(o/F)),u=Math.min(R,(S+o)/F);let c=0;for(let n=r;n<a;++n){const r=n*A-s;for(let s=l;s<u;++s){const a=P*e+W*n+U*s,i=y*(I-1-r)+w*(S-1-(s*F-o))+v*t;for(let e=0;e<T;++e)c+=b[a+V*e]*x[i+e]}}m[L*e+M*n+z*i+B*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Ev={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s;zy([r,a],"conv3d");const u=Ni(r.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,b=m.front,x=m.left,y=m.top,w=new lr(u.outShape,r.dtype),v=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=w.values,S=ee(r.shape),N=ee(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*S[0],n=e*w.strides[0];for(let e=0;e<u.outDepth;++e){const s=n+e*w.strides[1],r=e*u.strideDepth-b;for(let e=0;e<c;++e){const n=r+e*p;if(n<0||n>=u.inDepth)continue;const a=e*N[0],i=t+n*S[1];for(let e=0;e<u.outHeight;++e){const t=s+e*w.strides[2],n=e*u.strideHeight-y;for(let e=0;e<h;++e){const s=n+e*f;if(s<0||s>=u.inHeight)continue;const r=a+e*N[1],o=i+s*S[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,s=e*u.strideWidth-x;for(let e=0;e<d;++e){const t=s+e*g;if(t<0||t>=u.inWidth)continue;const a=r+e*N[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=v[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},Rv={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s;zy([r,a],"conv3dBackpropFilterV2");const u=ee(r.shape),c=ee(a.shape),h=Ni(r.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,x=new lr(h.filterShape,"float32"),y=x.values,[w,v,k,I]=x.strides,S=n.data.get(a.dataId).values,[N,$,C,T]=c,E=n.data.get(r.dataId).values,[R,A,F,D]=u,_=h.padInfo.front,O=h.padInfo.left,L=h.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((_-e)/d)),n=Math.min(h.outDepth,(h.inDepth+_-e)/d),s=e*w;for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((L-r)/p)),i=Math.min(h.outHeight,(h.inHeight+L-r)/p),o=r*v+s;for(let s=0;s<b;++s){const l=Math.max(0,Math.ceil((O-s)/f)),u=Math.min(h.outWidth,(h.inWidth+O-s)/f),c=s*k+o;for(let o=0;o<h.inChannels;++o){const g=o*I+c;for(let c=0;c<h.outChannels;++c){let m=0;for(let g=0;g<h.batchSize;++g){const h=g*R,b=g*N;for(let g=t;g<n;++g){const t=(e+g*d-_)*A+h,n=g*$+b;for(let e=a;e<i;++e){const a=(r+e*p-L)*F+t,i=e*C+n;for(let e=l;e<u;++e){const t=e*T+i;m+=E[(s+e*f-O)*D+a+o]*S[t+c]}}}}y[g+c]=m}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Av={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s;zy([r],"conv3dBackpropInputV2");const u=ee(r.shape),c=ee(a.shape),h=Ni(l,a.shape,o,1,i),d=new lr(h.inShape,"float32"),p=d.values,[f,g,m,b]=d.strides,x=n.data.get(r.dataId).values,[y,w,v,k]=u,I=n.data.get(a.dataId).values,[S,N,$,C]=c,{batchSize:T,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:F,inDepth:D,inHeight:_,inWidth:O,outChannels:L,outDepth:M,outHeight:z,outWidth:B,strideDepth:P,strideHeight:W,strideWidth:U}=h,V=E-1-h.padInfo.front,G=R-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<F;++t)for(let n=0;n<D;++n){const s=n-V,r=Math.max(0,Math.ceil(s/P)),a=Math.min(M,(E+s)/P);for(let i=0;i<_;++i){const o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(R+o)/W);for(let c=0;c<O;++c){const h=c-H,d=Math.max(0,Math.ceil(h/U)),T=Math.min(B,(A+h)/U);let F=0;for(let n=r;n<a;++n){const r=n*P-s;for(let s=l;s<u;++s){const a=s*W-o;for(let i=d;i<T;++i){const o=y*e+w*n+v*s+k*i,l=S*(E-1-r)+N*(R-1-a)+$*(A-1-(i*U-h))+C*t;for(let e=0;e<L;++e)F+=x[o+e]*I[l+e]}}}p[f*e+g*n+m*i+b*c+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Fv=Wy(Ze,(e=>Math.cos(e))),Dv={kernelName:Ze,backendName:"cpu",kernelFunc:Fv},_v=Wy(Je,(e=>Math.cosh(e))),Ov={kernelName:Je,backendName:"cpu",kernelFunc:_v},Lv={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=a.shape[0],[g,m]=o,b=Na([f,g,m,p],"float32"),x=n.data.get(a.dataId).values,y=n.data.get(i.dataId).values,w=n.data.get(r.dataId).values,v=ee(r.shape),k=ee(b.shape);for(let e=0;e<f;e++){const t=4*e,n=x[t],s=x[t+1],r=x[t+2],a=x[t+3],i=y[e];if(i>=c)continue;const o=g>1?(r-n)*(h-1)/(g-1):0,f=m>1?(a-s)*(d-1)/(m-1):0;for(let t=0;t<g;t++){const c=g>1?n*(h-1)+t*o:.5*(n+r)*(h-1);if(c<0||c>h-1)for(let n=0;n<m;n++)for(let s=0;s<p;s++){const r=s+n*k[2]+t*k[1]+e*k[0];b.values[r]=u}else if("bilinear"===l){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let l=0;l<m;l++){const c=m>1?s*(d-1)+l*f:.5*(s+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const s=n+l*k[2]+t*k[1]+e*k[0];b.values[s]=u}continue}const h=Math.floor(c),g=Math.ceil(c),x=c-h;for(let s=0;s<p;s++){let a=s+h*v[2]+n*v[1]+i*v[0];const u=w[a];a=s+g*v[2]+n*v[1]+i*v[0];const c=w[a];a=s+h*v[2]+r*v[1]+i*v[0];const d=w[a];a=s+g*v[2]+r*v[1]+i*v[0];const p=u+(c-u)*x,f=d+(w[a]-d)*x;a=s+l*k[2]+t*k[1]+e*k[0],b.values[a]=p+(f-p)*o}}}else for(let n=0;n<m;++n){const r=m>1?s*(d-1)+n*f:.5*(s+a)*(d-1);if(r<0||r>d-1){for(let s=0;s<p;s++){const r=s+n*k[2]+t*k[1]+e*k[0];b.values[r]=u}continue}const o=Math.round(r),l=Math.round(c);for(let s=0;s<p;s++){const r=s+o*v[2]+l*v[1]+i*v[0],a=s+n*k[2]+t*k[1]+e*k[0];b.values[a]=w[r]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Mv={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;zy(r,"cumprod");const l=Bo([a],r.shape.length);let u=r;null!=l&&(u=Ow({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Wo(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=vr(u.dtype,"int32"),d=se(O(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=g(e,t);if(0===t)d[n]=i?1:p[n];else{const s=g(e,t-1);d[n]=i?p[s]*d[s]:p[n]*d[s]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=Ow({inputs:{x:m},backend:n,attrs:{perm:Po(l)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),e}return m}},zv={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;zy(r,"cumsum");const l=Bo([a],r.shape.length);let u=r;null!=l&&(u=Ow({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Wo(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=vr(u.dtype,"int32"),d=re(O(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=g(e,t);if(0===t)d[n]=i?0:p[n];else{const s=g(e,t-1);d[n]=i?p[s]+d[s]:p[n]+d[s]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=Ow({inputs:{x:m},backend:n,attrs:{perm:Po(l)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),e}return m}},Bv={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=cv(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===r.shape.length){const e=hv(n.bufferSync(r),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},Pv={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;A("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*a,d=u*a,p=c/(a*a),f=n.data.get(r.dataId).values,g=new Float32Array(o*h*d*p);let m=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),s=t%a;for(let t=0;t<d;++t){const r=Math.floor(t/a),i=(s*a+t%a)*p;for(let t=0;t<p;++t){const s=t+i+c*(r+u*(n+l*e));g[m++]=f[s]}}}return n.makeTensorInfo([o,h,d,p],r.dtype,g)}};function Wv(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;zy([r,a],"depthwiseConv2DNative");const c=ee(r.shape),h=ee(a.shape);let d=l;null==d&&(d=[1,1]),A(Fi(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=Si(r.shape,a.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:b,padInfo:x}=p,y=x.left,w=x.top,v=p.outChannels/p.inChannels,k=new lr(p.outShape,r.dtype),I=n.data.get(r.dataId).values,S=n.data.get(a.dataId).values,N=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const s=n+e*k.strides[1],r=e*p.strideHeight-w;for(let e=0;e<f;++e){const n=r+e*m;if(n<0||n>=p.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=s+e*k.strides[2],n=e*p.strideWidth-y;for(let e=0;e<g;++e){const s=n+e*b;if(s<0||s>=p.inWidth)continue;const r=a+e*h[1],o=i+s*p.inChannels;let l=t,u=r;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)N[l+e]+=t*S[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const Uv={kernelName:rt,backendName:"cpu",kernelFunc:Wv},Vv={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;zy([r,a],"depthwiseConv2dNativeBackpropFilter");const h=Si(r.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new lr(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,y=h.outChannels/h.inChannels,w=n.data.get(r.dataId).values,v=new lr(r.shape,r.dtype,w),k=n.data.get(a.dataId).values,I=new lr(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((x-e)/d)),n=Math.min(h.outHeight,(h.inHeight+x-e)/d);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((b-s)/p)),a=Math.min(h.outWidth,(h.inWidth+b-s)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/y),l=i%y;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-x;for(let e=r;e<a;++e){const n=s+e*p-b;u+=v.get(l,t,n,o)*I.get(l,c,e,i)}}m.set(u,e,s,o,l)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Gv={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;zy([r,a],"depthwiseConv2DNativeBackpropInput");const h=ee(r.shape),d=ee(a.shape),p=Si(c,a.shape,i,o,l,u,!0),f=new lr(p.inShape,"float32"),g=f.values,[m,b,x]=f.strides,y=n.data.get(r.dataId).values,[w,v,k]=h,I=n.data.get(a.dataId).values,[S,N,$]=d,{batchSize:C,filterHeight:T,filterWidth:E,inChannels:R,inHeight:A,inWidth:F,outChannels:D,outHeight:_,outWidth:O,strideHeight:L,strideWidth:M}=p,z=T-1-p.padInfo.top,B=E-1-p.padInfo.left,P=D/R;for(let e=0;e<C;++e)for(let t=0;t<R;++t)for(let n=0;n<A;++n){const s=n-z,r=Math.max(0,Math.ceil(s/L)),a=Math.min(_,(T+s)/L);for(let i=0;i<F;++i){const o=i-B,l=Math.max(0,Math.ceil(o/M)),u=Math.min(O,(E+o)/M);let c=0;for(let n=r;n<a;++n){const r=n*L-s;for(let s=l;s<u;++s){const a=w*e+v*n+k*s,i=S*(T-1-r)+N*(E-1-(s*M-o))+$*t;for(let e=0;e<P;++e)c+=y[a+(t*P+e)]*I[i+e]}}g[m*e+b*n+x*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Hv={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=O(s.shape),a=n.data.get(s.dataId).values,i=Na([r,r],s.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*r+e]=a[e];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},jv={kernelName:lt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:b,outWidth:x,padInfo:y,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:$}=vi(s.shape,r.shape,a,i,"NHWC",o),C=O($),T=$.length,E=H(s.dtype,C);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*w-y.top;for(let a=0;a<x;++a){const i=a*v-y.left;for(let o=0;o<m;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*S;if(a>=0&&a<f)for(let n=0;n<I;++n){const p=i+n*N;if(p>=0&&p<g){const i=oe([e,a,p,o],c,ee(s.shape)),f=oe([t,n,o],d,ee(r.shape)),g=u[i]+h[f];g>l&&(l=g)}}}E[oe([e,t,a,o],T,ee($))]=l}}}return{dataId:l.write(Ys(E,s.dtype),$,s.dtype),shape:$,dtype:s.dtype}}},qv={kernelName:ct,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=ne(s.shape,u.data.get(s.dataId).values),h=ne(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:x,strideHeight:y,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=vi(s.shape,r.shape,i,o,"NHWC",l);A(a.rank===N.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const $=ne(N,u.data.get(a.dataId).values),C=ae(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<m;++t){const n=t*y-x.top;for(let s=0;s<b;++s){const r=s*w-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<v;++t){const s=n+t*I;if(s>=0&&s<p)for(let n=0;n<k;++n){const u=r+n*S;if(u>=0&&u<f){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=t,l=n)}}}C[o][l][a]+=$[e][t][s][a]}}}return{dataId:u.write(Ys(C,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Kv={kernelName:ut,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=ne(s.shape,u.data.get(s.dataId).values),h=ne(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:x,strideHeight:y,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=vi(s.shape,r.shape,i,o,"NHWC",l);A(a.rank===N.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const $=ne(N,u.data.get(a.dataId).values),C=ae(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<m;++t){const n=t*y-x.top;for(let s=0;s<b;++s){const r=s*w-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let t=0;t<v;++t){const s=n+t*I;if(s>=0&&s<p)for(let n=0;n<k;++n){const u=r+n*S;if(u>=0&&u<f){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=s,l=u)}}}C[e][o][l][a]+=$[e][t][s][a]}}}return{dataId:u.write(Ys(C,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Xv=Xy(((e,t)=>e*t)),Yv=bw(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),Zv=mw(on,Xv,Yv),Jv={kernelName:on,backendName:"cpu",kernelFunc:Zv};function Qv(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;let o;zy(r,"sum"),o="bool"===r.dtype?fw({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Hy({inputs:{x:r},backend:n});const l=o.shape.length,u=U(a,o.shape),c=Bo(u,l);let h=u,d=o;null!=c&&(d=Ow({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Wo(h.length,l)),zo("sum",h,d.shape.length);const[p,f]=Lo(d.shape,h);let g=cw(n,p,vr(d.dtype,"int32"));const m=O(f),b=n.data.get(g.dataId).values,x=n.data.get(d.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=0;for(let e=0;e<m;++e)n+=x[t+e];b[e]=n}if(i){const e=g;g=kw({inputs:{x:g},backend:n,attrs:{shape:Mo(g.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),g}const ek={kernelName:qn,backendName:"cpu",kernelFunc:Qv},tk={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=Nc(r,a.length);Cc(i.length,l,a);const{path:u,steps:c}=Tc(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=$c(p,l[t]);let r;Ec(e)?r=a[t]:(r=Ow({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);L(r.shape,i)||(r=kw({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=Zv({inputs:{a:r,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=Qv({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},nk={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;zy([s,r],"eluGrad");const a=new Float32Array(O(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",a)}},sk=Xy(((e,t)=>e===t?1:0)),rk=mw(mt,sk,null,"bool"),ak={kernelName:mt,backendName:"cpu",kernelFunc:rk},ik=cc,ok=hc,lk=dc,uk=pc,ck=fc,hk=gc,dk=Wy(gt,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+ik*n);return t*(1-((((hk*s+ck)*s+uk)*s+lk)*s+ok)*s*Math.exp(-n*n))})),pk={kernelName:gt,backendName:"cpu",kernelFunc:dk},fk=sw((e=>Math.exp(e))),gk=Uy(bt,fk,"float32"),mk={kernelName:bt,backendName:"cpu",kernelFunc:gk};function bk(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(A(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),kw({inputs:{x:r},backend:n,attrs:{shape:o}})}const xk={kernelName:xt,backendName:"cpu",kernelFunc:bk},yk=sw((e=>Math.expm1(e))),wk=Uy(yt,yk),vk={kernelName:yt,backendName:"cpu",kernelFunc:wk},kk=Xy(((e,t)=>e/t)),Ik=mw(ht,kk),Sk={kernelName:ht,backendName:"cpu",kernelFunc:Ik},Nk=Xy(((e,t)=>e-t)),$k=bw(((e,t,n,s)=>({real:e-n,imag:t-s}))),Ck=mw(ls,Nk,$k),Tk={kernelName:ls,backendName:"cpu",kernelFunc:Ck};function Ek(e,t,n){const s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,a],c=O(u),h=G("float32",c),d=G("float32",c);for(let e=0;e<r;e++){const s=ov({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),r=ov({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=lw({inputs:{real:s,imag:r},backend:n}),{real:u,imag:c}=Rk(i,t,n),p=mc(u,c);for(let t=0;t<a;t++){const n=wc(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),g=lw({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function Rk(e,t,n){const s=O(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((o=s)&o-1)){const r=Ak(a,i,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),a=n.makeTensorInfo([],"float32",Xs(s,"float32")),i=Hy({inputs:{x:a},backend:n}),l=Sk.kernelFunc({inputs:{a:e,b:a},backend:n}),u=Sk.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}{const e=function(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let a=0,i=0;for(let s=0;s<t;s++){const o=Ic(r*s,t,n),l=wc(e,s);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),vc(s,a,i,r)}return s}(mc(a,i),s,t);return bc(e)}var o}function Ak(e,t,n,s,r){if(1===n)return{real:e,imag:t};const a=mc(e,t),i=n/2,o=xc(a),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=lw({inputs:{real:h,imag:d},backend:r}),f=yc(a),g=f.real,m=f.imag,b=[g.length],x=r.makeTensorInfo(b,"float32",g),y=r.makeTensorInfo(b,"float32",m),w=lw({inputs:{real:x,imag:y},backend:r}),v=Ak(l,u,i,s,r),k=v.real,I=v.imag,S=[k.length],N=r.makeTensorInfo(S,"float32",k),$=r.makeTensorInfo(S,"float32",I),C=lw({inputs:{real:N,imag:$},backend:r}),T=Ak(g,m,i,s,r),E=T.real,R=T.imag,A=[E.length],F=r.makeTensorInfo(A,"float32",E),D=r.makeTensorInfo(A,"float32",R),_=lw({inputs:{real:F,imag:D},backend:r}),O=kc(n,s),L=[O.real.length],M=r.makeTensorInfo(L,"float32",O.real),z=r.makeTensorInfo(L,"float32",O.imag),B=lw({inputs:{real:M,imag:z},backend:r}),P=Zv({inputs:{a:B,b:_},backend:r}),W=ww({inputs:{a:C,b:P},backend:r}),U=Ck({inputs:{a:C,b:P},backend:r}),V=hw({inputs:{input:W},backend:r}),G=hw({inputs:{input:U},backend:r}),H=vv({inputs:{input:W},backend:r}),j=vv({inputs:{input:U},backend:r}),q=Iv({inputs:[V,G],backend:r,attrs:{axis:0}}),K=Iv({inputs:[H,j],backend:r,attrs:{axis:0}}),X=r.data.get(q.dataId).values,Y=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const Fk={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=O(s.shape),a=s.shape[s.shape.length-1],i=kw({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=Ek(i,!1,n),l=kw({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function Dk(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||Z(r),o=H(i,O(s));return function(e,t,n){e.fill(t)}(o,r),t.makeTensorInfo(s,i,o)}const _k={kernelName:vt,backendName:"cpu",kernelFunc:Dk},Ok={kernelName:kt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,a=G(s.dtype,O(s.shape)),[i,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const s=e*u;for(let r=0;r<u;r++){const i=Math.round(l-e-1),o=t+n+s+r;let h=c[o];i>=0&&i<l&&(h=c[t+n+i*u+r]),a[o]=h}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Lk=sw((e=>Math.floor(e))),Mk=Uy(It,Lk),zk={kernelName:It,backendName:"cpu",kernelFunc:Mk},Bk=Xy(((e,t)=>Math.floor(e/t))),Pk=mw(St,Bk,null,"int32"),Wk={kernelName:St,backendName:"cpu",kernelFunc:Pk},Uk={kernelName:Is,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=Nv({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=kw({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});g=ww({inputs:{a:g,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else g=ww({inputs:{a:g,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=g;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=kw({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});g=ow(n,g,p,e,f),n.disposeIntermediateTensorInfo(e)}else g=ow(n,g,p,o,f);n.disposeIntermediateTensorInfo(e)}return g}},Vk={kernelName:Ss,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=Wv({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;g=ww({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=ow(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}};function Gk(e,t,n,s,r,a,i,o,l){const u=Na([s,a],n);for(let n=0;n<s;n++){const s=[];let c=0;for(let t=0;t<r;t++){const a=e[n*r+t];c+=a*i[t],s.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${s} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}const Hk={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=O(s.shape),i=r.shape,o=i[i.length-1],[l,u,c,h]=rc(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const d=Gk(n.data.get(r.dataId).values,n.bufferSync(s),s.dtype,u,o,c,h,s.shape,a);return n.makeTensorInfo(l,s.dtype,d.values)}};function jk(e,t,n){const s=Na(n,e.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),a=r[0],i=r[2],o=t.locToIndex([a,i]);r[2]=t.values[o];const l=e.locToIndex(r);0<=l&&l<e.values.length&&(s.values[n]=e.values[l])}return s}const qk={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;zy([r,a],"gatherV2");const l=U(i,r.shape)[0],u=n.data.get(a.dataId).values,c=r.shape[l];for(let e=0;e<u.length;++e){const t=u[e];A(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=O(a.shape),p=jc(r,a,l,h),f=kw({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=kw({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),m=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],b=n.bufferSync(g),x=jk(n.bufferSync(f),b,m);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(p.outputShape,x.dtype,x.values)}},Kk=Xy(((e,t)=>e>t?1:0)),Xk=mw(Tt,Kk,null,"bool"),Yk={kernelName:Tt,backendName:"cpu",kernelFunc:Xk},Zk=Xy(((e,t)=>e>=t?1:0)),Jk=mw(Et,Zk,null,"bool"),Qk={kernelName:Et,backendName:"cpu",kernelFunc:Jk},eI={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=O(s.shape),a=s.shape[s.shape.length-1],i=kw({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=Ek(i,!0,n),l=kw({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},tI=Wy(Dt,(e=>Number.isFinite(e)?1:0),"bool"),nI={kernelName:Dt,backendName:"cpu",kernelFunc:tI},sI=Wy(_t,(e=>Math.abs(e)===1/0?1:0),"bool"),rI={kernelName:_t,backendName:"cpu",kernelFunc:sI},aI=Wy(Ot,(e=>Number.isNaN(e)?1:0),"bool"),iI={kernelName:Ot,backendName:"cpu",kernelFunc:aI},oI=Xy(((e,t)=>e<t?1:0)),lI=mw(Mt,oI,null,"bool"),uI={kernelName:Mt,backendName:"cpu",kernelFunc:lI},cI=Xy(((e,t)=>e<=t?1:0)),hI=mw(zt,cI,null,"bool"),dI={kernelName:zt,backendName:"cpu",kernelFunc:hI};function pI(e,t,n){const s=(t-e)/(n-1),r=re(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+s;return r}const fI={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=pI(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},gI=sw((e=>Math.log(e))),mI=Uy(Pt,gI),bI={kernelName:Pt,backendName:"cpu",kernelFunc:mI},xI=Wy(Wt,(e=>Math.log1p(e))),yI={kernelName:Wt,backendName:"cpu",kernelFunc:xI},wI=Xy(((e,t)=>e&&t)),vI=mw(Ut,wI,null,"bool"),kI={kernelName:Ut,backendName:"cpu",kernelFunc:vI},II=Wy(Vt,(e=>e?0:1),"bool"),SI={kernelName:Vt,backendName:"cpu",kernelFunc:II},NI=Xy(((e,t)=>e||t)),$I=mw(Gt,NI,null,"bool"),CI={kernelName:Gt,backendName:"cpu",kernelFunc:$I},TI={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s;zy(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,d=O(r.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const s=e-t+Math.min(t+a,c);let r=0;for(;n<=s;n++){const e=h[n];r+=e*e}return r}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);p[e]=n}return n.makeTensorInfo(r.shape,r.dtype,p)}},EI={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s;zy(i,"LRNGrad");const h=O(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,g=n.data.get(a.dataId).values,m=new Float32Array(h),b=h;for(let e=0;e<b;e++){const t=e%d,n=e-t+Math.max(0,t-o),s=e-t+Math.min(d,t+o+1);let r=0;for(let e=n;e<s;e++)r+=Math.pow(f[e],2);r=u*r+l;for(let t=n;t<s;t++){let n=-2*u*c*f[t]*g[e]/r;e===t&&(n+=Math.pow(r,-c)),n*=p[e],m[t]+=n}}return n.makeTensorInfo(i.shape,r.dtype,m)}};function RI(e,t,n,s){const r=G(s,O(n));for(let n=0;n<r.length;++n){const s=n*t;let a=e[s];for(let n=0;n<t;++n){const t=e[s+n];(Number.isNaN(t)||t>a)&&(a=t)}r[n]=a}return r}function AI(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n;let l=r.shape;const u=l.length,c=U(a,l);let h=c;const d=Bo(h,u);let p=o.data.get(r.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=_w(p,l,r.dtype,d,e),h=Wo(h.length,u),l=e}zy(r,"max"),zo("max",h,u);const[f,g]=Lo(l,h),m=RI(p,O(g),f,r.dtype),b=o.write(m,f,r.dtype);let x=f;return i&&(x=Mo(f,c)),{dataId:b,shape:x,dtype:r.dtype}}const FI={kernelName:qt,backendName:"cpu",kernelFunc:AI},DI=Xy(((e,t)=>Math.max(e,t))),_I=mw(Kt,DI),OI={kernelName:Kt,backendName:"cpu",kernelFunc:_I},LI={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;zy(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;A(Fi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ki(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&L(u.inShape,u.outShape))c=Hy({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=ee(r.shape),s=Jw(e,r.shape,r.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},MI={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;zy(r,"maxPool3d");const c=Ii(r.shape,a,i,1,o,l,u),h=ev(n.data.get(r.dataId).values,r.shape,r.dtype,ee(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},zI={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;zy([r,a],"maxPool3DGrad");const c=Ii(a.shape,i,o,1,l,u),h=function(e,t){const n=Na(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let b=0;b<t.outDepth;++b){const x=b*s-d;let y=x;for(;y<0;)y+=i;const w=Math.min(t.inDepth,u+x);for(let s=0;s<t.outHeight;++s){const u=s*r-p;let d=u;for(;d<0;)d+=o;const v=Math.min(t.inHeight,c+u);for(let r=0;r<t.outWidth;++r){const p=r*a-f;let k=p;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=y;t<w;t+=i){const n=t-x;for(let s=d;s<v;s+=o){const r=s-u;for(let a=k;a<I;a+=l){const i=a-p,o=e.get(g,t,s,a,m);o>=S&&(S=o,N=n*c*h+r*c+i)}}}n.set(N,g,b,s,r,m)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,g=c.dilationDepth,m=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,y=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=x-1-c.padInfo.front,k=w-1-c.padInfo.left,I=y-1-c.padInfo.top,S=Na(a.shape,"float32"),N=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-v,i=s-I,o=r-k;let l=0;for(let n=0;n<x;n+=g){const s=(a+n)/d;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let r=0;r<y;r+=m){const a=(i+r)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<w;i+=b){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=x*y*w-1-h.get(e,s,a,u,t)===n*y*w+r*w+i?1:0;0!==d&&(l+=N.get(e,s,a,u,t)*d)}}}S.set(l,e,n,s,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},BI={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;zy([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=ki(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Na(d.outShape,o.dtype,Qw(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,y=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=y-1-d.padInfo.top,I=Na(o.shape,"float32"),S=n.data.get(r.dataId).values,N=Na(r.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let s=0;s<d.inWidth;++s){const r=n-k,a=s-v;let i=0;for(let n=0;n<y;n+=b){const s=(r+n)/g;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let r=0;r<w;r+=x){const o=(a+r)/m;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=y*w-1-f.get(e,s,o,t)===n*w+r?1:0;0!==l&&(i+=N.get(e,s,o,t)*l)}}I.set(i,e,n,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},PI={kernelName:Qt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;zy(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=ki(s.shape,r,a,[1,1],i),[h,d]=function(e,t,n,s,r){const a=Jw(e,0,n,ee(t),r,"max"),i=Qw(e,t,n,r,!0,s);return[a.values,i.values]}(u,s.shape,s.dtype,o,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},WI={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=U(a,r.shape),l=O(Lo(r.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=fw({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=Ik({inputs:{a:h,b:c},backend:n});u.push(d);const p=Qv({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},UI={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;zy(r,"min");const o=U(a,r.shape);let l=o;const u=Bo(l,r.shape.length);let c=r;null!=u&&(c=Ow({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Wo(l.length,r.shape.length)),zo("min",l,c.shape.length);const[h,d]=Lo(c.shape,l),p=O(d),f=re(O(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const s=g[t+e];(Number.isNaN(s)||s<n)&&(n=s)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=kw({inputs:{x:m},backend:n,attrs:{shape:Mo(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},VI=Xy(((e,t)=>Math.min(e,t))),GI=mw(nn,VI),HI={kernelName:nn,backendName:"cpu",kernelFunc:GI},jI={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;zy(r,"mirrorPad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=ee(r.shape),f=O(o),g=o.length,m=ee(o),b=G(r.dtype,f);for(let e=0;e<f;e++){let t=le(e,g,m);for(let e=0;e<g;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=oe(t,d,p);b[e]=h[n]}return{dataId:n.write(b,o,r.dtype),shape:o,dtype:r.dtype}}},qI=Xy(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),KI=mw(rn,qI),XI={kernelName:rn,backendName:"cpu",kernelFunc:KI};function YI(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=U([o],r.shape),u=AI({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Mo(u.shape,l),h=kw({inputs:{x:u},backend:n,attrs:{shape:c}}),d=Ck({inputs:{a:r,b:h},backend:n}),p=gk({inputs:{x:d},backend:n}),f=Qv({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),g=kw({inputs:{x:f},backend:n,attrs:{shape:c}}),m=Ik({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const ZI={kernelName:Yn,backendName:"cpu",kernelFunc:YI},JI={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;zy(r,"multinomial");const l=o?r:YI({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,a],p=re(O(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const s=Jo.alea(i.toString()),r=e*a;for(let e=0;e<a;++e){const t=s();p[r+e]=n.length;for(let s=0;s<n.length;s++)if(t<n[s]){p[r+e]=s;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function QI(e,t,n){const s=Xs(-1,n);return Xv([],t,s,e,n)}const eS={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;zy(s,"neg");const r=n.data.get(s.dataId).values,[a,i]=QI(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}},tS=su,nS={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;zy(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=tS(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},sS=ru,rS={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;zy(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=sS(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},aS=au,iS={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;zy(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=aS(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},oS=Xy(((e,t)=>e!==t?1:0)),lS=mw(un,oS,null,"bool"),uS={kernelName:un,backendName:"cpu",kernelFunc:lS},cS={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:a,depth:i,onValue:o,offValue:l}=s;zy(r,"oneHot");const u=O(r.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(r.dataId).values;for(let e=0;e<u;++e)h[e]>=0&&h[e]<i&&(c[e*i+h[e]]=o);return n.makeTensorInfo([...r.shape,i],a,c)}};function hS(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=hw({inputs:{input:s},backend:n}),t=hS({inputs:{x:e},backend:n}),r=vv({inputs:{input:s},backend:n}),a=hS({inputs:{x:r},backend:n}),i=lw({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return Dk({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const dS={kernelName:xs,backendName:"cpu",kernelFunc:hS},pS={kernelName:pn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=hw({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=vv({inputs:{input:r},backend:s}),i=hS({inputs:{x:a},backend:s}),o=lw({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return Dk({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function fS(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return bk({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{F(a,e.shape,"All tensors passed to stack must have matching shapes"),A(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=Iv({inputs:t.map((e=>{const t=bk({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const gS={kernelName:gn,backendName:"cpu",kernelFunc:fS},mS={kernelName:mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;zy(r,"pad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(r.dataId).values,c=O(r.shape),h=r.shape.length,d=ee(r.shape),p=O(o),f=o.length,g=ee(o),m=G(r.dtype,p);0!==i&&m.fill(i);for(let e=0;e<c;e++)m[oe(le(e,h,d).map(((e,t)=>e+l[t])),f,g)]=u[e];return{dataId:n.write(m,o,r.dtype),shape:o,dtype:r.dtype}}},bS=Xy(((e,t)=>Math.pow(e,t))),xS=mw(bn,bS),yS={kernelName:bn,backendName:"cpu",kernelFunc:xS};function wS(e,t,n,s){const[r,a]=Lo(e,s),i=vr(t,"int32"),o=re(O(r),i),l=O(a);for(let e=0;e<o.length;++e){const t=e*l;let s=1;for(let e=0;e<l;++e)s*=n[t+e];o[e]=s}return{outVals:o,outShape:r,outDtype:i}}const vS={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;zy(r,"prod");const o=r.shape.length,l=U(a,r.shape),u=Bo(l,o);let c=l,h=r;const d=[];null!=u&&(h=Ow({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(h),c=Wo(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=wS(h.shape,h.dtype,p,c);let b=g;return i&&(b=Mo(g,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,m,f)}};function kS(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let s=t;s<e.length;s++)n[t-1]*=e[s];return n}function IS(e,t,n,s,r,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const r=le(s,t.length,ee(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===s.length)throw new Error("params.rank must be nonzero");const l=s[0],{outSplits:u,valueSlices:c,numValues:h}=function(e,t,n,s){const r=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const s=e[n],r=n===e.length-1?t:e[n+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<s.length;++e)if(s[e-1]>s[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,s);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let s=0;s<e.length;++s){let i=e[s],l=e[s]+1;for(let e=0;e<n.length;++e){const s=n[e],r=e+t.length-1;if(r>=0){const e=o[r],t=e[e.length-1]-s[i];for(let e=i;e<l;++e)o[r].push(s[e+1]+t)}i=s[i],l=s[l]}l!==i&&(r.push([i,l]),a+=l-i)}return{outSplits:o,valueSlices:r,numValues:a}}(a,i,e,l),d=function(e){const t=[];for(let n=0;n<e.length;++n){const s=H("int32",e[n].length);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}(u),p=function(e,t,n,s,r){const a=t.slice();a[0]=r;const i=H(n,O(a)),o=e.length;return function(e,t,n,s,r,a){const i=kS(t,2)[1],o=kS(a,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<s;++t)r[l*o+t]=e[n*i+t];++l}}(e,t,s,0===o?0:o/t[0],i,a),[i,a]}(n,s,r,c,h);return[d,p[0],p[1]]}const SS={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=s,l=r.map((e=>n.data.get(e.dataId).values)),u=r.map((e=>e.shape)),c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,[d,p,f]=IS(l,u,c,a.shape,a.dtype,h,i.shape),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,a.dtype,p);return g.concat([m])}};function NS(e,t,n,s,r,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===r.length,u=0===i.length,c=[];o||c.push(t[0]),l||c.push(r[0]),u||c.push(i[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=H("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],r=l?s[0]:s[t],i=u?a[0]:a[t];if(0===i)throw new Error("Requires delta != 0");let c;if(i>0&&r<n||i<0&&r>n)c=0;else if(c=Math.ceil(Math.abs((r-n)/i)),c>2147483647)throw new Error("Requires ((limit - start) / delta) <= 2147483647");d[t+1]=d[t]+c}const p=H(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let s=o?e[0]:e[t];const r=u?a[0]:a[t];for(let e=0;e<n;++e)p[f++]=s,s+=r}return[d,p]}const $S={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:a}=t,i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=NS(i,s.shape,s.dtype,o,r.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],s.dtype,c)]}};var CS=Hu;class TS{constructor(e,t,n,s,r,a,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=r,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=qu(u),this.raggedRank=Ku(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===CS.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===CS.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case CS.VALUE_ROWIDS:return TS.getMaxWidthValueRowID(t);case CS.ROW_SPLITS:return TS.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${CS[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let s=0;s<t-1;++s){const t=e[s+1]-e[s];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,s=e[0],r=0;for(let a=1;a<t;++a){const t=e[a];t!==s&&(s=t,r=Math.max(a-n,r),n=a)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return RS(e,n)}calculateOutputSize(e){const t=this.valuesShape;Xu(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=ju(this.raggedRank,n,t);s[0]<0&&(s[0]=e);for(let e=1;e<=this.raggedRank;++e)s[e]<0&&(s[e]=this.getMaxWidth(e));return s}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),r=[];let a=0;for(let e=0;e<s;++e,a+=t)r.push(a);for(let t=s;t<e;++t)r.push(-1);return A(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,s){const r=e.length,a=[];for(let i=0;i<r-1;++i){const r=e[i+1]-e[i];let o=Math.min(s,r),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)a.push(l),l+=n;for(let e=0;e<r-o;++e)a.push(-1)}if(r>0&&a.length!==e[r-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,s){const r=e.length,a=[];if(0===r)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];a.push(l);for(let u=1;u<r;++u){const r=e[u];if(r===o)l>=0&&(++i,i<s?l+=n:l=-1);else{if(i=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);l=t[r]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,s){const r=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case CS.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,s);case CS.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,s);default:throw new Error(`Unsupported partition type: ${CS[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case CS.FIRST_DIM_SIZE:return e[0];case CS.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case CS.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${CS[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const s=RS(t,!1),r=H(this.valuesDType,O(s));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,r,s)}return[s,r]}setOutput(e,t,n,s){if(0===n.length)return;const r=this.values,a=n;let i=s.slice();i=i.slice(e+1);const o=O(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;ui((()=>{const t=Oi(u,e),n=Ui(t,i);u=n.dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=l;++e){let s=e<l?t[e]:-1;if(s!==d){if(h<d){const e=r.subarray(c*o);ES(a.subarray(h*o),e,(d-h)*o)}if(e>=l){const e=n.length;s=Math.floor(e/o)}if(s>d)if(1===this.defaultValue.length)a.subarray(d*o,s*o).fill(this.defaultValue[0]),d=s;else for(;s>d;)ES(a.slice(d*o),u,o),++d;s<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function ES(e,t,n){for(let s=0;s<n;s++)e[s]=t[s]}function RS(e,t){const n=[];for(let s of e){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function AS(e,t,n,s,r,a,i,o,l,u){return new TS(e,t,n,s,r,a,i,o,l,u).compute()}const FS={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,g]=AS(u,r.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,g)}};function DS(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return re(0,s);const r=re(Math.abs(Math.ceil((t-e)/n)),s);t<e&&1===n&&(n=-1),r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+n;return r}const _S={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=DS(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}},OS=Wy(Nn,(e=>1/e)),LS={kernelName:Nn,backendName:"cpu",kernelFunc:OS},MS={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;zy(r,"resizeBilinear");const l=ee(r.shape),[u,c]=o,[h,d,p,f]=r.shape,g=n.data.get(r.dataId).values,m=new Float32Array(O([h,u,c,f])),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],x=[a&&u>1?u-1:u,a&&c>1?c-1:c];let y=0;const w=b[0]/x[0],v=b[1]/x[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?w*(t+.5)-.5:w*t;const s=Math.max(0,Math.floor(n)),r=n-s,a=Math.min(d-1,Math.ceil(n)),o=e*l[0]+s*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+a*l[2],b=u+a*l[2];for(let e=0;e<f;e++){const t=g[c+e],n=g[h+e],a=t+(g[d+e]-t)*s,i=a+(n+(g[b+e]-n)*s-a)*r;m[y++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",m)}},zS={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;zy([a,r],"resizeBilinearGrad");const o=ee(r.shape),[l,u,c,h]=r.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),g=[i&&d>1?u-1:u,i&&p>1?c-1:c],m=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=g[0]/m[0],x=g[1]/m[1],y=n.data.get(a.dataId).values;let w=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),a=t+s*o[1],i=t+r*o[1],l=n-s,d=1-l;for(let e=0;e<p;e++){const t=e*x,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),r=t-n,u=1-r,p=a+n*o[2],g=a+s*o[2],m=i+n*o[2],b=i+s*o[2],v=d*u,k=d*r,I=l*u,S=l*r;for(let e=0;e<h;e++){const t=y[w++];f[p+e]+=t*v,f[g+e]+=t*k,f[m+e]+=t*I,f[b+e]+=t*S}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},BS={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;zy(r,"resizeNearestNeighbor");const l=ee(r.shape),[u,c]=o,[h,d,p,f]=r.shape,g=n.data.get(r.dataId).values,m=new Float32Array(h*u*c*f),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],x=[a&&u>1?u-1:u,a&&c>1?c-1:c],y=b[0]/x[0],w=b[1]/x[1];let v=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?y*(e+.5):y*e;let s=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const r=t+s*l[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const s=r+n*l[2];for(let e=0;e<f;e++){const t=g[s+e];m[v++]=t}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,m)}},PS={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;zy([a,r],"resizeNearestNeighborGrad");const o=ee(r.shape),l=ee(a.shape),[u,c,h,d]=r.shape,[,p,f]=a.shape,g=new Float32Array(u*c*h*d),m=n.data.get(a.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],x=[i&&p>1?p-1:p,i&&f>1?f-1:f],y=b[0]/x[0],w=b[1]/x[1],v=1/y,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],s=Math.floor(e*v),r=Math.floor(s-I/2);for(let s=0;s<h;s++){const a=n+s*o[2],u=Math.floor(s*k),b=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<I;a++){const u=a+r;if(u<0||u>=p)continue;const d=t+u*l[1],g=u*y;if(e===Math.min(c-1,i?Math.round(g):Math.floor(g)))for(let e=0;e<S;e++){const t=e+b;if(t<0||t>=f)continue;const r=d+t*l[2],a=t*w;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=m[r+n])}}g[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,g)}},WS={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;zy(r,"reverse");const i=r.shape.length,o=U(a,r.shape);if(0===i)return Hy({inputs:{x:r},backend:n});const l=new lr(r.shape,r.dtype),u=n.bufferSync(r);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},US={kernelName:vs,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=G(s.dtype,O(s.shape)),[u,c,h,d]=s.shape,[p,f]=Ju(i,c,h),g=Math.sin(r),m=Math.cos(r),b=o.data.get(s.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let s=0;s<h;s++){const r=s*d;for(let i=0;i<d;i++){const o=[u,e,s,i],x=o[2],y=o[1];let w=(x-p)*m-(y-f)*g,v=(x-p)*g+(y-f)*m;w=Math.round(w+p),v=Math.round(v+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c&&(k=b[t+v*(h*d)+w*d+i]),l[t+n+r+i]=k}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},VS=Wy(_n,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),GS={kernelName:_n,backendName:"cpu",kernelFunc:VS},HS=sw((e=>1/Math.sqrt(e))),jS=Uy(On,HS),qS={kernelName:On,backendName:"cpu",kernelFunc:jS};function KS(e,t,n,s,r,a,i,o,l,u){const c=[s/r,r],h=e.values,d=t.values;if(0===s)return Na(n,t.dtype);const p=Na(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<r;n++)u?p.values[l*r+n]+=d[e*r+n]:p.values[l*r+n]=0===t.rank?d[0]:d[e*r+n]}return p}const XS={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=oc(0,r,i),d=KS(n.bufferSync(r),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function YS(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function ZS(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}const JS={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=function(e,t,n,s,r,a){const i=H("int32",n*r);for(let o=0;o<n;++o){const n=e.slice(o*s,(o+1)*s),l=o*r;for(let e=0;e<r;++e)i[l+e]="left"===a?YS(n,t[e+l]):ZS(n,t[e+l])}return i}(n.data.get(r.dataId).values,n.data.get(a.dataId).values,r.shape[0],r.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}},QS={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;zy([s,r,a],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=vr(r.dtype,a.dtype),h=re(O(r.shape),c);let d=0;const p=0===i||i>1||1===r.shape.length?1:O(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(r.shape,c,h)}},eN=lc,tN=uc,nN=Wy(Bn,(e=>e>=0?tN*e:eN*(Math.exp(e)-1))),sN={kernelName:Bn,backendName:"cpu",kernelFunc:nN},rN=Wy(Vn,(e=>e<0?-1:e>0?1:0)),aN={kernelName:Vn,backendName:"cpu",kernelFunc:rN},iN=Wy(Wn,(e=>Math.sin(e))),oN={kernelName:Wn,backendName:"cpu",kernelFunc:iN},lN=Wy(Un,(e=>Math.sinh(e))),uN={kernelName:Un,backendName:"cpu",kernelFunc:lN},cN=Math.log(1.1920928955078125e-7)+2,hN=Wy(Hn,(e=>{const t=e>-cN,n=e<cN,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),dN={kernelName:Hn,backendName:"cpu",kernelFunc:hN},pN={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;zy([r],"spaceToBatchND");const o=O(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=mS.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=Qu(u.shape,a,o,!1),h=ec(c.length,a.length,!1),d=tc(u.shape,a,o,!1),p=kw({inputs:{x:u},backend:n,attrs:{shape:c}}),f=Ow({inputs:{x:p},backend:n,attrs:{perm:h}}),g=kw({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}};function fN(e,t,n,s,r,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(Fc(o));return[H(n,0),[0,h],H(r,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(Dc(t,n));if(n>=l)throw new Error(_c(t,n,l));++f[n],d=d&&n>=p,p=n}let g=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,g=g&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(g&&d){const t=e,n=s;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=H(n,t*h),d=H(r,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],r=p[n],i=(0===n?0:f[n-1])+r;p[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];d[i]=s[t],c[t]=i}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}return[a,[t,h],d,u,c]}}const gN={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,g]=fN(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}};function mN(e,t,n,s,r){const a=O(s),i=t[0],o=r.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=r[e];if(-1===t){if(-1!==c)throw new Error(Oc(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(Lc(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(zc(s,l));l[c]=e}if(O(l)!==a)throw new Error(Bc(s,l));const h=s.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*s[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const f=H(n,i*o);for(let t=0;t<i;++t){let n=0;for(let s=0;s<h;++s)n+=e[t*h+s]*d[s];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],l]}const bN={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=mN(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function xN(e,t,n,s,r,a=!1,i=0){const o=s.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=H(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,g=0,m=r[p];for(;;){let t=0;if(f<o){if(t=r[f],m===t){++f;continue}if(m>=t)throw new Error("segment ids are not increasing")}if(m<0||m>=c)throw new Error(Uc(m,c));m>g&&d.fill(i,g*u,m*u);for(let t=p;t<f;++t){const n=s[t];if(n<0||n>=l[0])throw new Error(Vc(t,s[t],l[0]));for(let t=0;t<u;t++)d[m*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)d[m*u+e]/=f-p;if(p=f,++f,g=m+1,m=t,f>o)break}return g<c&&d.fill(i,g*u,c*u),[d,h]}const yN={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=xN(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}},wN={kernelName:es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=xN(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}},vN={kernelName:ts,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=oc(0,r,o),p=!1,f=n.bufferSync(r);let g;switch(a.dtype){case"bool":g=KS(f,n.bufferSync(a),o,d,c,u,l,h,Boolean(n.data.get(i.dataId).values[0]),p);break;case"float32":case"int32":g=KS(f,n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],p);break;case"string":g=KS(f,n.bufferSync(a),o,d,c,u,l,h,Qs(n.data.get(i.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,g.dtype,g.values)}},kN={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=U(i,r.shape)[0],l=Ac(r,a,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const s=ov({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,s}))}},IN=sw((e=>Math.sqrt(e))),SN=Wy(jn,(e=>Math.sqrt(e))),NN={kernelName:jn,backendName:"cpu",kernelFunc:SN},$N={kernelName:ss,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;zy(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let e=0;e<r.length;++e){const t=r[e];a[e]=t*t}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},CN=Xy(((e,t)=>{const n=e-t;return n*n})),TN=mw(ns,CN),EN={kernelName:ns,backendName:"cpu",kernelFunc:TN},RN=Wy(ys,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),AN={kernelName:ys,backendName:"cpu",kernelFunc:RN};function FN(e,t,n,s){const r=Na(e,t.dtype);for(let e=0;e<r.size;e++){const a=r.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+s[e];r.set(t.get(...i),...a)}return r}const DN={kernelName:rs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;zy(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:b,begin:x,end:y,strides:w}=ni(r.shape,a,i,o,l,u,c,h,d);let v;if(g)v=kw({inputs:{x:r},backend:n,attrs:{shape:f}});else if(m||b){A(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=Va(x,y,w),t=ov({inputs:{x:r},backend:n,attrs:{begin:x,size:e}});v=kw({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=FN(p,n.bufferSync(r),w,x);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}};class _N{constructor(e,t,n,s,r,a){this.separator=Js(e),this.nGramWidths=t,this.leftPad=Js(n),this.rightPad=Js(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(r-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[s+i]=new Uint8Array(d);const p=n[s+i];let f=0;const g=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)g(this.leftPad),g(this.separator);for(let t=0;t<c-1;++t)g(e[h+t]),g(this.separator);if(c>0){g(e[h+c-1]);for(let e=0;e<u;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<u-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=s-1,a=H("int32",s);if(0===n||0===s){const e=new Array(n);for(let e=0;e<=r;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=r;++e){const n=t[e]-t[e-1];let s=0;this.nGramWidths.forEach((e=>{s+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===s&&(s=1),a[e]=a[e-1]+s}const i=new Array(a[r]);for(let n=0;n<r;++n){const s=t[n];let r=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,s,i,r,l,a),r+=l})),this.preserveShort&&r===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(e,s,i,r,l,o)}}return[i,a]}}function ON(e,t,n,s,r,a,i,o){return new _N(n,s,r,a,i,o).compute(e,t)}const LN={kernelName:as,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,g]=ON(d,p,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}};function MN(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let a=e.indexOf(r);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||s.push(t),a=(e=e.subarray(a+1)).indexOf(r)}return void(n&&0===e.length||s.push(e))}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(r,a);n&&0===t.length||s.push(t),r=a+1}}function zN(e,t,n){const s=e.length,r=[];let a=0,i=0;const o=new Array(s);for(let l=0;l<s;++l){const s=r.length;MN(e[l],t,n,r);const u=r.length-s;o[l]=u,a+=u,i=Math.max(i,u)}const l=H("int32",2*a),u=new Array(a),c=[s,i];let h=0;for(let e=0;e<s;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=r[h],++h;return[l,u,c]}const BN={kernelName:is,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=zN(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function PN(e,t){const n=H("int32",e.length);for(let s=0;s<e.length;++s)n[s]=Ks(e[s]).modulo(t).getLowBitsUnsigned();return n}const WN={kernelName:os,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=PN(n.data.get(a.dataId).values,r);return n.makeTensorInfo(a.shape,"int32",i)}},UN=Wy(us,(e=>Math.tan(e))),VN={kernelName:us,backendName:"cpu",kernelFunc:UN},GN=Wy(cs,(e=>Math.tanh(e)));function HN(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const s=Na(n,e.dtype);for(let t=0;t<s.values.length;++t){const n=s.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const a=e.locToIndex(r);s.values[t]=e.values[a]}return s}const jN=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function qN(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){const r=s-n+1,a=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(a-r/2);qN(e,t,Math.max(n,Math.floor(t-a*o/r+l)),Math.min(s,Math.floor(t+(r-a)*o/r+l)))}const r=e[t];let a=n,i=s;for(R(e,n,t),jN(e[s],r)>0&&R(e,n,s);a<i;){for(R(e,a,i),a++,i--;jN(e[a],r)<0;)a+=1;for(;jN(e[i],r)>0;)i-=1}0===jN(e[n],r)?R(e,n,i):(i+=1,R(e,i,s)),i<=t&&(n=i+1),t<=i&&(s=i-1)}}function KN(e,t,n,s,r){const a=t[t.length-1],[i,o]=[e.length/a,a],l=G(n,i*s),u=G("int32",i*s);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),s<i.length&&(qN(i,s),i=i.slice(0,s)),r&&i.sort(jN);const c=t*s,h=l.subarray(c,c+s),d=u.subarray(c,c+s);for(let e=0;e<s;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=s,[Na(c,n,l),Na(c,"int32",u)]}const XN={kernelName:ps,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],b=ee(r.shape),x=b[0],y=b[1],w=b[2],v=ee(m),k=v[0],I=v[1],S=v[2],N=G(r.dtype,O(m));N.fill(l);const $=s.data.get(r.dataId).values,C=s.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?C:C.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let s=0;s<g;++s)for(let r=0;r<p;++r){let a;const u=t[6]*s+t[7]*n+1;if(0===u)continue;const c=(t[0]*s+t[1]*n+t[2])/u,p=(t[3]*s+t[4]*n+t[5])/u,f=YN(c,d,o),g=YN(p,h,o);switch(i){case"nearest":a=JN($,h,d,x,y,w,e,g,f,r,l);break;case"bilinear":a=QN($,h,d,x,y,w,e,g,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}N[e*k+n*I+s*S+r]=a}return s.makeTensorInfo(m,r.dtype,N)}return{dataId:s.write(N,m,r.dtype),shape:r.shape,dtype:r.dtype}}};function YN(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return T(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return T(0,n,t-1)}(e,t);case"nearest":return function(e,t){return T(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function ZN(e,t,n,s,r,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*s+o*r+l*a+u]:c}function JN(e,t,n,s,r,a,i,o,l,u,c){return ZN(e,t,n,s,r,a,i,Math.round(o),Math.round(l),u,c)}function QN(e,t,n,s,r,a,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*ZN(e,t,n,s,r,a,i,h,d,u,c)+(l-d)*ZN(e,t,n,s,r,a,i,h,f,u,c))+(o-h)*((f-l)*ZN(e,t,n,s,r,a,i,p,d,u,c)+(l-d)*ZN(e,t,n,s,r,a,i,p,f,u,c))}function e$(e,t,n,s){const r=U(t,n)[0],a=[1,n[0],1];for(let e=0;e<r;e++)a[0]*=n[e];a[1]=n[r];for(let e=r+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[r]),l=new lr(a,s,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[r];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)e.push(l.get(n,t,s));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const d=new lr(h,s);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)d.set(l.get(n,e,s),n,t,s)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const t$={kernelName:bs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;zy(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=bk({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=Xs(e,"int32"),s=n.makeTensorInfo([],"int32",t),a=rk({inputs:{a:s,b:c},backend:n}),i=fw({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=Zv({inputs:{a:i,b:r},backend:n}),h=Qv({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(s),l.push(a),l.push(i),l.push(u),l.push(h)}const h=fS({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},n$=[$w,Tw,Rw,Fw,vw,Dw,Mw,zw,Bw,Pw,Uw,Gw,jw,Xw,Zw,tv,nv,sv,rv,Nw,av,uv,dv,pv,gw,mv,xv,uw,yv,Sv,$v,Cv,Tv,Ev,Rv,Av,Dv,Ov,Lv,Mv,zv,Bv,Pv,Uv,Vv,Gv,Hv,jv,qv,Kv,tk,Gy,nk,ak,pk,mk,xk,vk,Fk,_k,Ok,zk,Wk,Uk,Vk,Hk,qk,Yk,Qk,jy,eI,kv,nI,rI,iI,Ky,uI,dI,fI,bI,yI,kI,SI,CI,TI,EI,FI,OI,LI,MI,zI,BI,PI,WI,UI,HI,jI,XI,JI,Jv,eS,nS,rS,iS,uS,cS,pS,gS,mS,yS,Jy,vS,SS,$S,FS,_S,dw,Sk,LS,ew,nw,Iw,MS,zS,BS,PS,WS,US,GS,qS,XS,JS,QS,sN,iw,aN,oN,uN,lv,ZI,dN,pN,gN,bN,yN,wN,vN,kN,NN,$N,EN,AN,DN,LN,BN,WN,Tk,ek,VN,{kernelName:cs,backendName:"cpu",kernelFunc:GN},{kernelName:hs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;zy(r,"tile");const i=HN(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:ds,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;zy(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=KN(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},XN,Lw,{kernelName:gs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;zy(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=e$(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},{kernelName:ms,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=r.shape[e]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=ov({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[e]=kw({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},t$,dS];for(const e of n$)Fs(e);const s$={},r$={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function a$(e,t){if(!(e in s$)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete s$[e]}),!1),de().getBool("SOFTWARE_WEBGL_ENABLED")&&(r$.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",r$)||n.getContext("experimental-webgl",r$):n.getContext("webgl2",r$)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;s$[e]=n}const n=s$[e];return null==n||n.isContextLost()?(delete s$[e],a$(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),s$[e])}var i$,o$,l$;function u$(e,t){return[t,e]}function c$(e){const t=O(e);return z(Math.ceil(t/4))}function h$(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function d$(e,t){const n=e;let s,r,a,i,o,l,u,c,h,d;return 2===de().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function p$(e,t){const n=t();return de().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function f$(e){return!!(de().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function g$(e,t){return S$(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(i$||(i$={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(o$||(o$={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(l$||(l$={}));const m$=/ERROR: [0-9]+:([0-9]+):/g;function b$(e,t){const n=m$.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],r=e.split("\n"),a=r.length.toString().length+2,i=r.map(((e,t)=>B((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${B(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function x$(e,t){if(p$(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function y$(e,t,n,s,r,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(p$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),p$(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i))),p$(e,(()=>e.enableVertexAttribArray(o))),!0)}function w$(e,t,n,s){p$(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),p$(e,(()=>e.activeTexture(e.TEXTURE0+n))),p$(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,s))),p$(e,(()=>e.uniform1i(n,s)))}function v$(e,t,n){p$(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),p$(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function k$(e,t){p$(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),p$(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function I$(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function S$(e,t,n){const s=p$(e,(()=>t()));if(null==s)throw new Error(n);return s}function N$(e,t=2){return O(e.slice(0,e.length-t))}function $$(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function C$(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[N$(e),...$$(e)]),t}function T$(e){return e%2==0}function E$(e,t){if(L(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s)return!0;if(T$(n)&&T$(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&T$(e[0])&&T$(t[0])}let R$,A$;function F$(e,t){return null!=e.getExtension(t)}function D$(e){try{if(null!=a$(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function _$(e){const t=d$(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function O$(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&A("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const L$=de();function M$(){let e,t,n,s,r,a,i,o,l,u;return 2===de().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o=de().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function z$(e,t,n="index"){const s=ee(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function B$(e,t,n="index"){const s=ee(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function P$(e){const t=ee(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}L$.registerFlag("HAS_WEBGL",(()=>L$.getNumber("WEBGL_VERSION")>0)),L$.registerFlag("WEBGL_VERSION",(()=>D$(2)?2:D$(1)?1:0)),L$.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),L$.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===L$.get("WEBGL_VERSION"))),L$.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),L$.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),L$.registerFlag("WEBGL_PACK",(()=>L$.getBool("HAS_WEBGL"))),L$.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>L$.getBool("WEBGL_PACK"))),L$.registerFlag("WEBGL_PACK_CLIP",(()=>L$.getBool("WEBGL_PACK"))),L$.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>L$.getBool("WEBGL_PACK"))),L$.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>L$.getBool("WEBGL_PACK"))),L$.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>L$.getBool("WEBGL_PACK"))),L$.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>L$.getBool("WEBGL_PACK"))),L$.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>L$.getBool("WEBGL_PACK"))),L$.registerFlag("WEBGL_PACK_REDUCE",(()=>L$.getBool("WEBGL_PACK"))),L$.registerFlag("WEBGL_LAZILY_UNPACK",(()=>L$.getBool("WEBGL_PACK"))),L$.registerFlag("WEBGL_CONV_IM2COL",(()=>L$.getBool("WEBGL_PACK"))),L$.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==R$){const t=a$(e);R$=t.getParameter(t.MAX_TEXTURE_SIZE)}return R$}(L$.getNumber("WEBGL_VERSION")))),L$.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==A$){const t=a$(e);A$=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,A$)}(L$.getNumber("WEBGL_VERSION")))),L$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=L$.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=a$(e);return t=F$(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:F$(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),L$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>L$.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Dr())),L$.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=a$(e);if(1===e){if(!F$(t,"OES_texture_float"))return!1}else if(!F$(t,"EXT_color_buffer_float"))return!1;return _$(t)}(L$.getNumber("WEBGL_VERSION")))),L$.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!L$.getBool("WEBGL_FORCE_F16_TEXTURES")&&L$.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),L$.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=a$(e);if(1!==e){if(F$(t,"EXT_color_buffer_float"))return _$(t);const e="EXT_color_buffer_half_float";if(F$(t,e)){const n=t.getExtension(e);return function(e,t){const n=d$(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(r),a}(t,n)}return!1}return!!F$(t,"OES_texture_float")&&!!F$(t,"WEBGL_color_buffer_float")&&_$(t)}(L$.getNumber("WEBGL_VERSION")))),L$.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=L$.getNumber("WEBGL_VERSION"))&&null!=a$(e).fenceSync;var e})),L$.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>L$.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),L$.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),L$.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Dr()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),L$.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),L$.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),L$.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),L$.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),L$.registerFlag("WEBGL_EXP_CONV",(()=>!1)),L$.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>L$.getBool("IS_TEST"))),L$.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),L$.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),L$.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),L$.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const W$="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:U$}=s;function V$(e,t,n){const s=[];if(e.forEach((e=>{const t=O(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=Q$(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`)}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=s.join("\n"),a=e.map((e=>function(e,t,n=!1,s){let r="";r+=n?H$(e,s):G$(e,s);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(r+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=U$(e.shapeInfo.logicalShape,t.logicalShape),l=J$(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===O(e.shapeInfo.logicalShape),g=1===O(t.logicalShape);if(1!==a||f||g){if(f&&!g)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&L(i,a))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=J$(l),c=U$(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}(e,t)),r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=M$(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${j$}\n    ${q$}\n    ${K$}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===s[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(L(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return L(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${B$(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const s=z$(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${B$(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const s=z$(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=z$(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=z$(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=X$),[h,l,c,r,u,a,n.userCode].join("\n")}function G$(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Y$(n);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${Z$(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Y$(n);return 1===i?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(null!=a&&L(n,a)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=V(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${G$(eC(e,l),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${tC(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Z$(e)}\n      }\n    `;const u=a[0],c=a[1],h=Y$(s);return 1===c?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=V(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${G$(eC(e,u),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${tC(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${Z$(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=Y$(s);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=V(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${G$(eC(e,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${tC(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${Z$(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,m=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const b=Y$(s);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${g}\n      ${m}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=V(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${G$(eC(e,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${tC(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${r})) +\n          depth3;\n        ${Z$(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${Y$(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=V(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${G$(eC(e,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${tC(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Z$(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${Y$(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function H$(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${M$().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=M$();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=M$();if(null!=a&&L(n,a))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const s=[1,2],a=["b","row","col"];return`\n        ${H$(eC(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${tC(a,s)});\n        }\n      `}const o=M$();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=M$();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[i-1]/2);let d=h*Math.ceil(a[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=a[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${s}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const j$="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",q$="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",K$="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",X$="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Y$(e){return`offset${e}`}function Z$(e){const t=e.name,n=O(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function J$(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Q$(e,t,n){const{newShape:s,keptDims:r}=V(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):s,l=!e&&a>1&&!L(t,n)&&s.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function eC(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function tC(e,t){return t.map((t=>e[t])).join(", ")}function nC(e,t,n){const s={},r={},a={},i=[];let o,l,u,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===de().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let i=0;i<t.variableNames.length;i++){const o=t.variableNames[i];s[o]=e.getUniformLocation(n,o,d),s[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,d),t.enableShapeUniforms&&(r[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,d),a[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,d))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),u=e.getUniformLocation(n,"outShapeStrides",d),l=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach(((t,s)=>{i[s]=e.getUniformLocation(n,t.name,d)})),{uniformLocations:s,customUniformLocations:i,infLoc:c,nanLoc:h,inShapesLocations:r,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function sC(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],a=r.shape;if(!L(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!L(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function rC(e){return de().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class aC{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=i$.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=M$();this.outputShape=e,this.enableShapeUniforms=rC(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?B$(["r","c","d"],e):z$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class iC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=i$.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=M$();this.outputShape=e,this.enableShapeUniforms=rC(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?B$(["r","c","d"],e):z$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class oC{constructor(e){this.variableNames=["A"],this.outTexUsage=o$.DOWNLOAD;const t=M$();this.outputShape=e,this.userCode=`\n      ${W$}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class lC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=o$.DOWNLOAD;const t=M$();this.outputShape=e,this.userCode=`\n      ${W$}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const uC={R:0,G:1,B:2,A:3};class cC{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=M$();this.outputShape=e,this.enableShapeUniforms=rC(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let a="";for(let e=0;e<n.length;e++){const t=n[e];a+=`\n          if(offset == ${e}) {\n            result = values[${uC[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":P$(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${s.texture2D}(A, uv);\n          ${a}\n        }\n        ${s.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class hC{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=M$();this.outputShape=e,this.enableShapeUniforms=rC(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){const a=2*t+r;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":P$(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${r};\n        }\n    `}}function dC(e,t,n,s,r,a){!function(e,t){const n=de().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return S$(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return p$(e,(()=>e.bindTexture(o,i))),p$(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),p$(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),p$(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),p$(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===de().getNumber("WEBGL_VERSION")?p$(e,(()=>e.texImage2D(o,0,s,t,n,0,r,a,null))):p$(e,(()=>e.texStorage2D(o,1,s,t,n))),p$(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function pC(e){return e.internalFormatFloat}function fC(e){return e.internalFormatHalfFloat}function gC(e){return e.downloadTextureFormat}function mC(e){return e.internalFormatPackedFloat}function bC(e){return e.internalFormatPackedHalfFloat}class xC{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=de().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){s$[e]=t}(t,e)):this.gl=a$(t),e=this.gl,2===de().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>p$(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>p$(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>p$(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>p$(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>p$(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>p$(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>p$(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>p$(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===de().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=g$(this.gl,e),F$(this.gl,t))this.textureHalfFloatExtension=g$(this.gl,t);else if(de().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),F$(this.gl,s))this.colorBufferHalfFloatExtension=g$(this.gl,s);else if(de().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",F$(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!F$(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(e){return function(e,t){const n=S$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return p$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),p$(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=S$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return p$(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),p$(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return S$(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=d$(this.gl,this.textureHalfFloatExtension)}get debug(){return de().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;p$(e,(()=>e.finish())),p$(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),p$(e,(()=>e.deleteFramebuffer(this.framebuffer))),p$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),p$(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),p$(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=u$(t,n);return dC(e,r,a,pC(s),s.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=u$(t,n);return dC(e,r,a,fC(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=u$(t,n);return dC(e,r,a,gC(s),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){p$(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===de().getNumber("WEBGL_VERSION")?p$(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):p$(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===de().getNumber("WEBGL_VERSION")?p$(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):p$(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),p$(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,r,a){let i,o,l;p$(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(r),2===de().getNumber("WEBGL_VERSION")?p$(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,i))):p$(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,o,i))),p$(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=h$(t,n);return dC(e,r,a,bC(s),e.RGBA,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=h$(t,n);return dC(e,r,a,mC(s),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(k$(this.gl,this.framebuffer),this.outputTexture=null),p$(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,s){const[r,a]=u$(t,n),i=new Uint8Array(t*n*4);return p$(e,(()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return function(e,t,n,s,r,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,s]=h$(e,t);return n*s*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=function(e,t,n,s){const r=e.createBuffer();p$(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return p$(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),p$(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),p$(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(de().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const s=new Float32Array(t*n*4);return p$(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=M$();return function(e,t){const n=S$(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(p$(e,(()=>e.shaderSource(n,t))),p$(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return S$(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);let s;return p$(t,(()=>t.attachShader(n,this.vertexShader))),p$(t,(()=>t.attachShader(n,e))),function(e,t){if(p$(e,(()=>e.linkProgram(t))),!de().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),s=Object.assign(n,{vao:this.createVertexArray()}),this.bindVertexArray(s.vao),p$(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),console.assert(function(e,t,n){return p$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),y$(e,t,"clipSpacePos",n,3,20,0)&&y$(e,t,"uv",n,2,20,12)}(t,s,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&x$(t,s),this.setProgram(s),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(p$(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&(this.bindVertexArray(this.program.vao),this.debug&&x$(this.gl,this.program)),p$(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return S$(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),p$(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),w$(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=h$(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&x$(this.gl,this.program),I$(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}p$(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),p$(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=g$(this.gl,2===de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await P((()=>this.disposed||this.isQueryAvailable(e,de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in de().platform&&(n=de().platform.setTimeoutCustom.bind(de().platform)),P((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),v$(this.gl,e,this.framebuffer),this.debug&&I$(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(v$(this.gl,this.outputTexture,this.framebuffer),this.debug&&I$(this.gl)):k$(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;v$(s,e,this.framebuffer),this.debug&&I$(s),this.outputTexture=e,p$(s,(()=>s.viewport(0,0,t,n))),p$(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),p$(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:yC,bincountImpl:wC,bincountReduceImpl:vC,castImpl:kC,ceilImpl:IC,concatImpl:SC,equalImpl:NC,expImpl:$C,expm1Impl:CC,floorImpl:TC,gatherNdImpl:EC,gatherV2Impl:RC,greaterImpl:AC,greaterEqualImpl:FC,lessImpl:DC,lessEqualImpl:_C,linSpaceImpl:OC,logImpl:LC,maxImpl:MC,maximumImpl:zC,minimumImpl:BC,multiplyImpl:PC,negImpl:WC,notEqualImpl:UC,prodImpl:VC,raggedGatherImpl:GC,raggedRangeImpl:HC,raggedTensorToTensorImpl:jC,rangeImpl:qC,rsqrtImpl:KC,scatterImpl:XC,sigmoidImpl:YC,simpleAbsImpl:ZC,sliceImpl:JC,sparseFillEmptyRowsImpl:QC,sparseReshapeImpl:eT,sparseSegmentReductionImpl:tT,sqrtImpl:nT,stridedSliceImpl:sT,stringNGramsImpl:rT,stringSplitImpl:aT,stringToHashBucketFastImpl:iT,subImpl:oT,tileImpl:lT,topKImpl:uT,transposeImpl:cT,uniqueImpl:hT}=r;function dT(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function pT(e,t){return 1===t?[e]:dT(e,t)}class fT{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=rC(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=pT("rc",this.rank),t=J$(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${0===n?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${s};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class gT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=rC(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var s,r;this.userCode=`\n      ${s=t,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?function(e,t,n="index"){const s=function(e,t){const n=e.length,s=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=s[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${s[e+1]})`;return r}(e.map(((e,t)=>t)),t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${s[r]}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`};`)).join("")}(["r","c","d"],"inputShape"):z$(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":P$(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class mT{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const s=xT(t,n),r=yT(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=bT(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}let i;return s===l$.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===l$.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===l$.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===l$.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===l$.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=xT(n,s),a=yT(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=bT(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=de().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function bT(e,t,n,s,r){const a=function(e,t){switch(e){case l$.PACKED_2X2_FLOAT32:return mC(t);case l$.PACKED_2X2_FLOAT16:return bC(t);case l$.UNPACKED_FLOAT32:return pC(t);case l$.UNPACKED_FLOAT16:return fC(t);case l$.PACKED_4X1_UNSIGNED_BYTE:return gC(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,s);let i;if(r){const[t,n]=h$(e[0],e[1]);i=t*n}else{const[t,n]=u$(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function xT(e,t){if(e===o$.UPLOAD)return l$.PACKED_2X2_FLOAT32;if(e===o$.RENDER||null==e)return function(e){return de().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?l$.PACKED_2X2_FLOAT32:l$.UNPACKED_FLOAT32:e?l$.PACKED_2X2_FLOAT16:l$.UNPACKED_FLOAT16}(t);if(e===o$.DOWNLOAD||e===o$.PIXELS)return l$.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function yT(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class wT{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=rC(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const vT="return abs(x);",kT="return x;";class IT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=rC(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class ST{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=rC(this.outputShape.length);const t=e.length,n=pT("rc",t),s=J$(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const NT=Xc,$T={},CT=de().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class TT extends N{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!de().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof xC)t=e;else{const n=a$(de().getNumber("WEBGL_VERSION"),e);t=new xC(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=a$(de().getNumber("WEBGL_VERSION"));t=new xC(e),this.binaryCache=((n=de().getNumber("WEBGL_VERSION"))in $T||($T[n]={}),$T[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new mT(this.gpgpu),this.numMBBeforeWarning=null==de().global.screen?1024:de().global.screen.height*de().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new S(this,oi())}nextDataId(){return TT.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,s,r,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[s,r]},o.texShape=[s,r];const l=C$(t),u=new cC(l,!1,a),c=this.runWebGLProgram(u,[i],n,[[s,r]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((de().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||de().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:o$.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,s,r){if(de().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:o$.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new IT(i,kT):new wT(i,kT);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Zs()),c="complex64"===s?mc(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=Zs()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new IT(s,kT):new wT(s,kT);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(de().getBool("DEBUG")&&!de().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===de().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&de().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...c$(s))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=mc(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=O(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;p$(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&oi().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new IT(r,kT):new wT(r,kT);const s=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),a=this.readToGPU(s,t);return this.disposeIntermediateTensorInfo(s),a}if(null==l)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=oi().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Qs(e)));return Na(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Na(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!f$(n)){if(de().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=O(t);if(de().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...c$(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),a}const a=de().getBool("WEBGL_PACK")&&!0===s,i=a?C$(t):t,o=a?new lC(i):new oC(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=_(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=_(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Zs(),endMs:null}}endTimer(e){return de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Zs(),e)}async getQueryTime(e){if(de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=CT){return de().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&O(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Ns("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return NT(e.shape,t)}packedUnaryOp(e,t,n){const s=new IT(e.shape,t),r=this.compileAndRun(s,[e],n);return oi().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=ZC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(de().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,vT,e.dtype);const t=new wT(e.shape,vT),n=this.compileAndRun(t,[e]);return oi().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&X(n[0])){const r=n.map((e=>Js(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return oi().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new ST(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new fT(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[N$(e.shape),...$$(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[N$(t),...$$(t)],a=new gT(r,n),i=[n],o=this.runWebGLProgram(a,[s],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;null!=t&&A(O(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=C$(r);let o;o=s?new iC(i):new aC(i);const l=[null!=t?t:c$(i)];return{dtype:a,shape:r,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,s,r=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===i$.DENSE){const t=null!=a?a:c$(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===O(i.shape))return o.values=G(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&O(t.shape)<=de().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!E$(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),l.push(t),n=this.texData.get(t.dataId),e.shape=s}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let s="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=Q$(e.packedInputs,t.shape,a);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=ee(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&L(t.shape,a),f=1===O(t.shape),g=La(t.shape,n.shape),m=!e.packedInputs&&d===n.shape.length&&L(a,n.texData.texShape),b=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;s+=`${d}_${m}_${i?l:""}_${o.length}_${f}_${g}_${p}_${u}_${c}_${h}_${b}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let a=e.constructor.name;return a+="_"+s+"_"+r+`${de().getNumber("WEBGL_VERSION")}`,a}(e,u,c),d=this.getAndSaveBinary(h,(()=>function(e,t,n,s){const r=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),a=r.map((e=>e.shapeInfo)),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=V$(r,i,t),l=function(e,t){const n=S$(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(p$(e,(()=>e.shaderSource(n,t))),p$(e,(()=>e.compileShader(n))),de().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw b$(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return de().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i},nC(e,t,u))}(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),de().get("ENGINE_COMPILE_ONLY")||function(e,t,n,s,r){t.program.enableShapeUniforms||(sC(t.inShapeInfos,n),sC([t.outShapeInfo],[s]));const a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===de().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,s)=>{const r=t.program.variableNames[s],a=t.uniformLocations[r],i=t.uniformLocations[`offset${r}`],o=t.inShapesLocations[`${r}Shape`],l=t.inTexShapesLocations[`${r}TexShape`];if(o){const{uniformShape:s}=Q$(t.program.packedInputs,n.shape,n.texData.texShape);switch(s.length){case 1:e.gl.uniform1iv(o,new Int32Array(s));break;case 2:e.gl.uniform2iv(o,new Int32Array(s));break;case 3:e.gl.uniform3iv(o,new Int32Array(s));break;case 4:e.gl.uniform4iv(o,new Int32Array(s))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(O(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,s)}));const o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const n=ee(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach(((n,s)=>{const a=t.customUniformLocations[s],i=r[s];if("float"===n.type)e.gl.uniform1fv(a,i);else if("vec2"===n.type)e.gl.uniform2fv(a,i);else if("vec3"===n.type)e.gl.uniform3fv(a,i);else if("vec4"===n.type)e.gl.uniform4fv(a,i);else if("int"===n.type)e.gl.uniform1iv(a,i);else if("ivec2"===n.type)e.gl.uniform2iv(a,i);else if("ivec3"===n.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,i)}})),e.executeProgram()}(this.gpgpu,d,u,c,s),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const g=de().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=Zs();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!de().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(de().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ui((()=>{if(!de().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=de().getBool("DEBUG");de().set("DEBUG",!1);const t=this.abs(fi(1e-8)).dataSync()[0];if(de().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=Zs());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=de().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=de().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(s===1/0&&de().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n*=2,s*=2,1===(e=e.map(((t,n)=>n>=e.length-2?E(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=V(e);e=t.newShape}let r=O(e),a=null;e.length<=1&&r<=n?a=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>s&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=N$(e);let n=2,s=2;e.length&&([n,s]=$$(e)),r=t*(n/2)*(s/2),a=z(r).map((e=>2*e))}else a=z(r);return a}(n,o),t.texShape=c),null!=r){const e=C$(n);let a,i=c[1],h=c[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&d||([i,h]=h$(c[0],c[1])),a=o?new hC(e,d):new cC(e,d);const p=d?[h,i]:c,f=this.makeTensorInfo(p,s),g=this.texData.get(f.dataId);g.usage=d?o$.PIXELS:o$.UPLOAD,g.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,r);const m=[[h,i]],b=!0,x=this.runWebGLProgram(a,[f],s,m,b),y=this.texData.get(x.dataId);t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,de().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=y.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Zs()-u)}else{const e=this.acquireTexture(c,i,s,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*K(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Uu(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw b$(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=nC(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromTexture(e,t,n){const{texture:s,height:r,width:a,channels:i}=e,o=oi().backend;if(!o.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(s,t,n,r,a,i);return oi().makeTensorFromDataId(l,t,n,o)}}TT.nextDataId=0,_r()&&di("webgl",(()=>new TT),2);class ET{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=za(t,n),this.enableShapeUniforms=rC(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class RT{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=za(t,n);const r=this.outputShape.length;this.enableShapeUniforms=rC(r);let a="";if(s)if(0===r||1===O(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${J$(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=pT("coords",r);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function AT(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const FT={kernelName:Rt,backendName:"webgl",kernelFunc:AT};function DT(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=AT({inputs:{x:s},backend:n}),l=AT({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const _T={kernelName:Ue,backendName:"webgl",kernelFunc:DT},OT="return (a < 0.) ? b * a : a;",LT="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",MT={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",Xs(a,"float32")),o=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new RT(LT,r.shape,i.shape):new ET(OT,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},zT="return (a < 0.) ? b * a : a;",BT="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",PT={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new RT(BT,s.shape,r.shape):new ET(zT,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}};function WT({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{const{x:i}=r,o=a,l=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=de().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new IT(i.shape,t):new wT(i.shape,e),o.runWebGLProgram(u,[i],l)}}function UT({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(s&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:s.dataId,dtype:s.dtype,shape:u.shape},i=new ET(e,l.shape,u.shape);return c.runWebGLProgram(i,[r,a],vr(n.dtype,s.dtype))})),a=DT({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),a}const h=a||vr(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=r){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?qc(e):e,s="string"===l.dtype?qc(t):t,[a,i]=r(l.shape,u.shape,n,s,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let d;return d=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new RT(t,l.shape,u.shape,n):new ET(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function VT(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?BT:zT;if("leakyrelu"===e)return t?LT:OT;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class GT{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=rC(this.outputShape.length);const u=s?e[1]:e[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";i&&(g=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${g}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${x};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class HT{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=za(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const jT="return a * b;";function qT(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=vr(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),a=new HT("return areal * breal - aimag * bimag;",s.shape,r.shape),i=new HT("return areal * bimag + aimag * breal;",s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=DT({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[i,o]=PC(s.shape,r.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new RT(jT,s.shape,r.shape):new ET(jT,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}const KT={kernelName:on,backendName:"webgl",kernelFunc:qT};function XT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,o=O(r.shape),l=W(a,o),u=O(l);A(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||E$(r.shape,l)||null!==c.texture&&E$(c.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const s=[N$(e.shape),...$$(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[N$(t),...$$(t)],i=new gT(a,s),o=[s],l=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(r,l,i)}const YT={kernelName:Cn,backendName:"webgl",kernelFunc:XT};class ZT{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${M(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class JT{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function QT(e,t,n,s){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=Zu(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let a=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:l,outSize:u}=r[i];let c,h;c="mean"===n?0===i?new ZT({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new ZT({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new JT({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class eE{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const s=J$(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let t=0;t<e.length;t++)s[e[t]]=n[t];return s.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class tE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=J$(this.rank),r=dT("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=r[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function nE(e,t,n){const s=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tE(e.shape,t):new eE(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function sE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return function(e,t,n,s){const r=t,a=e.shape.length,i=U(r,e.shape);let o=i;const l=Bo(o,a),u=null!=l;let c=e;u&&(c=nE(e,l,s),o=Wo(o.length,a)),zo("sum",o,a);const[h,d]=Lo(c.shape,o);let p=h;n&&(p=Mo(h,i));const f=O(d),g=XT({inputs:{x:c},attrs:{shape:[O(e.shape)/f,f]},backend:s}),m=QT(g,kr(e.dtype),"sum",s),b=XT({inputs:{x:m},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(m),u&&s.disposeIntermediateTensorInfo(c),b}(r,a,i,n)}const rE={kernelName:qn,backendName:"webgl",kernelFunc:sE};function aE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=r.shape[a[e]];let u;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=cT(e,r.shape,r.dtype,a,l);u=i.makeTensorInfo(l,r.dtype),i.texData.get(u.dataId).values=t}else u=nE(r,a,i);return u}const iE={kernelName:fs,backendName:"webgl",kernelFunc:aE};function oE({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],g=e.shape.slice(0,-2),m=t.shape.slice(0,-2),b=O(g),x=O(m),y=za(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);A(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const w=n?[b,h,p]:[b,p,h],v=s?[x,f,d]:[x,d,f],k=XT({inputs:{x:e},backend:r,attrs:{shape:w}}),I=XT({inputs:{x:t},backend:r,attrs:{shape:v}}),S=[k,I],N=Math.max(b,x),$=n?k.shape[1]:k.shape[2],C=null!=a,T=null!=i,E="leakyrelu"===l,R=null!=l?VT(l,!0):null;let F;if((1===p||1===f)&&$>1e3&&!1===(C||T||E||null!=R)){let e=k,t=I;n&&(e=aE({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),S.push(e)),s&&(t=aE({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),S.push(t));const a=1===f;let i=e;1!==f&&(i=XT({inputs:{x:e},backend:r,attrs:{shape:[N,$,1]}}),S.push(i));const o=1===f?2:1;let l=t;a&&(l=XT({inputs:{x:t},backend:r,attrs:{shape:[N,1,$]}}),S.push(l));const u=qT({inputs:{a:i,b:l},backend:r});F=sE({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),S.push(u)}else{const l=vr(e.dtype,t.dtype),u=new GT(w,v,[N,p,f],n,s,C,R,T,E),c=[k,I];if(null!=a&&c.push(a),T&&c.push(i),E){const e=r.makeTensorInfo([],"float32",Xs(o,"float32"));c.push(e),S.push(e)}F=r.runWebGLProgram(u,c,l)}const D=XT({inputs:{x:F},backend:r,attrs:{shape:y}});S.push(F);for(const e of S)r.disposeIntermediateTensorInfo(e);return D}const lE={kernelName:ks,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return oE({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},uE="return abs(x);",cE={kernelName:be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=ZC(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=de().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new IT(s.shape,uE):new wT(s.shape,uE),n.runWebGLProgram(r,[s],s.dtype)}},hE=WT({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),dE={kernelName:xe,backendName:"webgl",kernelFunc:hE},pE=WT({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),fE={kernelName:ye,backendName:"webgl",kernelFunc:pE},gE="return a + b;",mE=UT({opSnippet:gE,packedOpSnippet:gE,supportsComplex:!0,cpuKernelImpl:yC}),bE={kernelName:we,backendName:"webgl",kernelFunc:mE};class xE{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class yE{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const wE={kernelName:ve,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,r=n;if(1===r.length)return AT({inputs:{x:r[0]},backend:s});if(r.length>de().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:s}),a=e({inputs:r.slice(t),backend:s});return e({inputs:[n,a],backend:s})}const a=r.map((e=>e.dtype)).reduce(((e,t)=>vr(e,t))),i=r.map((e=>e.shape)),o=de().getBool("WEBGL_PACK")?new yE(r[0].shape,i):new xE(r[0].shape,i);return s.runWebGLProgram(o,r,a)}},vE={kernelName:ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=U(a,r.shape);let u=l;const c=Bo(u,o);let h=r;null!=c&&(h=aE({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Wo(u.length,o)),zo("all",u,o);const[d,p]=Lo(h.shape,u),f=XT({inputs:{x:h},backend:n,attrs:{shape:[-1,O(p)]}}),g=QT(f,f.dtype,"all",n);let m;return m=XT(i?{inputs:{x:g},backend:n,attrs:{shape:Mo(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}},kE={kernelName:Ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=U(a,r.shape);let u=l;const c=Bo(u,o);let h=r;null!=c&&(h=aE({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Wo(u.length,o)),zo("any",u,o);const[d,p]=Lo(h.shape,u),f=XT({inputs:{x:h},backend:n,attrs:{shape:[-1,O(p)]}}),g=QT(f,f.dtype,"any",n);let m;return m=XT(i?{inputs:{x:g},backend:n,attrs:{shape:Mo(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}};class IE{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class SE{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,A(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=J$(o),u=pT("coords",o);let c,h;if(1===a){h=o+1;const e=J$(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),g=pT("sourceLocR",h-1).concat("inIdx.r"),m=pT("sourceLocG",h-1).concat("inIdx.g"),b=pT("sourceLocB",h-1).concat("inIdx.b"),x=pT("sourceLocA",h-1).concat("inIdx.a"),y="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,v=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,k=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function NE(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const i=Zu(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},l=new IE(o,n,null==s),u=[t];null!=s&&u.push(s);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=NE(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function $E(e,t,n,s=null){const r=null!=s?s.shape:t.shape,a=Zu(r[r.length-1]),i=new SE(r,a,n,null==s),o=null==s?[t]:[t,s],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const s=$E(e,t,n,l);return e.disposeIntermediateTensorInfo(l),s}return l}function CE(e,t,n,s){const r=[n];if(zo("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!de().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=Lo(i.shape,r),u=O(l),c=XT({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=NE(e,c,s);n.push(h);const d=XT({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return $E(e,t,s)}const TE={kernelName:Se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=U(a,r.shape);const o=Bo(i,r.shape.length);let l=r;const u=[];null!=o&&(l=aE({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Wo(i.length,l.shape.length)),zo("argMax",[i[0]],l.shape.length);const c=CE(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},EE={kernelName:Ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=U(a,r.shape);const o=Bo(i,r.shape.length);let l=r;const u=[];null!=o&&(l=aE({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Wo(i.length,l.shape.length)),zo("argMin",[i[0]],l.shape.length);const c=CE(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},RE=WT({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),AE={kernelName:$e,backendName:"webgl",kernelFunc:RE},FE=WT({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),DE={kernelName:Ce,backendName:"webgl",kernelFunc:FE},_E=WT({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),OE={kernelName:Te,backendName:"webgl",kernelFunc:_E},LE=UT({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),ME={kernelName:Re,backendName:"webgl",kernelFunc:LE},zE=WT({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),BE={kernelName:Ee,backendName:"webgl",kernelFunc:zE};class PE{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const y=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class WE{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${b});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const UE={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;O$(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;A(Fi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ki(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&L(u.inShape,u.outShape))return AT({inputs:{x:r},backend:n});const c=new PE(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}},VE={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=Ii(r.shape,a,i,[1,1,1],o,l,u),h=new WE(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class GE{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class HE{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,g=d-1-e.padInfo.left,m=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const jE={kernelName:_e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=Ii(i.shape,o,l,[1,1,1],u,c),d=new HE(h);return n.runWebGLProgram(d,[r],i.dtype)}},qE={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;O$([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=ki(i.shape,o,l,1,u),h=new GE(c);return n.runWebGLProgram(h,[r],i.dtype)}},KE={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return oE({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class XE{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],za(e,t),za(e,n);let i="0.0";null!=s&&(za(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(za(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class YE{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],za(e,t),za(e,n);let i="vec4(0.0)";null!=s&&(za(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(za(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const ZE={kernelName:Nt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:a,offset:i,scale:o}=e;A(r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),A(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),A(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,r,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const d=de().getBool("WEBGL_PACK_NORMALIZATION")?new YE(s.shape,r.shape,a.shape,c,h,l):new XE(s.shape,r.shape,a.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class JE{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=J$(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return QE.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${QE[t]} = start[${t}] + coords.${QE[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const QE=["x","y","z","w","u","v"];class eR{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=J$(this.rank),n=pT("coords",this.rank),s=pT("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function tR(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,l]=ti(r,a,i);if(Wa(r,o,l),0===O(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=JC(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),c=Qa(r.shape,o,l);if(u||!c){const e=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new eR(l):new JE(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,s){const r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=ei(t,ee(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),a}(r,o,l,n)}const nR={kernelName:Pn,backendName:"webgl",kernelFunc:tR},sR={kernelName:Le,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;A(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=Qu(r.shape,a,o),u=ec(l.length,a.length),c=tc(r.shape,a,o),h=nc(i,a.length),d=sc(c,i,a.length),p=[],f=XT({inputs:{x:r},backend:n,attrs:{shape:l}}),g=aE({inputs:{x:f},backend:n,attrs:{perm:u}}),m=XT({inputs:{x:g},backend:n,attrs:{shape:c}}),b=tR({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(m),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},rR={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=wC(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},aR={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),i=n.readSync(r.dataId),o=za(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},iR=UT({opSnippet:"return float(a != b);",cpuKernelImpl:UC,dtype:"bool"}),oR={kernelName:un,backendName:"webgl",kernelFunc:iR};function lR(e){const{inputs:t,backend:n}=e,{input:s}=t;return AT({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const uR={kernelName:Sn,backendName:"webgl",kernelFunc:lR},cR={kernelName:Be,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:r}=t,{x:a}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return AT({inputs:{x:a},backend:s});const t=qo(a.shape),n=e({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),r=DT({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===a.dtype){const t=lR({inputs:{input:a},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:i}});return s.disposeIntermediateTensorInfo(t),n}if(!j(a.dtype,i)){const e=AT({inputs:{x:a},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(s.shouldExecuteOnCPU([a])){const e=s.texData.get(a.dataId).values,[t,n,r]=kC(e,a.shape,a.dtype,i);return s.makeTensorInfo(t,n,r)}if("int32"===i)return function(e,t){const n=new wT(e.shape,"return float(int(x));"),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(a,s);if("bool"===i){const e=s.makeTensorInfo([],"bool",G("bool",1)),t=iR({inputs:{a,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},hR="return ceil(x);",dR=WT({opSnippet:hR,packedOpSnippet:hR,cpuKernelImpl:IC}),pR={kernelName:Pe,backendName:"webgl",kernelFunc:dR};class fR{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class gR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const mR={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s;let o;o=de().getBool("WEBGL_PACK_CLIP")?new gR(r.shape):new fR(r.shape);const l=[[a],[i]];return n.runWebGLProgram(o,[r],r.dtype,l)}};class bR{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function xR(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const yR={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new bR(s.shape),i=[xR(s,r.complexTensorInfos.real),xR(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class wR{constructor(e){this.outputShape=[],this.outputShape=Gu(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const s=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${s}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class vR{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Gu(e,t);const n=this.outputShape,s=n.length,r=J$(s),a=pT("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${kR(i,l,t)}),\n            vec2(${kR(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${kR(i,l,p)}),\n          vec2(${kR(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[s-1]} = ${a[s-1]} + 1;\n        if (${a[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[s-2]} = ${a[s-2]} + 1;\n        if (${a[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[s-1]} = ${a[s-1]} - 1;\n        if (${a[s-2]} < ${n[s-2]} &&\n            ${a[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function kR(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function IR(e){const{inputs:t,backend:n}=e,{input:s}=t;return AT({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const SR={kernelName:Ft,backendName:"webgl",kernelFunc:IR};function NR(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>lR({inputs:{input:e},backend:n}))),r=e.map((e=>IR({inputs:{input:e},backend:n}))),a=NR(s,t,n),i=NR(r,t,n),o=DT({inputs:{real:a,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===s&&(r=!0),r){const r=e.map((e=>{const s=O(e.shape.slice(t));return XT({inputs:{x:e},backend:n,attrs:{shape:[-1,s]}})})),a=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Gu(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=SC(a,i,s,o),u=Gu(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,s,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>O(e.shape)>0)),i=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=i?new wT(e[0].shape,kT):new IT(e[0].shape,kT);return n.runWebGLProgram(t,e,s)}const o=de().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>o){const e=[];for(let s=0;s<a.length;s+=o){const r=a.slice(s,s+o);e.push(NR(r,t,n))}const s=NR(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return s}if(i){const e=new vR(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,s)}const{tensors2D:l,outShape:u}=function(e,t,n){const s=Gu(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>XT({inputs:{x:e},attrs:{shape:[-1,O(e.shape.slice(t))]},backend:n}))),outShape:s}}(a,t,n),c=new wR(l.map((e=>e.shape))),h=n.runWebGLProgram(c,l,s);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=XT({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function $R(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=U(r,t[0].shape)[0];Vu(t.map((e=>e.shape)),a);const i=Gu(t.map((e=>e.shape)),a);if(0===O(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>O(e.shape)>0));return 1===o.length?AT({inputs:{x:o[0]},backend:n}):NR(o,a,n)}const CR={kernelName:Ge,backendName:"webgl",kernelFunc:$R};class TR{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,b=g?2:3,x=g?3:1;let y="",w="";n&&(y=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class ER{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RR{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=rC(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<u&&(a%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const e=a%2==0?E(o):o;o%2==0&&a%2==1||o%2!=0&&a%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(a%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=s?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}class AR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=rC(this.outputShape.length);const{dataFormat:n}=t,s=M$(),r="channelsLast"===n,a=r?1:2,i=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${s.output} = result;\n      }\n    `}}function FR(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function DR({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const g=[];if(null!=a){const e=FR(a.shape,p);null!=e&&(a=XT({inputs:{x:a},backend:s,attrs:{shape:e}}),g.push(a))}if(null!=r){const e=FR(r.shape,p);null!=e&&(r=XT({inputs:{x:r},backend:s,attrs:{shape:e}}),g.push(r))}if((1!==h&&1!==d||!(c>1e3))&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&L(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,A(E$(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const p=XT({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(p);const m=oE({a:h,b:p,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),b=s.texData.get(m.dataId);A(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,b.shape=n.outShape,f=AT({inputs:{x:m},backend:s}),f.shape=n.outShape,g.push(m)}else{const l=n.outHeight*n.outWidth,u=XT({inputs:{x:e},backend:s,attrs:{shape:p?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=XT({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=oE({a:p?u:c,b:p?c:u,transposeA:!p,transposeB:!1,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=XT({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),g.push(u),g.push(c),g.push(h)}for(const e of g)s.disposeIntermediateTensorInfo(e);return f}function _R({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,g=l*u*c,m=d*h,b=[n.batchSize,g,m],x=[];if(null!=a){const e=FR(a.shape,f);null!=e&&(a=XT({inputs:{x:a},backend:s,attrs:{shape:e}}),x.push(a))}if(null!=r){const e=FR(r.shape,f);null!=e&&(r=XT({inputs:{x:r},backend:s,attrs:{shape:e}}),x.push(r))}const y=XT({inputs:{x:t},backend:s,attrs:{shape:[1,g,O(t.shape)/g]}});x.push(y);const w=new AR(b,n),v=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=s.runWebGLProgram(w,[e],"float32",v),I=XT({inputs:{x:k},backend:s,attrs:{shape:b}});x.push(k),x.push(I);const S=null!=r,N=null!=a,$="leakyrelu"===o,C=o?VT(o,!0):null,T=new GT(f?I.shape:y.shape,f?y.shape:I.shape,f?[n.batchSize,m,n.outChannels]:[n.batchSize,n.outChannels,m],!0,!1,S,C,N,$),E=f?[I,y]:[y,I];if(r&&E.push(r),N&&E.push(a),$){const e=s.makeTensorInfo([],"float32",Xs(i,"float32"));E.push(e),x.push(e)}const R=s.runWebGLProgram(T,E,"float32"),A=XT({inputs:{x:R},backend:s,attrs:{shape:n.outShape}});x.push(R);for(const e of x)s.disposeIntermediateTensorInfo(e);return A}const OR={kernelName:He,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=Di(l),d=Si(r.shape,a.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&de().getBool("WEBGL_EXP_CONV")){const e=new RR(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[r,a],"float32",t)}else if(de().getBool("WEBGL_CONV_IM2COL"))p=_R({x:r,filter:a,convInfo:d,backend:n});else{const e=new TR(d);p=n.runWebGLProgram(e,[r,a],"float32")}else p=DR({x:r,filter:a,convInfo:d,backend:n});const f=XT({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class LR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class MR{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class BR{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const PR={kernelName:je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=Di(l),d=Si(r.shape,c,i,1,o,u,!1,h),p=new LR(d);return n.runWebGLProgram(p,[r,a],"float32")}},WR={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=Di(u),d=Si(i,a.shape,o,1,l,c,!1,h),p=new MR(d);return n.runWebGLProgram(p,[r,a],"float32")}},UR={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=Ni(r.shape,a.shape,i,l,o),c=new ER(u);return n.runWebGLProgram(c,[r,a],"float32")}},VR={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s,u=Ni(r.shape,l,i,1,o),c=new zR(u);return n.runWebGLProgram(c,[r,a],"float32")}},GR={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s,u=Ni(l,a.shape,o,1,i),c=new BR(u);return n.runWebGLProgram(c,[r,a],"float32")}},HR=WT({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),jR={kernelName:Ze,backendName:"webgl",kernelFunc:HR},qR=WT({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),KR={kernelName:Je,backendName:"webgl",kernelFunc:qR};class XR{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===s?1:0,[p,f]=[i-1+".0",o-1+".0"],[g,m,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,y,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${y};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const YR={kernelName:tt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,c=new XR(r.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[r,a,i],"float32")}};var ZR;!function(e){e.Prod="*",e.Sum="+"}(ZR||(ZR={}));class JR{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,a=this.op===ZR.Prod?"1.0":"0.0",i=n?a:`getX(${QR(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=s?"end != "+(o-1):"end != 0",u=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${o}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${J$(r)} coords = getOutputCoords();\n        int end = ${eA(r,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${eA(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${QR(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function QR(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function eA(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function tA(e,t,n,s,r,a){const i=t.shape.length,o=Bo([s],i);let l=t;null!=o&&(l=aE({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=Wo(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=AT({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const s=new JR(e,l.shape,!1,a),r=[[t]],i=h;h=n.runWebGLProgram(s,[h],h.dtype,r),n.disposeIntermediateTensorInfo(i)}if(r){const t=new JR(e,l.shape,r,a),s=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(s)}if(null!=o){const e=aE({inputs:{x:h},backend:n,attrs:{perm:Po(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const nA={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return tA(ZR.Prod,r,n,a,i,o)}},sA={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return tA(ZR.Sum,r,n,a,i,o)}},rA={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(a.dataId),s=wC(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=vC(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class aA{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const iA={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*a,u=("NHWC"===i?r.shape[2]:r.shape[3])*a,c=("NHWC"===i?r.shape[3]:r.shape[1])/(a*a),h=new aA("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(h,[r],r.dtype)}};class oA{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=rC(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class lA{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=rC(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?E(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${f}\n        setOutput(result);\n      }\n    `}}const uA={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),A(Fi(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Si(r.shape,a.shape,i,c,o,u,!0);let d;d=de().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new lA(h):new oA(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,a],"float32",p)}};class cA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const dA={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=Si(r.shape,c,i,o,l,u,!0),d=new cA(h);return n.runWebGLProgram(d,[r,a],"float32")}},pA={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=Si(c,a.shape,i,o,l,u,!0),d=new hA(h);return n.runWebGLProgram(d,[r,a],"float32")}};class fA{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const gA={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=O(s.shape),i=XT({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new fA(a),l=n.runWebGLProgram(o,[i],i.dtype),u=XT({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class mA{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const bA={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=vi(r.shape,a.shape,i,o,"NHWC",l);let c;const h=new mA(u);c=n.runWebGLProgram(h,[r,a],"float32");const d=XT({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},xA={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=Nc(r,a.length);Cc(i.length,l,a);const{path:u,steps:c}=Tc(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=$c(p,l[t]);let r;Ec(e)?r=a[t]:(r=aE({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);L(r.shape,i)||(r=XT({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=qT({inputs:{a:r,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=sE({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},yA=WT({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),wA={kernelName:pt,backendName:"webgl",kernelFunc:yA},vA={kernelName:ft,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new RT("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new ET("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},kA=UT({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:NC}),IA={kernelName:mt,backendName:"webgl",kernelFunc:kA},SA=WT({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${cc};\n  float a1 = ${hc};\n  float a2 = ${dc};\n  float a3 = ${pc};\n  float a4 = ${fc};\n  float a5 = ${gc};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),NA={kernelName:gt,backendName:"webgl",kernelFunc:SA},$A=WT({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:$C,dtype:"float32"}),CA={kernelName:bt,backendName:"webgl",kernelFunc:$A};function TA(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=r;return r<0&&(A(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),XT({inputs:{x:a},backend:s,attrs:{shape:o}})}const EA={kernelName:xt,backendName:"webgl",kernelFunc:TA},RA="return exp(x) - 1.0;",AA=WT({opSnippet:RA,packedOpSnippet:RA,cpuKernelImpl:CC}),FA={kernelName:yt,backendName:"webgl",kernelFunc:AA};class DA{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function _A(e,t,n){const s=n.texData.get(e.dataId),r=O(e.shape),a=e.shape[e.shape.length-1],i=XT({inputs:{x:e},backend:n,attrs:{shape:[r/a,a]}}),o=i.shape,l=new DA("real",o,t),u=new DA("imag",o,t),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=DT({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=XT({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const OA={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return _A(s,!1,n)}};class LA{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function MA(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:a}=n;if(a=a||Z(r),"string"===a){const e=H(a,O(s));return e.fill(r),t.makeTensorInfo(s,a,e)}{const e=new LA(s,r),n=[[r]];return t.runWebGLProgram(e,[],a,n)}}const zA={kernelName:vt,backendName:"webgl",kernelFunc:MA};class BA{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const PA={kernelName:kt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new BA(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},WA="return floor(x);",UA=WT({opSnippet:WA,packedOpSnippet:WA,cpuKernelImpl:TC}),VA={kernelName:It,backendName:"webgl",kernelFunc:UA},GA=UT({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),HA={kernelName:St,backendName:"webgl",kernelFunc:GA};class jA{constructor(e){this.variableNames=["A"];const t=M$(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class qA{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=M$(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const KA={kernelName:ws,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:a}=s,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,a];if(o||i){const e=de().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=XA&&e===YA||(YA=e,XA=document.createElement("canvas").getContext("2d",{willReadFrequently:YA})),XA.canvas.width=l,XA.canvas.height=u,XA.drawImage(r,0,0,l,u),r=XA.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=o$.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=de().getBool("WEBGL_PACK")?new qA(h):new jA(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let XA,YA=de().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const ZA={kernelName:Is,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,g=Di(c),m=Si(r.shape,a.shape,l,h,u,d,!1,g);let b;const x=[],y=null!=i,w=null!=o,v="leakyrelu"===p,k=()=>{const e=[r,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=XT({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(y&&e.push(t(i,c)),w&&e.push(t(o,c)),v){const t=n.makeTensorInfo([],"float32",Xs(f,"float32"));e.push(t),x.push(t)}return e};if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(m.strideWidth<=2&&"channelsLast"===g&&de().getBool("WEBGL_EXP_CONV")){const e=p?VT(p,!0):null,t=new RR(m,y,e,w,v),s=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],r=k();b=n.runWebGLProgram(t,r,"float32",s)}else if(de().getBool("WEBGL_CONV_IM2COL"))b=_R({x:r,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?VT(p,!1):null,t=new TR(m,y,e,w,v),s=k();b=n.runWebGLProgram(t,s,"float32")}else b=DR({x:r,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=XT({inputs:{x:b},backend:n,attrs:{shape:m.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}},JA={kernelName:Ss,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let g=c;null==g&&(g=[1,1]),A(Fi(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const m=Si(r.shape,a.shape,l,g,u,h,!0),b=de().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels==1,x=d?VT(d,b):null,y=[r,a],w=null!=i,v=null!=o,k="leakyrelu"===d;if(w&&y.push(i),v&&y.push(o),k){const e=n.makeTensorInfo([],"float32",Xs(p,"float32"));y.push(e),f.push(e)}let I;I=b?new lA(m,w,x,v,k):new oA(m,w,x,v,k);const S=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],N=n.runWebGLProgram(I,y,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class QA{constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;const r=J$(n.length);let a="\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const eF={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=O(s.shape),[l,u,c,h]=rc(s,r),d=XT({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),p=XT({inputs:{x:s},backend:n,attrs:{shape:[O(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(s),a=EC(e,t,s.dtype,u,i,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,a.values)}const f=new QA(i,h,[u,c],s.shape),g=n.runWebGLProgram(f,[p,d],p.dtype),m=XT({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(g),m}};class tF{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=J$(this.rank),s=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let t=0;t<e.length;t++)2===t?s.push("index"):s.push(`${n[t]}`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function nF(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,l=U(i,r.shape)[0];if(de().get("DEBUG")){const e=n.readSync(a.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){const s=e[n];A(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const u=jc(r,a,l,o),c=O(a.shape),h=[],d=XT({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=XT({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),s=RC(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}const g=new tF(d.shape,f),m=n.runWebGLProgram(g,[d,p],d.dtype);h.push(m);const b=XT({inputs:{x:m},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const sF={kernelName:$t,backendName:"webgl",kernelFunc:nF},rF=UT({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:AC,dtype:"bool"}),aF={kernelName:Tt,backendName:"webgl",kernelFunc:rF},iF=UT({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:FC}),oF={kernelName:Et,backendName:"webgl",kernelFunc:iF},lF={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return _A(s,!0,n)}},uF=WT({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),cF={kernelName:Dt,backendName:"webgl",kernelFunc:uF},hF=WT({opSnippet:"return float(isinf(x));",dtype:"bool"}),dF={kernelName:_t,backendName:"webgl",kernelFunc:hF},pF=WT({opSnippet:"return float(isnan(x));",dtype:"bool"}),fF={kernelName:Ot,backendName:"webgl",kernelFunc:pF},gF=UT({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:DC,dtype:"bool"}),mF={kernelName:Mt,backendName:"webgl",kernelFunc:gF},bF=UT({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:_C,dtype:"bool"}),xF={kernelName:zt,backendName:"webgl",kernelFunc:bF},yF={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=OC(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},wF=WT({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:LC}),vF={kernelName:Pt,backendName:"webgl",kernelFunc:wF},kF=WT({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),IF={kernelName:Wt,backendName:"webgl",kernelFunc:kF},SF=UT({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),NF={kernelName:Ut,backendName:"webgl",kernelFunc:SF},$F=WT({opSnippet:"return float(!(x >= 1.0));"}),CF={kernelName:Vt,backendName:"webgl",kernelFunc:$F},TF=UT({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),EF={kernelName:Gt,backendName:"webgl",kernelFunc:TF};class RF{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class AF{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const FF={kernelName:Ht,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s,u=de().getBool("WEBGL_PACK_NORMALIZATION")?new AF(r.shape,a,i,o,l):new RF(r.shape,a,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class DF{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const _F={kernelName:jt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new DF(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function OF(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,l=U(a,r.shape);let u=l;const c=Bo(u,o),h=null!=c,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const s=cT(e,r.shape,r.dtype,c,t);p=n.makeTensorInfo(t,r.dtype),n.texData.get(p.dataId).values=s}else p=nE(r,c,n);u=Wo(u.length,o)}zo("max",u,o);const[f,g]=Lo(p.shape,u);let m,b=f;if(i&&(b=Mo(f,l)),d){const e=n.texData.get(p.dataId).values,t=MC(e,O(g),b,r.dtype);m=n.makeTensorInfo(b,r.dtype),n.texData.get(m.dataId).values=t}else m=function(e,t,n,s){const r=O(t),a=XT({inputs:{x:e},attrs:{shape:[O(e.shape)/r,r]},backend:s}),i=QT(a,e.dtype,"max",s),o=XT({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(p,g,b,n);return h&&n.disposeIntermediateTensorInfo(p),m}const LF={kernelName:qt,backendName:"webgl",kernelFunc:OF},MF=UT({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:zC}),zF={kernelName:Kt,backendName:"webgl",kernelFunc:MF},BF={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;O$(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;A(Fi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ki(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&L(u.inShape,u.outShape))return AT({inputs:{x:r},backend:n});const c=new PE(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}},PF={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=Ii(r.shape,a,i,[1,1,1],o,u,l),h=new WE(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class WF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,l=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class UF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const VF={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=Ii(i.shape,o,l,[1,1,1],u,c),d=new WE(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new UF(h),g=n.runWebGLProgram(f,[r,p],i.dtype);return n.disposeIntermediateTensorInfo(p),g}},GF={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;O$([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=ki(o.shape,l,u,1,c,h),p=new PE(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),g=new WF(d),m=n.runWebGLProgram(g,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),m}},HF={kernelName:Qt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;A(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];A(Fi(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=ki(s.shape,r,a,u,i),[h,d]=function(e,t,n,s){let r=new PE(n,"max",!1);const a=s.runWebGLProgram(r,[e],"float32");return r=new PE(n,"max",!0,!0,t),[a,s.runWebGLProgram(r,[e],"float32")]}(s,o,c,l);return[h,d]}},jF={kernelName:en,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:a}=t,i=n,o=s.shape.length,l=U(a,s.shape);let u=l;const c=Bo(u,o),h=null!=c,d=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const n=cT(e,s.shape,s.dtype,c,t);f=i.makeTensorInfo(t,s.dtype),i.texData.get(f.dataId).values=n}else f=nE(s,c,i);p.push(f),u=Wo(u.length,o)}zo("sum",u,o);const[g,m]=Lo(f.shape,u);let b=g;r&&(b=Mo(g,l));const x=function(e,t,n,s){const r=O(t),a=XT({inputs:{x:e},attrs:{shape:[O(e.shape)/r,r]},backend:s}),i=QT(a,"float32","mean",s),o=XT({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(f,m,b,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return x}},qF={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=U(a,r.shape);let u=l;const c=Bo(u,o);let h=r;null!=c&&(h=aE({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Wo(u.length,r.shape.length)),zo("min",u,o);const[d,p]=Lo(h.shape,u),f=XT({inputs:{x:h},backend:n,attrs:{shape:[-1,O(p)]}}),g=QT(f,f.dtype,"min",n);let m;return m=XT(i?{inputs:{x:g},backend:n,attrs:{shape:Mo(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}},KF=UT({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:BC}),XF={kernelName:nn,backendName:"webgl",kernelFunc:KF};class YF{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=J$(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class ZF{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=J$(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=pT("rc",s),l=pT("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const JF={kernelName:sn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:a}=n,i=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZF(s.shape,r,a):new YF(s.shape,r,a);return t.runWebGLProgram(i,[s],s.dtype)}},QF=UT({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),eD={kernelName:rn,backendName:"webgl",kernelFunc:QF};class tD{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const nD=UT({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),sD={kernelName:ht,backendName:"webgl",kernelFunc:nD},rD="return a - b;",aD=UT({opSnippet:rD,packedOpSnippet:rD,supportsComplex:!0,cpuKernelImpl:oT}),iD={kernelName:ls,backendName:"webgl",kernelFunc:aD};function oD(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=U([a],r.shape),o=OF({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Mo(o.shape,i),u=XT({inputs:{x:o},backend:n,attrs:{shape:l}}),c=aD({inputs:{a:r,b:u},backend:n}),h=$A({inputs:{x:c},backend:n}),d=sE({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=XT({inputs:{x:d},backend:n,attrs:{shape:l}}),f=nD({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const lD={kernelName:Yn,backendName:"webgl",kernelFunc:oD},uD={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,l=o?r:oD({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new tD(u,c,a),d=[[i]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},cD={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=WC(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=de().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new IT(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new wT(s.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(r,[s],s.dtype)}},hD=su,dD={kernelName:cn,backendName:"webgl",kernelFunc:function(e){Ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=hD(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},pD=ru,fD={kernelName:hn,backendName:"webgl",kernelFunc:function(e){Ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=pD(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},gD=au,mD={kernelName:dn,backendName:"webgl",kernelFunc:function(e){Ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),d=i,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=gD(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class bD{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const xD={kernelName:fn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:a,depth:i,onValue:o,offValue:l}=s,u=O(r.shape),c=new bD(u,i,o,l),h=XT({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const p=XT({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function yD(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=lR({inputs:{input:s},backend:n}),t=yD({inputs:{x:e},backend:n}),r=IR({inputs:{input:s},backend:n}),a=yD({inputs:{x:r},backend:n}),i=DT({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return MA({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const wD={kernelName:xs,backendName:"webgl",kernelFunc:yD},vD={kernelName:pn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=lR({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=IR({inputs:{input:r},backend:s}),i=yD({inputs:{x:a},backend:s}),o=DT({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return MA({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},kD={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return TA({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{F(a,e.shape,"All tensors passed to stack must have matching shapes"),A(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=$R({inputs:t.map((e=>{const t=TA({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class ID{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=J$(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class SD{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=J$(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=pT("rc",s),l=pT("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],d=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===s?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const ND=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(0===O(r.shape)){const e=a.map(((e,t)=>e[0]+r.shape[t]+e[1]));return MA({backend:n,attrs:{shape:e,value:i,dtype:r.dtype}})}const o=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SD(r.shape,a,i):new ID(r.shape,a,i),l=[[i]];return n.runWebGLProgram(o,[r],r.dtype,l)},$D={kernelName:mn,backendName:"webgl",kernelFunc:ND},CD=UT({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),TD={kernelName:bn,backendName:"webgl",kernelFunc:CD},ED={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=[],u=U(a,r.shape);let c=u;const h=Bo(c,o);let d,p=r;if(null!=h&&(p=aE({inputs:{x:r},backend:n,attrs:{perm:h}}),c=Wo(c.length,o),l.push(p)),zo("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:s,outDtype:r}=VC(p.shape,p.dtype,e,c);d=n.makeTensorInfo(s,r,t)}else{const[e,t]=Lo(p.shape,c),s=O(t),a=XT({inputs:{x:p},backend:n,attrs:{shape:[-1,s]}}),i=QT(a,kr(r.dtype),"prod",n);d=XT({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(d);const e=Mo(d.shape,u);d=XT({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},RD={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=s,l=r.map((e=>n.readSync(e.dataId))),u=r.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[d,p,f]=GC(l,u,c,a.shape,a.dtype,h,i.shape,o),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,a.dtype,p);return g.concat([m])}},AD={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:a}=t,i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=HC(i,s.shape,s.dtype,o,r.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],s.dtype,c)]}},FD={kernelName:kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,g]=jC(u,r.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,g)}},DD=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=qC(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},_D={kernelName:In,backendName:"webgl",kernelFunc:DD},OD=WT({opSnippet:"return 1.0 / x;"}),LD={kernelName:Nn,backendName:"webgl",kernelFunc:OD},MD=WT({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),zD={kernelName:$n,backendName:"webgl",kernelFunc:MD},BD=WT({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),PD={kernelName:Fn,backendName:"webgl",kernelFunc:BD};class WD{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class UD{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const VD={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=de().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new UD(r.shape,l,u,a,i):new WD(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],"float32")}};class GD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const HD={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new GD(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class jD{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class qD{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const KD={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=de().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new qD(r.shape,l,u,a,i):new jD(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],r.dtype)}};class XD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const YD={kernelName:En,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new XD(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class ZD{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=J$(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class JD{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=pT("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=J$(n);function o(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(s.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const QD={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=U(a,r.shape);if(0===i)return AT({inputs:{x:r},backend:n});const l=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new JD(r.shape,o):new ZD(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class e_{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const t_={kernelName:vs,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=new e_(s.shape,a),[u,c]=Ju(i,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[s],s.dtype,h)}},n_=WT({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),s_={kernelName:_n,backendName:"webgl",kernelFunc:n_},r_=WT({opSnippet:"return inversesqrt(x);",cpuKernelImpl:KC}),a_={kernelName:On,backendName:"webgl",kernelFunc:r_};class i_{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=J$(r.length),l=J$(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const o_={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=oc(0,r,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const p=XT({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=XT({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),m=new i_(l,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(m,[f,p,g],f.dtype),x=XT({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class l_{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===de().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===s?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const u_={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=new l_(r.shape[0],r.shape[1],a.shape[1],i),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,a],"int32",l)}};class c_{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<t.length;s++)i.push(`${n[s]}`),s<e&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=J$(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const h_={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new c_(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],vr(r.dtype,a.dtype))}},d_=WT({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${lc};\n  float scale = ${uc};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),p_={kernelName:Bn,backendName:"webgl",kernelFunc:d_},f_=WT({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:YC}),g_={kernelName:Gn,backendName:"webgl",kernelFunc:f_},m_=WT({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),b_={kernelName:Vn,backendName:"webgl",kernelFunc:m_},x_=WT({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),y_={kernelName:Wn,backendName:"webgl",kernelFunc:x_},w_=WT({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),v_={kernelName:Un,backendName:"webgl",kernelFunc:w_},k_=WT({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),I_={kernelName:Hn,backendName:"webgl",kernelFunc:k_},S_={kernelName:Kn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;A(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=[],c=ND({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=Qu(c.shape,a,o,!1),d=ec(h.length,a.length,!1),p=tc(c.shape,a,o,!1),f=XT({inputs:{x:c},backend:n,attrs:{shape:h}}),g=aE({inputs:{x:f},backend:n,attrs:{perm:d}}),m=XT({inputs:{x:g},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(g),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}},N_={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,g]=QC(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}},$_={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=eT(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},C_={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=tT(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}},T_={kernelName:es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=tT(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}},E_={kernelName:ts,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=oc(0,r,o);if("string"===a.dtype){const e=n.bufferSync(r),t=n.bufferSync(a),s=Qs(n.readSync(i.dataId)[0]),p=XC(e,t,o,d,c,u,l,h,s,!1);return n.makeTensorInfo(o,p.dtype,p.values)}const p=new i_(u,l,r.shape.length,a.shape.length,h,[d,1],!1),f=n.runWebGLProgram(p,[a,r,i],a.dtype),g=XT({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),g}},R_={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=U(i,r.shape)[0],l=Ac(r,a,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const s=tR({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}},A_="return sqrt(x);",F_=WT({opSnippet:A_,packedOpSnippet:A_,cpuKernelImpl:nT}),D_={kernelName:jn,backendName:"webgl",kernelFunc:F_},__={kernelName:ss,backendName:"webgl",kernelFunc:WT({opSnippet:"return x * x;"})},O_="return (a - b) * (a - b);",L_=UT({opSnippet:O_,packedOpSnippet:O_}),M_={kernelName:ns,backendName:"webgl",kernelFunc:L_},z_={kernelName:ys,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new wT(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class B_{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=J$(n.length),a=J$(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const P_={kernelName:rs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:b,begin:x,end:y,strides:w}=ni(r.shape,a,i,o,l,u,c,h,d);let v;if(g)v=XT({inputs:{x:r},backend:n,attrs:{shape:f}});else if(m||b){A(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=Va(x,y,w),t=tR({inputs:{x:r},backend:n,attrs:{begin:x,size:e}});v=XT({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=Na(r.shape,r.dtype,e),s=sT(p,t,w,x);v=n.makeTensorInfo(f,r.dtype,s.values)}else{const e=new B_(x,w,p);v=n.runWebGLProgram(e,[r],r.dtype)}const k=XT({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}},W_={kernelName:as,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,g]=rT(d,p,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}},U_={kernelName:is,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=aT(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},V_={kernelName:os,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=iT(i,r);return n.makeTensorInfo(a.shape,"int32",o)}},G_=WT({opSnippet:"return tan(x);"}),H_={kernelName:us,backendName:"webgl",kernelFunc:G_},j_=WT({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),q_={kernelName:cs,backendName:"webgl",kernelFunc:j_};class K_{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const s=J$(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let t=0;t<e.length;t++)s.push(`imod(${n[t]}, ${e[t]})`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function X_(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>Qs(e))):e,s=Na(r.shape,r.dtype,t),i=lT(s,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new K_(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}const Y_={kernelName:hs,backendName:"webgl",kernelFunc:X_};class Z_{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class J_{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Q_(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function eO(e){let t=1;for(;t<e;)t*=2;return t}const tO={kernelName:ds,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=de().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=de().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<o||a>l){const e=n.readSync(r.dataId),[t,s]=uT(e,u,r.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[r,MA({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(r):r,f=O(u)/c,g=XT({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&Q_(n,p);const m=eO(a),b=eO(c);let x=null;const y=()=>null===x?[g,g]:[g,x],w=(e,t,s)=>{const r=y(),a=new Z_(s),i=[[c],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(a,r,"int32",i),Q_(n,o)};for(let e=1;e<m;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,b])}for(let e=b;e>m;e/=2){const t=y(),s=new J_([f,e/2]),r=[[c],[null===x?1:0],[m]],a=x;x=n.runWebGLProgram(s,t,"int32",r),Q_(n,a);const i=m/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,x.shape)}let v=x;x=tR({inputs:{x},backend:n,attrs:{begin:0,size:[f,a]}}),Q_(n,v);let k=nF({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});Q_(n,g);const I=u.slice(0,-1);I.push(a),v=x,x=XT({inputs:{x},attrs:{shape:I},backend:n}),Q_(n,v);const S=k;return k=XT({inputs:{x:k},attrs:{shape:I},backend:n}),Q_(n,S),[k,x]}};class nO{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(s){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const sO={kernelName:ps,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],m=new nO(h,d,i,o,l,[c,f,g,p]);return n.runWebGLProgram(m,[r,a],"float32")}},rO={kernelName:gs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;O$(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=hT(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},aO={kernelName:ms,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[a]=e;const t=tR({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),s=XT({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=s,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class iO{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const oO=[lE,cE,dE,fE,bE,wE,vE,kE,TE,EE,AE,DE,OE,ME,BE,UE,VE,jE,qE,KE,ZE,sR,rR,aR,cR,pR,mR,_T,yR,CR,OR,PR,WR,UR,VR,GR,jR,KR,YR,nA,sA,rA,iA,uA,dA,pA,gA,bA,xA,wA,vA,IA,NA,CA,EA,FA,OA,zA,PA,VA,HA,KA,ZA,JA,eF,sF,aF,oF,FT,lF,SR,cF,dF,fF,MT,mF,xF,yF,vF,IF,NF,CF,EF,FF,_F,LF,zF,BF,PF,VF,GF,HF,jF,qF,XF,JF,eD,uD,KT,cD,dD,fD,mD,oR,xD,vD,kD,$D,TD,PT,ED,RD,AD,FD,_D,uR,sD,LD,zD,PD,YT,VD,HD,KD,YD,QD,t_,s_,a_,o_,u_,h_,p_,g_,b_,y_,v_,nR,lD,I_,S_,N_,$_,C_,T_,E_,R_,D_,__,M_,z_,P_,W_,U_,V_,iD,rE,H_,q_,Y_,tO,sO,iE,rO,aO,{kernelName:bs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,l=[];let u=0;const c=Bo([u],o);let h=r;null!=c&&(h=aE({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=Wo(1,o)[0]);const d=Hc(h.shape,u,i),p=O([h.shape[u]]),f=XT({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const g=kr(r.dtype),m=(e,t,s,r,a)=>{const i=e.shape[0],o=e.shape[1],u=Gc(o,a),c=new iO({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,s],r);if(l.push(h),h.shape[1]===a)return h;const d=DD({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=X_({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),m(h,t,p,r,a)},b=XT({inputs:{x:m(f,"unsortedSegmentSum",a,g,i)},backend:n,attrs:{shape:d}});let x=b;if(null!=c){l.push(b);const e=Po(c);x=aE({inputs:{x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},wD];for(const e of oO)Fs(e);function lO(e){return lO="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},lO(e)}function uO(){uO=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,s=Object.defineProperty||function(e,t,n){e[t]=n.value},r="function"==typeof Symbol?Symbol:{},a=r.iterator||"@@iterator",i=r.asyncIterator||"@@asyncIterator",o=r.toStringTag||"@@toStringTag";function l(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,n){return e[t]=n}}function u(e,t,n,r){var a=t&&t.prototype instanceof d?t:d,i=Object.create(a.prototype),o=new N(r||[]);return s(i,"_invoke",{value:v(e,n,o)}),i}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var h={};function d(){}function p(){}function f(){}var g={};l(g,a,(function(){return this}));var m=Object.getPrototypeOf,b=m&&m(m($([])));b&&b!==t&&n.call(b,a)&&(g=b);var x=f.prototype=d.prototype=Object.create(g);function y(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function w(e,t){function r(s,a,i,o){var l=c(e[s],e,a);if("throw"!==l.type){var u=l.arg,h=u.value;return h&&"object"==lO(h)&&n.call(h,"__await")?t.resolve(h.__await).then((function(e){r("next",e,i,o)}),(function(e){r("throw",e,i,o)})):t.resolve(h).then((function(e){u.value=e,i(u)}),(function(e){return r("throw",e,i,o)}))}o(l.arg)}var a;s(this,"_invoke",{value:function(e,n){function s(){return new t((function(t,s){r(e,n,t,s)}))}return a=a?a.then(s,s):s()}})}function v(e,t,n){var s="suspendedStart";return function(r,a){if("executing"===s)throw new Error("Generator is already running");if("completed"===s){if("throw"===r)throw a;return{value:void 0,done:!0}}for(n.method=r,n.arg=a;;){var i=n.delegate;if(i){var o=k(i,n);if(o){if(o===h)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===s)throw s="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);s="executing";var l=c(e,t,n);if("normal"===l.type){if(s=n.done?"completed":"suspendedYield",l.arg===h)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(s="completed",n.method="throw",n.arg=l.arg)}}}function k(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,k(e,t),"throw"===t.method))return h;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return h}var s=c(n,e.iterator,t.arg);if("throw"===s.type)return t.method="throw",t.arg=s.arg,t.delegate=null,h;var r=s.arg;return r?r.done?(t[e.resultName]=r.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,h):r:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,h)}function I(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function S(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function N(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(I,this),this.reset(!0)}function $(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var s=-1,r=function t(){for(;++s<e.length;)if(n.call(e,s))return t.value=e[s],t.done=!1,t;return t.value=void 0,t.done=!0,t};return r.next=r}}return{next:C}}function C(){return{value:void 0,done:!0}}return p.prototype=f,s(x,"constructor",{value:f,configurable:!0}),s(f,"constructor",{value:p,configurable:!0}),p.displayName=l(f,o,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===p||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,f):(e.__proto__=f,l(e,o,"GeneratorFunction")),e.prototype=Object.create(x),e},e.awrap=function(e){return{__await:e}},y(w.prototype),l(w.prototype,i,(function(){return this})),e.AsyncIterator=w,e.async=function(t,n,s,r,a){void 0===a&&(a=Promise);var i=new w(u(t,n,s,r),a);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},y(x),l(x,o,"Generator"),l(x,a,(function(){return this})),l(x,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),n=[];for(var s in t)n.push(s);return n.reverse(),function e(){for(;n.length;){var s=n.pop();if(s in t)return e.value=s,e.done=!1,e}return e.done=!0,e}},e.values=$,N.prototype={constructor:N,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(S),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function s(n,s){return i.type="throw",i.arg=e,t.next=n,s&&(t.method="next",t.arg=void 0),!!s}for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r],i=a.completion;if("root"===a.tryLoc)return s("end");if(a.tryLoc<=this.prev){var o=n.call(a,"catchLoc"),l=n.call(a,"finallyLoc");if(o&&l){if(this.prev<a.catchLoc)return s(a.catchLoc,!0);if(this.prev<a.finallyLoc)return s(a.finallyLoc)}else if(o){if(this.prev<a.catchLoc)return s(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return s(a.finallyLoc)}}}},abrupt:function(e,t){for(var s=this.tryEntries.length-1;s>=0;--s){var r=this.tryEntries[s];if(r.tryLoc<=this.prev&&n.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var a=r;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,h):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),h},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),S(n),h}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var s=n.completion;if("throw"===s.type){var r=s.arg;S(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:$(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),h}},e}function cO(e,t,n,s,r,a,i){try{var o=e[a](i),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(s,r)}function hO(e){return function(){var t=this,n=arguments;return new Promise((function(s,r){var a=e.apply(t,n);function i(e){cO(a,s,r,i,o,"next",e)}function o(e){cO(a,s,r,i,o,"throw",e)}i(void 0)}))}}var dO,pO={0:"Apel Envy",1:"Apel Malang",2:"Lemon California",3:"Mangga Harumanis",4:"Pisang Cavendish",5:"Pisang Kepok",6:"Semangka Merah"};window.addEventListener("load",(function(){var e=document.getElementById("right-image"),t=document.getElementById("no-1"),n=document.getElementById("no-2"),s=document.getElementById("no-3"),r=document.getElementById("no-4");e.src=y,t.src=w,n.src=v,s.src=k,r.src=I})),function(){var e=hO(uO().mark((function e(){return uO().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("Load Model"),e.next=3,Ym("./tfjsmodel/model.json");case 3:dO=e.sent,console.log("Model Loaded");case 5:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}()();var fO=document.querySelector("#form-input"),gO=document.querySelector("#input-file"),mO=document.querySelector("#image-input"),bO=document.querySelector(".button-start");document.querySelector(".image"),fO.addEventListener("click",(function(e){gO.click(),e.target.addEventListener("change",function(){var e=hO(uO().mark((function e(t){var n,s,r;return uO().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=t.target,s=n.files[0],(r=new FileReader).addEventListener("load",(function(){mO.setAttribute("src",r.result)})),r.readAsDataURL(s);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}())})),bO.addEventListener("click",hO(uO().mark((function e(){var t,n;return uO().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,xO(mO);case 2:t=e.sent,console.log(t),n=Array.from(t).map((function(e,t){return{probability:e,className:pO[t]}})),console.log(n);case 6:case"end":return e.stop()}}),e)}))));var xO=function(e){console.log(e);var t=Pa(e).resizeNearestNeighbor([200,200]).toFloat().div(fi(255)).expandDims();return dO.predict(t).data()}})()})();